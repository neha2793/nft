[{"/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/_app.js":"1","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/all-nft.js":"2","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/api/hello.js":"3","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/components/layout/mainfooter.js":"4","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/components/layout/mainheader.js":"5","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/create-nft.js":"6","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/forget_password.js":"7","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/index.js":"8","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/login.js":"9","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/resell-nft.js":"10","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/signup.js":"11","/home/anshuman/Desktop/2kpaid/nft-marketplace/components/Toast/index.js":"12","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/faq.js":"13","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/map-manage-shipping-container.js":"14","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/map-shipping-container.js":"15","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/map-slime-seat.js":"16","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/my-nft.js":"17","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/my-profile.js":"18","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/nfts.js":"19","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/purchased-nfts.js":"20","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/reset-password.js":"21","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/shipping-container-edit.js":"22","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/shipping-container-video.js":"23","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/shipping-container.js":"24","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/slime-seat-management.js":"25","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/transaction-history.js":"26","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/view-profile.js":"27","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/wishlist.js":"28"},{"size":1906,"mtime":1679564010003,"results":"29","hashOfConfig":"30"},{"size":23578,"mtime":1679555036917,"results":"31","hashOfConfig":"30"},{"size":170,"mtime":1677840740567,"results":"32","hashOfConfig":"30"},{"size":4560,"mtime":1679554924663,"results":"33","hashOfConfig":"30"},{"size":6289,"mtime":1679554916950,"results":"34","hashOfConfig":"30"},{"size":12868,"mtime":1679555025797,"results":"35","hashOfConfig":"30"},{"size":2874,"mtime":1679553036531,"results":"36","hashOfConfig":"30"},{"size":23830,"mtime":1679555062177,"results":"37","hashOfConfig":"30"},{"size":4459,"mtime":1679555072110,"results":"38","hashOfConfig":"30"},{"size":2266,"mtime":1677840740907,"results":"39","hashOfConfig":"30"},{"size":5262,"mtime":1679555202843,"results":"40","hashOfConfig":"30"},{"size":912,"mtime":1677840751113,"results":"41","hashOfConfig":"30"},{"size":7937,"mtime":1679552365087,"results":"42","hashOfConfig":"30"},{"size":8348,"mtime":1677840740903,"results":"43","hashOfConfig":"30"},{"size":9428,"mtime":1677840740903,"results":"44","hashOfConfig":"30"},{"size":9173,"mtime":1677840740903,"results":"45","hashOfConfig":"30"},{"size":10067,"mtime":1679462109830,"results":"46","hashOfConfig":"30"},{"size":12825,"mtime":1679555115120,"results":"47","hashOfConfig":"30"},{"size":20722,"mtime":1679555124617,"results":"48","hashOfConfig":"30"},{"size":7467,"mtime":1678794985470,"results":"49","hashOfConfig":"30"},{"size":3875,"mtime":1679553026468,"results":"50","hashOfConfig":"30"},{"size":6276,"mtime":1679461617166,"results":"51","hashOfConfig":"30"},{"size":15660,"mtime":1679462059904,"results":"52","hashOfConfig":"30"},{"size":12742,"mtime":1677840740907,"results":"53","hashOfConfig":"30"},{"size":46216,"mtime":1679463090841,"results":"54","hashOfConfig":"30"},{"size":6684,"mtime":1679555219107,"results":"55","hashOfConfig":"30"},{"size":12893,"mtime":1679555244720,"results":"56","hashOfConfig":"30"},{"size":13812,"mtime":1679555260037,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},"reolzd",{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":67,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},"/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/_app.js",["166","167","168","169","170","171","172"],[],"/* pages/_app.js */\nimport * as ReactAll from \"react\";\nimport React, { useEffect, useState } from \"react\";\nimport '../styles/globals.css'\nimport './assetss/css/bootstrap.min.css';\nimport './assetss/css/style.css';\nimport './assetss/css/responsive.css';\nimport './assetss/css/font-awesome.min.css';\n\nimport { useRouter } from 'next/router'\nimport { ToastContainer } from \"react-toastify\";\nimport toast from \"../components/Toast\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction MyApp({ Component, pageProps }) {\n\n  const notify = ReactAll.useCallback((type, message) => {\n    toast({ type, message });\n  }, []);\n  const router = useRouter()\n   \n  useEffect(() => {\n    // window.$ = window.jquery = require('jquery');\n    // window.dt = require('datatables.net');\n   \n  }, [])\n  \n  return (\n    <div>\n       <React.StrictMode>\n       <Component {...pageProps} />\n       <ToastContainer\n        position=\"top-right\"\n        autoClose={8000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        draggable={false}\n        pauseOnVisibilityChange\n        closeOnClick\n        pauseOnHover\n      />\n      </React.StrictMode>\n      {/* <Mainfooter/> */}\n      <script type=\"text/javascript\"src=\"https://code.jquery.com/jquery-3.5.1.js\"> </script>\n      <script type=\"text/javascript\" src=\"https://cdn.datatables.net/1.10.22/js/jquery.dataTables.min.js\"> </script>\n      <link rel=\"stylesheet\" href=\"https://cdn.datatables.net/1.10.22/css/jquery.dataTables.min.css\" />\n\n      <script src=\"./assets/js/jquery.min.js\"></script>\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\n      <script src=\"./assets/js/bootstrap.min.js\"></script>\n      <script src='https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js'></script>\n      <script src='https://npmcdn.com/moralis/dist/moralis.js'></script>\n\n    </div>\n  )\n}\n\nexport default MyApp","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/all-nft.js",["173","174","175"],[],"/* pages/index.js */\r\nimport * as React from \"react\";\r\nimport { ethers } from 'ethers'\r\nimport toast from \"../components/Toast\";\r\nimport { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport Web3Modal from 'web3modal'\r\nimport Select from 'react-select'\r\nimport Mainheader from './components/layout/mainheader';\r\nimport Mainfooter from './components/layout/mainfooter';\r\nimport { useRouter } from 'next/router'\r\n\r\nimport {\r\n  marketplaceAddress\r\n} from '../config'\r\n\r\nimport NFTMarketplace from '../artifacts/contracts/NFTMarketplace.sol/NFTMarketplace.json'\r\n\r\n\r\n\r\n\r\n\r\nexport default function Home() {\r\n  const router = useRouter()\r\n  const [nfts, setNfts] = useState([])\r\n  const [show, setShow] = useState(false);\r\n  const [html, Sethtml] = useState('');\r\n  const [baseURL, setBaseUrl] = useState('');\r\n  const [rndmNumber, setRndmNumber] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  \r\n\r\n  const checkedArr = [];\r\n\r\n  const options = [\r\n    { value: '', label: 'Reset filters' },\r\n    { value: 'by_user', label: 'By User' },\r\n    { value: 'newest_item', label: 'Newest NFTs' },\r\n    { value: 'sold_item', label: 'Sold NFTs' },\r\n    { value: 'asc', label: 'Low to High Price' },\r\n    { value: 'desc', label: 'High to Low Price' },\r\n  ]\r\n \r\n\r\n  const [loadingState, setLoadingState] = useState('not-loaded')\r\n  useEffect(() => {\r\n    loadNFTs()\r\n  }, [])\r\n\r\n  const notify = React.useCallback((type, message) => {\r\n    toast({ type, message });\r\n  }, []);\r\n  \r\n\r\n  async function  users(e){\r\n  \r\n    if(e.value == 'by_user'){\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      if(user){\r\n        var formData = new FormData();\r\n        formData.append('by_user', e.value);\r\n        // const response = await axios.get(process.env.NEXT_PUBLIC_BASE_URL+'/api/get-users', formData);\r\n        axios.get(process.env.NEXT_PUBLIC_BASE_URL+'/api/get-users' ,{\r\n          headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer '+user.access_token\r\n          },\r\n        }).then((response)  => {\r\n          const data = response.data.user;\r\n          setShow(true);\r\n          Sethtml(\r\n            <div>\r\n              <ul className=\"nft_users\">\r\n                {data.map((user, key) => {\r\n                  return (\r\n                    <li key={key}>\r\n                      <input className=\"abc\" id={user.id} value={user.id} name=\"ids[]\"  data-id={user.id} onChange={handleChange} type=\"checkbox\" /><label htmlFor={user.id}> {user.name}</label>\r\n                    </li>\r\n                  )\r\n                })}\r\n              </ul>\r\n            </div>\r\n          );\r\n        }).catch(function (error) {\r\n          // handle error\r\n          if(error.response){\r\n  \r\n            if(error.response.status == 400){\r\n              notify(\"error\", error.response.data.error)\r\n            }else if(error.response.status == 401){\r\n              localStorage.removeItem(\"user\")\r\n              router.push('/login')\r\n            } else{\r\n                notify(\"error\", 'Something went wrong please try again!')\r\n            }\r\n          }else{\r\n            console.log(error)\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    if(e.value == 'newest_item'){\r\n      loadNFTs('newest_item');\r\n    }\r\n\r\n    if(e.value == 'sold_item'){\r\n      loadNFTs('sold_item');\r\n    }\r\n    if(e.value == ''){\r\n      loadNFTs();\r\n    }\r\n\r\n    if(e.value == 'asc' || e.value == 'desc' ){\r\n      loadNFTs(e.value);\r\n    }\r\n  }\r\n  function close(){\r\n    setShow(false);\r\n  }\r\n  async function handleChange(event) {\r\n\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (event.target.checked) {\r\n      checkedArr.push(event.target.value);\r\n      var fd = new FormData();\r\n      fd.append('ids[]', checkedArr);\r\n      loadNFTs(fd, 'by_filter', checkedArr);\r\n    } else {\r\n      let index = checkedArr.findIndex(a => a === event.target.value);\r\n      checkedArr.splice(index,1);\r\n      var fd = new FormData();\r\n      fd.append('ids[]', checkedArr);\r\n      // const response = await axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/get-user-nft-collections',fd);\r\n      loadNFTs(fd, 'by_filter', checkedArr);\r\n    }\r\n  }\r\n  async function loadNFTs(filter_ids, flag, idsArr) {\r\n   \r\n    /* create a generic provider and query for unsold market items */\r\n    // Check auth\r\n\r\n    // console.log(filter_ids)\r\n    // console.log(flag)\r\n    // console.log(idsArr)\r\n    var temp = 'logout';\r\n    const user = JSON.parse(localStorage.getItem('user'));  \r\n    if(user){\r\n      setLoading(true) \r\n      const provider = new ethers.providers.JsonRpcProvider(\"https://rpc-mumbai.maticvigil.com\")\r\n      const contract = new ethers.Contract(marketplaceAddress, NFTMarketplace.abi, provider)\r\n      const data = await contract.fetchMarketItems()\r\n      \r\n      var response = await axios.get(process.env.NEXT_PUBLIC_BASE_URL+'/api/check-auth',{\r\n        headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer '+user.access_token\r\n        },\r\n      }).then((response)  =>{\r\n        temp = 'login';\r\n      }).catch(function (error) {\r\n        // handle error\r\n        if(error.response.status == 400){\r\n          notify(\"error\", error.response.data.error)\r\n        }else if(error.response.status == 401) {\r\n          temp = 'logout';\r\n          localStorage.removeItem(\"user\")\r\n          router.push('/login')\r\n        }else{\r\n          notify(\"error\", 'Something went wrong please try again!')\r\n        } \r\n      })\r\n\r\n      if(temp == 'login'){\r\n        if(Boolean(filter_ids) && Boolean(flag)){\r\n\r\n         \r\n          var fd = new FormData();\r\n          fd.append('flag', 'tested');\r\n          \r\n          if(idsArr.length > 0){\r\n            var nft_response =  await  axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/nft-profile-image', filter_ids ,{\r\n              headers: {\r\n\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer '+user.access_token\r\n              },\r\n            })\r\n          }else{\r\n\r\n            var nft_response =  await  axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/nft-profile-image',fd ,{\r\n              headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer '+user.access_token\r\n              },\r\n            })\r\n          }\r\n        }else{\r\n\r\n          if(filter_ids == 'newest_item'){\r\n            var fd = new FormData();\r\n            fd.append('filter', filter_ids);\r\n            var nft_response =  await  axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/nft-profile-image',fd ,{\r\n              headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer '+user.access_token\r\n              },\r\n            })\r\n          }else if(filter_ids == 'sold_item'){\r\n            var fd = new FormData();\r\n            fd.append('filter', filter_ids);\r\n            var nft_response =  await  axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/nft-profile-image',fd ,{\r\n              headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer '+user.access_token\r\n              },\r\n            })\r\n          }else if(filter_ids == 'asc' || filter_ids == 'desc' ) {\r\n            var fd = new FormData();\r\n            fd.append('inOrder', filter_ids);\r\n            var nft_response =  await  axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/nft-profile-image',fd ,{\r\n              headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer '+user.access_token\r\n              },\r\n            })\r\n          }else{\r\n            var nft_response =  await  axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/nft-profile-image',fd ,{\r\n              headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer '+user.access_token\r\n              },\r\n            })\r\n          }\r\n        }\r\n        \r\n        const userNFT = nft_response.data.user_nft\r\n        const reponsePriceExchange = await axios.get('https://api.coinconvert.net/convert/matic/usd?amount='+1)\r\n        setBaseUrl(nft_response.data.base_url)\r\n        const items = await Promise.all(userNFT.map(async (i, index) => {\r\n          var profileImage = '';\r\n          var user_name = '';\r\n          nft_response.data.profilesData.forEach(value => {\r\n            if(value.id == i.user_id){\r\n              profileImage = value.profile_image,\r\n              user_name = value.name\r\n            }\r\n          });\r\n          const tokenUri = await contract.tokenURI(i.tokenID)\r\n          const USDPrice = i.price * reponsePriceExchange.data.USD;\r\n\r\n          if(reponsePriceExchange){\r\n            if(tokenUri.split('/')[2] ==  'infura-ipfs.io'){\r\n              var getwayURL = 'https://gateway.moralisipfs.com/ipfs/'+tokenUri.split('/')[4]\r\n              const meta = await axios.get(getwayURL) \r\n            \r\n              if(meta.data != undefined){\r\n                \r\n                let price = ethers.utils.formatUnits(i.string_price, 'ether')\r\n              \r\n                let item = {\r\n                  price,\r\n                  DollarPrice:USDPrice,\r\n                  string_price:i.string_price,\r\n                  tokenID: i.tokenID,\r\n                  seller: i.seller,\r\n                  image: meta.data.image,\r\n                  name: meta.data.name,\r\n                  description: meta.data.description,\r\n                  pImage : profileImage,\r\n                  Uname : user_name,\r\n                  wishlist : i.wishlist,\r\n                  wishlist_id : i.wishlist_id ? i.wishlist_id : '',\r\n                  id : i.id,\r\n                  status : i.status,\r\n                }\r\n               \r\n                return item\r\n              }\r\n            }\r\n          }\r\n        }))\r\n\r\n        setNfts(items)\r\n        setLoading(false)\r\n        setLoadingState('loaded')\r\n      }\r\n    }else{\r\n      router.push('/login')\r\n    } \r\n  }\r\n\r\n  async function buyNft(nft) {\r\n\r\n    console.log(nft)\r\n    /* needs the user to sign the transaction, so will use Web3Provider and sign it */\r\n  \r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    var temp = 'logout';\r\n    var response = await axios.get(process.env.NEXT_PUBLIC_BASE_URL+'/api/check-auth',{\r\n      headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': 'Bearer '+user.access_token\r\n      },\r\n    }).then((response)  =>{\r\n      temp = 'login';\r\n    }).catch(function (error) {\r\n      // handle error\r\n      if(error.response.status == 400){\r\n        notify(\"error\", error.response.data.error)\r\n      }else if(error.response.status == 401) {\r\n        temp = 'logout';\r\n        localStorage.removeItem(\"user\")\r\n        router.push('/login')\r\n      }else{\r\n        notify(\"error\", 'Something went wrong please try again!')\r\n      } \r\n    })\r\n\r\n    if(temp == 'login' ){\r\n\r\n      document.getElementById('button_disabled'+nft.id).innerHTML = 'Processing...';\r\n      document.getElementById('button_disabled'+nft.id).disabled = true;\r\n      var transaction = '';\r\n      var price = '';\r\n      try {\r\n        const web3Modal = new Web3Modal()\r\n        const connection = await web3Modal.connect()\r\n        const provider = new ethers.providers.Web3Provider(connection)\r\n        const signer = provider.getSigner()\r\n        const contract = new ethers.Contract(marketplaceAddress, NFTMarketplace.abi, signer)\r\n    \r\n        /* user will be prompted to pay the asking proces to complete the transaction */\r\n        price = ethers.utils.parseUnits(nft.price, 'ether') \r\n        transaction = await contract.createMarketSale(nft.tokenID, {\r\n          value: price\r\n        }) \r\n        await transaction.wait()\r\n        // return transaction;\r\n      } catch (error) {\r\n        if(error.code == '-32603'){\r\n          notify('error','Insufficient funds for gas * price + value!')\r\n          document.getElementById('button_disabled'+nft.id).innerHTML = 'Buy';\r\n          document.getElementById('button_disabled'+nft.id).disabled = false;\r\n        }\r\n        if(error.code == 'ACTION_REJECTED'){\r\n          notify('error','Transaction rejected!')\r\n          document.getElementById('button_disabled'+nft.id).innerHTML = 'Buy';\r\n          document.getElementById('button_disabled'+nft.id).disabled = false;\r\n        }\r\n      }\r\n      console.log(transaction);\r\n      if(transaction){\r\n        let fd = new FormData();\r\n        fd.append('product_id', nft.id)\r\n        fd.append('name', nft.name)\r\n        fd.append('price', nft.price)\r\n        fd.append('string_price', nft.string_price)\r\n        fd.append('description', nft.description)\r\n        fd.append('image', nft.image)\r\n        fd.append('tokenID', nft.tokenID)\r\n        fd.append('hash_token', transaction.hash)\r\n        fd.append('from_wallet', transaction.from)\r\n        fd.append('gasLimit', JSON.stringify(transaction.gasLimit))\r\n        fd.append('gasPrice', JSON.stringify(transaction.gasPrice))\r\n        fd.append('maxFeePerGas', JSON.stringify(transaction.maxFeePerGas))\r\n        fd.append('maxPriorityFeePerGas', JSON.stringify(transaction.maxPriorityFeePerGas))\r\n        \r\n        axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/user-buy-nft', fd,{\r\n          headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer '+user.access_token\r\n          },\r\n        }).then((response)  => {\r\n          notify(\"success\", 'Buy NFT successfully!')\r\n          const data = response.data;\r\n        }).catch(function (error) {\r\n          // handle error\r\n          if(error.response.status == 400){\r\n            notify(\"error\", error.response.data.error)\r\n          }else if(error.response.status == 401) {\r\n            localStorage.removeItem(\"user\")\r\n            router.push('/login')\r\n          }else{\r\n            notify(\"error\", 'Something went wrong please try again!')\r\n          } \r\n        })\r\n\r\n        let transaction_detail = new FormData();\r\n        transaction_detail.append('product_id', nft.id)\r\n        transaction_detail.append('Transaction_Token', 'ABC001567IUOP')\r\n        transaction_detail.append('Price', nft.price)\r\n        transaction_detail.append('Quantity', 1)\r\n\r\n        axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/order-nft', transaction_detail,{\r\n          headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer '+user.access_token\r\n          },\r\n        }).then((response)  => {\r\n          const data = response.data;\r\n        }).catch(function (error) {\r\n          // handle error\r\n          if(error.response.status == 400){\r\n            notify(\"error\", error.response.data.error)\r\n          }else if(error.response.status == 401) {\r\n            localStorage.removeItem(\"user\")\r\n            router.push('/login')\r\n          }else{\r\n            notify(\"error\", 'Something went wrong please try again!')\r\n          } \r\n        })\r\n        loadNFTs()\r\n      }\r\n     \r\n    }\r\n  }\r\n\r\n  async function wishlist(wishlist_id, product_id){\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    \r\n    \r\n    if(Boolean(wishlist_id)){\r\n      var fd = new FormData();\r\n      fd.append('wishlist_id', wishlist_id);\r\n      axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/remove-wishlist', fd ,{\r\n        headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer '+user.access_token\r\n        },\r\n      }).then((response)  => {\r\n       \r\n        nfts.forEach((nft, index) => {\r\n          if(Boolean(wishlist_id)){\r\n            if(nft.wishlist_id == wishlist_id){\r\n              // console.log(wishlist_id); \r\n              nft.wishlist_id = '';\r\n              nft.wishlist = 0;\r\n            }\r\n            nfts[index] = nft\r\n          }\r\n        });\r\n        setRndmNumber(Math.random())\r\n        setNfts(nfts)\r\n        notify(\"success\", 'Wishlist removed successfully!')\r\n      }).catch(function (error) {\r\n        // handle error\r\n        if(error.response){\r\n\r\n          if(error.response.status == 400){\r\n            notify(\"error\", error.response.data.error)\r\n          }else if(error.response.status == 401){\r\n            localStorage.removeItem(\"user\")\r\n            router.push('/login')\r\n          } else{\r\n              notify(\"error\", 'Something went wrong please try again!')\r\n          }\r\n        }else{\r\n          console.log(error)\r\n        }\r\n      })\r\n    }else{\r\n      var fd = new FormData();\r\n      fd.append('product_id', product_id);\r\n      axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/add-wishlist', fd ,{\r\n        headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer '+user.access_token\r\n        },\r\n      }).then((response)  => {\r\n       \r\n        nfts.forEach((nft, index) => {\r\n          if(Boolean(product_id)){\r\n            if(nft.id == product_id){\r\n              // console.log(wishlist_id); \r\n              nft.wishlist_id = response.data.wishlist.id;\r\n              nft.wishlist = 1;\r\n            }\r\n            nfts[index] = nft\r\n          }\r\n        });\r\n        console.log(nfts);\r\n\r\n        setRndmNumber(Math.random())\r\n        setNfts(nfts)\r\n        notify(\"success\", 'Wishlist added successfully!')\r\n      }).catch(function (error) {\r\n        // handle error\r\n        if(error.response){\r\n\r\n          if(error.response.status == 400){\r\n            notify(\"error\", error.response.data.error)\r\n          }else if(error.response.status == 401){\r\n            localStorage.removeItem(\"user\")\r\n            router.push('/login')\r\n          } else{\r\n              notify(\"error\", 'Something went wrong please try again!')\r\n          }\r\n        }else{\r\n          console.log(error)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  if (loadingState === 'loaded' && !nfts.length) return (\r\n    \r\n    <div>\r\n    <Mainheader />\r\n  \r\n    <section className=\"latestnft\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <h2 className=\"heading\">All NFTs<div className=\"divider\"></div></h2>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className='select-nfts'>\r\n              <Select options={options} onChange={users} id=\"long-value-select\" instanceId=\"long-value-select\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {loading ? (\r\n          <div className=\"loader-container\">\r\n            <div className=\"spinner\"></div>\r\n          </div>\r\n          \r\n        ) : (\r\n          ''\r\n        )}\r\n\r\n        <div className=\"\">\r\n          \r\n          <div className=\"row myfvtrow\">\r\n          <h1 className=\"py-10 px-20 text-3xl\"  >No items in marketplace</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    \r\n    </section>\r\n    <div id=\"modal-row\" className=\"modal\" style={{ display: show ? \"block\" : \"none\" }}>\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          \r\n          <div className=\"modal-header\">\r\n            <h4 className=\"modal-title\">Users</h4>\r\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={close}>&times;</button>\r\n          </div>\r\n\r\n          <div className=\"modal-body\">\r\n            {html}\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <Mainfooter />\r\n  </div>\r\n  )\r\n  return (\r\n   \r\n    <div>\r\n     \r\n           <Mainheader />\r\n          <section className=\"latestnft\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <h2 className=\"heading\">All NFTs<div className=\"divider\"></div></h2>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className='select-nfts'>\r\n                    <Select options={options} onChange={users} id=\"long-value-select\" instanceId=\"long-value-select\" />\r\n                  </div>\r\n                 \r\n                </div>\r\n              </div>\r\n              \r\n              {loading ? (\r\n                <div className=\"loader-container\">\r\n                  <div className=\"spinner\"></div>\r\n                </div>\r\n                \r\n              ) : (\r\n                <div className=\"\">\r\n                  {/* <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 pt-4\"> */}\r\n                  <div className=\"row myfvtrow\">\r\n                    {\r\n                    nfts.map((nft, i) => (\r\n                       \r\n                      nft?<div key={i} className=\"col-sm-6 col-md-4 col-lg-3 myfvt\">      \r\n                    {/* <div className=\"col-sm-6 col-md-4 col-lg-3 myfvt\"> */}\r\n                      <div className=\"nftbox\">\r\n                        <div className=\"nftbox-img\">\r\n                          <a href=\"#\"><img src={nft.image} className=\"img-fluid\" alt=\"\"/></a>\r\n                          <div className=\"counter\">\r\n                            {/* <span>717 : 6 : 32 : 34</span> */}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"nftbox-desc\">\r\n                          <div className=\"nftbox-desc-img\">\r\n                            {/* <div className=\"nftbox-user\"><a href=\"#\"><img src=\"assets/images/user.png\" className=\"img-fluid\" alt=\"\"/></a></div> */}\r\n                            <div className=\"nftbox-user\">\r\n                              <a href=\"#\"><img src={nft.pImage ?baseURL+ '/public/'+ nft.pImage : 'assets/images/user.png' } className=\"img-fluid\" alt=\"\"/>\r\n                              </a>\r\n                              <span>{nft.Uname.length > 9 ? nft.Uname.substring(0,9)+'...' :  nft.Uname}</span>\r\n                            </div>\r\n                           \r\n                          </div>\r\n\r\n                          <h3><a href=\"#\">{nft.name}</a></h3>\r\n                      \r\n                          <h5 className=\"rate\">\r\n                            $ {nft.DollarPrice.toFixed(7)}\r\n                            {\r\n                              nft.status == 'Listed' ?\r\n                                <span className=\"like-design\"><a  onClick={() => wishlist(nft.wishlist_id, nft.id)} id={nft.wishlist_id}  ><i className={nft.wishlist == 1 ? 'fa fa-heart':'fa fa-heart-o'} aria-hidden=\"true\"></i></a></span>\r\n                              :\r\n                              ''\r\n                            }\r\n                            </h5>\r\n                          <button className=\"btn btn-info\" id={'button_disabled'+nft.id}   onClick={() => buyNft(nft)} data-id={nft.tokenID} disabled={nft.status == 'sold' ? true : false}  >{nft.status == 'sold' ? 'Sold' : 'Buy'}</button>\r\n                        </div>\r\n                      </div>\r\n                      </div> : \"\"\r\n                      )) \r\n                    }\r\n                  </div>\r\n                </div>\r\n              )}  \r\n              \r\n            </div>\r\n          </section>\r\n  \r\n          <div id=\"modal-row\" className=\"modal\" style={{ display: show ? \"block\" : \"none\" }}>\r\n            <div className=\"modal-dialog\">\r\n              <div className=\"modal-content\">\r\n                \r\n                <div className=\"modal-header\">\r\n                  <h4 className=\"modal-title\">Users</h4>\r\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={close}>&times;</button>\r\n                </div>\r\n  \r\n                <div className=\"modal-body\">\r\n                  {html}\r\n                </div>\r\n  \r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Mainfooter />\r\n        </div>\r\n     \r\n    \r\n  \r\n  )\r\n}","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/api/hello.js",[],[],"/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/components/layout/mainfooter.js",["176","177","178","179","180","181","182","183","184","185"],[],"import React from 'react';\r\nimport Link from 'next/link'\r\nclass Mainfooter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {user: ''};\r\n  }\r\n  componentDidMount() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    this.setState({user: user})\r\n  }\r\n\r\n  CheckApproval(e){\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if(!user.user.is_verified == 1 ){\r\n      e.preventDefault()\r\n      alert('You do not have permission to access this option!')\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n      <footer className=\"footer-sec\">\r\n <div className=\"footer1\"></div>\r\n <div className=\"footer2\"></div>\r\n\r\n  <div className=\"container\">\r\n     <img src=\"assets/images/violet-ball.png\" className=\"img-fluid ball1\" alt=\"\"/>\r\n  <img src=\"assets/images/orange-ball.png\" className=\"img-fluid ball2\" alt=\"\"/>\r\n  <img src=\"assets/images/orange-ball.png\" className=\"img-fluid ball3\" alt=\"\"/>\r\n  <img src=\"assets/images/violet-ball.png\" className=\"img-fluid ball4\" alt=\"\"/>\r\n  <img src=\"assets/images/violet-ball.png\" className=\"img-fluid ball5\" alt=\"\"/>\r\n  <img src=\"assets/images/orange-ball.png\" className=\"img-fluid ball6\" alt=\"\"/>\r\n    <div className=\"row\">\r\n     <div className=\"col-md-4\">\r\n      <div className=\"footer-brand\">\r\n      <a className=\"footer-logo\" href=\"/\"><img src=\"assets/images/logo.png\" className=\"img-fluid\" alt=\"\"/></a>\r\n      <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\r\n      tempor</p>\r\n      </div>\r\n     </div>\r\n     <div className=\"col-md-2\">\r\n      <div className=\"footer-nav\">\r\n        <h2>Search</h2>\r\n        <ul>\r\n          <li style={{ display: this.state.user ? \"block\" : \"none\" }}>\r\n         \r\n            {/* <Link href=\"/create-nft\" >\r\n              <a>Create Your NFT</a>\r\n            </Link> */}\r\n            {/* <Link href=\"/all-nft\" >\r\n              <a>All NFTs</a>\r\n            </Link> */}\r\n          \r\n            {/* <a href=\"#\">All NFTs</a> */}\r\n          </li>\r\n          <li style={{ display: this.state.user ? \"block\" : \"none\" }}>\r\n            <a href=\"/slime-seat-management\"  >\r\n              Slime Seat\r\n            </a>\r\n          </li>\r\n\r\n          <li style={{ display: this.state.user ? \"block\" : \"none\" }}>\r\n         \r\n            <a href=\"/shipping-container-video\"  >\r\n              SC Video\r\n            </a>\r\n          </li> \r\n          <li style={{ display: this.state.user ? \"block\" : \"none\" }}>\r\n            <Link href=\"/transaction-history\" >\r\n              <a>Transaction History</a>\r\n            </Link>\r\n          </li>\r\n\r\n        </ul>\r\n      </div>\r\n     </div>\r\n     <div className=\"col-md-2\">\r\n      <div className=\"footer-nav\">\r\n        <h2>About Us</h2>\r\n        <ul>\r\n          <li style={{ display: this.state.user ? \"block\" : \"none\" }}>\r\n            {/* <Link href=\"/my-nft\" >\r\n              <a>My NFTs</a>\r\n            </Link> */}\r\n          </li>\r\n          <li><a href=\"https://2kpaid.com/app/public/about\">About</a></li>\r\n          <li><a href=\"https://2kpaid.com/app/public/contact\">Contact</a></li>\r\n          <li><a href=\"faq\">FAQ</a></li>\r\n        </ul>\r\n      </div>\r\n     </div>\r\n     <div className=\"col-md-4\">\r\n      <div className=\"footer-nav\">\r\n        <h2>Join Our Community </h2>\r\n        <ul className=\"social-link\">\r\n        <li>\r\n        <a href=\"#\">\r\n        <i className=\"fa fa-facebook\"></i>\r\n        </a>\r\n        </li>\r\n        <li>\r\n        <a href=\"#\">\r\n        <i className=\"fa fa-twitter\"></i>\r\n        </a>\r\n        </li>\r\n        <li>\r\n        <a href=\"#\">\r\n        <i className=\"fa fa-google-plus\"></i>\r\n        </a>\r\n        </li>\r\n        <li>\r\n        <a href=\"#\">\r\n        <i className=\"fa fa-youtube\"></i>\r\n        </a>\r\n        </li>\r\n        <li>\r\n        <a href=\"#\">\r\n        <i className=\"fa fa-instagram\"></i>\r\n        </a>\r\n        </li>\r\n        </ul>\r\n      </div>\r\n     </div>\r\n    </div>\r\n  </div>\r\n  <footer className=\"copyright-sec\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-5\">\r\n            <p>Copyright 2023</p>\r\n          </div>\r\n          <div className=\"col-md-7\">\r\n            <ul>\r\n              <li><a href=\"https://2kpaid.com/app/public/privacy_policy\">Privacy Policy</a></li>\r\n              <li><a href=\"#\">Cookies</a></li>\r\n              <li><a href=\"https://2kpaid.com/app/public/term_of_use\">Terms of Use</a></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n</footer>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Mainfooter;\r\n","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/components/layout/mainheader.js",["186","187","188","189","190","191","192","193","194","195"],[],"import React from 'react';\r\nimport Link from 'next/link'\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\n\r\n\r\nclass Mainheader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: '',\r\n      redirect: ''\r\n    };\r\n   \r\n  }\r\n  componentDidMount() {\r\n    \r\n    \r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    this.setState({user: user})\r\n    \r\n  }\r\n  \r\n  Logout(){\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    var base_url = window.location.origin;\r\n    console.log(base_url+'/login')\r\n\r\n    if(user){\r\n      localStorage.removeItem(\"user\");\r\n      window.location.replace(base_url+'/login');     \r\n    }\r\n  }\r\n \r\n\r\n  profileTab(e){\r\n    e.stopPropagation();\r\n    var nfttb = document.querySelector('#nft-tb')\r\n    if(nfttb.classList.contains('active-tab')){\r\n      nfttb.classList.remove(\"active-tab\");\r\n    }\r\n    var profile = document.querySelector('#profile-tb')\r\n    if(profile.classList.contains('active-tab')){\r\n      profile.classList.remove(\"active-tab\");\r\n    }else{\r\n      profile.classList.add(\"active-tab\");\r\n    }\r\n\r\n  }\r\n  nftTab(e){\r\n    e.stopPropagation();\r\n\r\n    var profile = document.querySelector('#profile-tb')\r\n    if(profile.classList.contains('active-tab')){\r\n      profile.classList.remove(\"active-tab\");\r\n    }\r\n    var nfttb = document.querySelector('#nft-tb')\r\n    if(nfttb.classList.contains('active-tab')){\r\n      nfttb.classList.remove(\"active-tab\");\r\n    }else{\r\n      nfttb.classList.add(\"active-tab\");\r\n    }\r\n  }\r\n\r\n  CheckApproval(e){\r\n   \r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    \r\n    if(user.user.is_verified == 0 || user.user.is_verified == 2){\r\n      e.preventDefault()\r\n      alert('You do not have permission to access this option!')\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Navigate to={this.state.redirect} />\r\n    }\r\n    return (\r\n      <>\r\n       <header className=\"header-sec\">\r\n    <div className=\"container\">\r\n    <div className=\"row\">\r\n    <div className=\"col-lg-12\">\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark\">\r\n    <Link href=\"/\" >\r\n      <a className=\"navbar-brand\" ><img src = \"assets/images/logo.png\" className=\"img-fluid\" alt=\"\"/></a>\r\n    </Link>\r\n   \r\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n      <ul className=\"navbar-nav ml-auto\" id=\"myNavbar\">\r\n        \r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">discover</a>\r\n        </li> */}\r\n        <li className=\"nav-item\">\r\n          {\r\n            this.state.user ? \r\n            (\r\n             ''\r\n            ) : (\r\n              <Link href=\"/login\" >\r\n                <a className=\"nav-link\" >Create Your NFT</a>\r\n              </Link>\r\n            )\r\n          }\r\n         \r\n        \r\n        </li> \r\n        {/* <li className=\"nav-item\" style={{ display: this.state.user ? \"block\" : \"none\" }}>\r\n         \r\n          <Link href=\"/purchased-nfts\" >\r\n            <a className=\"nav-link\" >Purchased NFTs</a>\r\n          </Link>\r\n        </li>  */}\r\n        <li className=\"nav-item\" style={{ display: this.state.user ? \"block\" : \"none\" }}>\r\n          <a href=\"/shipping-container\" className=\"nav-link\"  >\r\n            Shipping Container\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\" style={{ display: this.state.user ? \"block\" : \"none\" }}>\r\n          <Link href=\"/all-nft\" >\r\n            <a className=\"nav-link\">Explore</a>\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"nav-item dropdown dropdown-d\" style={{ display: this.state.user ? \"block\" : \"none\" }}>\r\n          \r\n          <a className=\"nav-link dropdown-toggle\"  id=\"navbardrop\" data-toggle=\"dropdown\">\r\n            {/* <img src=\"assets/images/1.jpg\" className=\"img-fluid\" alt=\"\"/><span>Nick</span> */}\r\n            <img src={this.state.user ? this.state.user.user.profile_image != null ? this.state.user.base_url+'/public/'+this.state.user.user.profile_image :'assets/images/user.png' : 'assets/images/user.png'} className=\"img-fluid\" alt=\"\"/><span>{this.state.user ? this.state.user.user.name : ''}</span>\r\n          </a>\r\n          \r\n          {/* <div className=\"dropdown-menu\">\r\n            <Link href=\"/my-profile\"><a className=\"dropdown-item\" href=\"#\">My Profile</a></Link>\r\n            <a className=\"dropdown-item\" href=\"#\" onClick={this.Logout}>Log out</a>\r\n          </div> */}\r\n          <div className=\"dropdown-menu\">\r\n            <a className=\"dropdown-item\" href=\"#\">My Profile</a>\r\n            <ul>\r\n              <li onClick={this.profileTab} ><a className=\"dropdown-item\" href=\"#\"><i className=\"fa fa-user\" aria-hidden=\"true\"></i>Profile info<i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i></a>\r\n                <ul id=\"profile-tb\" className='' style={{display:'none'}}>\r\n                  <li><a className=\"dropdown-item\" href=\"/view-profile\">Profile View</a></li>\r\n                  <li><Link href=\"/my-profile\"><a className=\"dropdown-item\" href=\"#\">Profile Edit</a></Link></li>\r\n                </ul>\r\n              </li>\r\n              <li onClick={(e) => {this.nftTab(e)}} ><a className=\"dropdown-item\"  href=\"#\"><img src=\"assets/images/nft.png\"></img>My NFTs<i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i></a>\r\n                <ul  id=\"nft-tb\" style={{display:'none'}}>\r\n                  <li><a className=\"dropdown-item\" href='/create-nft' onClick={this.CheckApproval}>Create NFT</a></li>\r\n                  <li><a className=\"dropdown-item\" href=\"/my-nft\" >Minted</a></li>\r\n                  <li><a className=\"dropdown-item\" href=\"/purchased-nfts\">Purchased</a></li>\r\n                </ul>\r\n              </li>\r\n              <li><a className=\"dropdown-item\" href=\"/wishlist\"><i className=\"fa fa-heart\" aria-hidden=\"true\"></i>Wishlist</a></li>\r\n            </ul>\r\n            <a className=\"dropdown-item\" href=\"#\" onClick={this.Logout}>Log out</a>\r\n          </div>\r\n        </li>    \r\n\r\n      </ul>\r\n    </div>  \r\n\r\n    </nav>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    \r\n</header>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Mainheader;\r\n","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/create-nft.js",["196","197"],[],"/* pages/create-nft.js */\nimport * as React from \"react\";\nimport { useState } from 'react'\nimport { ethers } from 'ethers'\nimport axios from \"axios\";\nimport toast from \"../components/Toast\";\nimport { useRouter } from 'next/router'\nimport Web3Modal from 'web3modal'\nimport {\n  marketplaceAddress\n} from '../config'\nimport NFTMarketplace from '../artifacts/contracts/NFTMarketplace.sol/NFTMarketplace.json'\nimport Mainheader from './components/layout/mainheader';\nimport Mainfooter from './components/layout/mainfooter';\n\n\nexport default function CreateItem() {\n  \n\n  const [fileUrl, setFileUrl] = useState(null)\n  const [processing, setProcessing] = useState(null)\n  const [uploading, setUploading] = useState(null)\n  const [ButtonDisabled, setButtonDisabled] = useState(true)\n  const [formInput, updateFormInput] = useState({ price: '', name: '', description: '' })\n  const router = useRouter()\n\n\n\n  const notify = React.useCallback((type, message) => {\n    toast({ type, message });\n  }, []);\n\n  async function onChange(e) {\n\n    const user = JSON.parse(localStorage.getItem('user'));\n    if(user){\n      var formData = new FormData();\n      const file = e.target.files[0]\n      if(file){\n        formData.append('file', file);\n        setUploading('Uploading...')\n        try {\n          const response = await axios({\n            url: 'https://api.pinata.cloud/pinning/pinFileToIPFS',\n            method: \"POST\", \n            data: formData,\n            maxBodyLength: \"Infinity\", \n            headers: {\n              'pinata_api_key'        : process.env.NEXT_PUBLIC_PINATA_PUBLIC_KEY,\n              'pinata_secret_api_key' : process.env.NEXT_PUBLIC_PINATA_SECRET_KEY\n            },\n          });\n          const url = `https://infura-ipfs.io/ipfs/${response.data.IpfsHash}`;\n          setFileUrl(url)\n          setButtonDisabled(false)\n          setUploading(null)\n    \n          // return response.data.IpfsHash;\n        }catch(e){\n          console.log('Error uploading file: ', e)\n        }\n      }\n    }else{\n      router.push('/login')\n    }\n  }\n\n  async function uploadToIPFS() {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if(user){\n      const { name, description, price } = formInput\n\n      if (!name || !description || !price || !fileUrl) return\n      /* first, upload metadata to IPFS */\n    \n      const data = JSON.stringify({\n        name, description, price, image: fileUrl\n      });\n\n      try {\n        const response = await axios({\n          url: 'https://api.pinata.cloud/pinning/pinJSONToIPFS',\n          method: \"POST\", \n          data: data,\n          headers: {\n            'Content-Type': 'application/json', \n            'pinata_api_key'        : process.env.NEXT_PUBLIC_PINATA_PUBLIC_KEY,\n            'pinata_secret_api_key' : process.env.NEXT_PUBLIC_PINATA_SECRET_KEY,\n            'token' : 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySW5mb3JtYXRpb24iOnsiaWQiOiI1MTUwMTllYi03NTVmLTRkNGYtYTRkOS1mMmE2MmVkMzM5ZjkiLCJlbWFpbCI6InJzOTYxMzYwOUBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGluX3BvbGljeSI6eyJyZWdpb25zIjpbeyJpZCI6IkZSQTEiLCJkZXNpcmVkUmVwbGljYXRpb25Db3VudCI6MX0seyJpZCI6Ik5ZQzEiLCJkZXNpcmVkUmVwbGljYXRpb25Db3VudCI6MX1dLCJ2ZXJzaW9uIjoxfSwibWZhX2VuYWJsZWQiOmZhbHNlLCJzdGF0dXMiOiJBQ1RJVkUifSwiYXV0aGVudGljYXRpb25UeXBlIjoic2NvcGVkS2V5Iiwic2NvcGVkS2V5S2V5IjoiNjE5ODI3ZTllODI4ZmRlZjAzMjgiLCJzY29wZWRLZXlTZWNyZXQiOiI2NTY2MWQyZTFmMjNlMDcxZmFhZWViMTQwMzBlNWZmOGQ4MWYxZWU3ZDFkNWZjMjUwZTg5OTFhYTcxOTlkNmJjIiwiaWF0IjoxNjYyMTEwNzI1fQ.R7EAt6TfKn0U42TWptpY6p4d3nvIPoCOw7NnEFNecJs'\n          },\n        });\n        const url = `https://infura-ipfs.io/ipfs/${response.data.IpfsHash}`;\n        setButtonDisabled(false)\n        return url\n\n      }catch(e){\n        console.log('Error uploading file: ', e)\n      }\n    }else{\n      router.push('/login')\n    }\n  }\n\n  async function updateFormPrice(e){\n    if(e.target.value == ''){\n      document.querySelector('.doller_price').value = '';\n      updateFormInput({ ...formInput, price: e.target.value })\n    }else{\n      var exchangePriceResponse = await axios.get('https://api.coinconvert.net/convert/matic/usd?amount='+e.target.value)\n      if(exchangePriceResponse){\n        document.querySelector('.doller_price').value = exchangePriceResponse.data.USD\n        updateFormInput({ ...formInput, price:   e.target.value.toString() })\n      }\n    }\n  }\n \n  async function listNFTForSale() {\n    \n    const user = JSON.parse(localStorage.getItem('user'));\n    var temp = 'logout';\n    if(formInput.description && formInput.price && formInput.name){\n      \n      if(user){ \n        var response = await axios.get(process.env.NEXT_PUBLIC_BASE_URL+'/api/check-auth',{\n          headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer '+user.access_token\n          },\n        }).then((response)  =>{\n          temp = 'login';\n        }).catch(function (error) {\n          // handle error\n          if(error.response.status == 400){\n            notify(\"error\", error.response.data.error)\n          }else if(error.response.status == 401) {\n            temp = 'logout';\n            localStorage.removeItem(\"user\")\n            router.push('/login')\n          }else{\n            notify(\"error\", 'Something went wrong please try again!')\n          } \n        })\n    \n        if(temp == 'login'){\n\n          setButtonDisabled(true)\n          const url = await uploadToIPFS()\n          setProcessing('Processing...')\n          const web3Modal = new Web3Modal()\n          const connection = await web3Modal.connect()\n          const provider = new ethers.providers.Web3Provider(connection)\n          const signer = provider.getSigner();\n    \n          let formdata = new FormData();\n          formdata.append('wallet_address', await signer.getAddress())    \n          axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/save-wallet-address', formdata,{\n            headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer '+user.access_token\n            },\n          }).then((response)  => {\n            console.log(response.data);\n          }).catch(function (error) {\n            // handle error\n            if(error.response.status == 400){\n              notify(\"error\", error.response.data.error)\n            }else if(error.response.status == 401) {\n              localStorage.removeItem(\"user\")\n              router.push('/login')\n            }else{\n              notify(\"error\", 'Something went wrong please try again!')\n            } \n          }) \n          /* create the NFT */\n          const price = ethers.utils.parseUnits(formInput.price, 'ether')\n          let contract = new ethers.Contract(marketplaceAddress, NFTMarketplace.abi, signer)\n          let listingPrice = await contract.getListingPrice()\n          listingPrice = listingPrice.toString()\n          let transaction = '';\n          try {   \n            transaction = await contract.createToken(url, price, { value: listingPrice })\n            await transaction.wait()\n          } catch (error) {\n            if(error.code == '-32603'){\n              notify('error','Insufficient funds for gas * price + value!')\n              document.getElementById('button_disabled'+nft.id).innerHTML = 'Buy';\n              document.getElementById('button_disabled'+nft.id).disabled = false;\n            }\n            if(error.code == 'ACTION_REJECTED'){\n              notify('error','Transaction rejected!') \n              setButtonDisabled(false)\n              setProcessing(null)\n            }\n          }\n          console.log(transaction);\n          if(transaction){\n            \n            const data = await contract.fetchItemsListed()\n            let lastData = data[data.length - 1];\n            // Save nft details\n            console.log(lastData.price.toString())\n            let fd = new FormData();\n            fd.append('name', formInput.name)\n            fd.append('price', formInput.price)\n            fd.append('string_price', lastData.price.toString())\n            fd.append('description', formInput.description)\n            fd.append('image', fileUrl)\n            fd.append('hash_token', transaction.hash)\n            fd.append('tokenID', lastData.tokenId.toNumber());\n            fd.append('seller', lastData.seller);\n            \n            axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/save-user-nft', fd,{\n              headers: {\n              'Content-Type': 'application/json',\n              'Authorization': 'Bearer '+user.access_token\n              },\n            }).then((response)  => {\n              notify(\"success\", 'NFT created successfully!')\n              const data = response.data;\n      \n            }).catch(function (error) {\n              // handle error\n              if(error.response.status == 400){\n                notify(\"error\", error.response.data.error)\n              }else if(error.response.status == 401){\n                localStorage.removeItem(\"user\")\n                router.push('/login')\n              }else{\n                notify(\"error\", 'Something went wrong please try again!')\n              } \n            })\n            setProcessing(null)\n            router.push('/')\n          }\n        }\n      }else{\n        router.push('/login')\n      }\n    }else{\n      notify(\"error\", 'Please fill all mandatory fields!')\n    }\n  }\n\n  \n\n  return (\n    <div>\n      <Mainheader />\n      <section className=\"login-page\" style= {{ background: \"url(\" + \"assets/images/loginbg.jpg\" + \")\" }}>\n        <section className=\"innerbg\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <h3>Create NFT</h3>\n              </div>\n            </div>\n          </div>\n        </section>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"login-page-design\">\n                <h2>Create NFT</h2>\n                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.</p>\n                <div className=\"loginform\">\n                  <form>\n                    <div className=\"box\">\n                      <input type=\"file\" onChange={onChange} name=\"file-5[]\" id=\"file-5\" className=\"inputfile inputfile-4\" data-multiple-caption=\"{count} files selected\" multiple />\n                      <label htmlFor=\"file-5\">\n                      <figure><img id=\"profilepreview\" src={fileUrl}/></figure>\n                      <span><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path><path d=\"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.9 13.98l2.1 2.53 3.1-3.99c.2-.26.6-.26.8.01l3.51 4.68c.25.33.01.8-.4.8H6.02c-.42 0-.65-.48-.39-.81L8.12 14c.19-.26.57-.27.78-.02z\"></path></svg></span></label>\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Name<span className=\"required\">*</span></label>\n                      <input type=\"text\" className=\"form-control\" onChange={e => updateFormInput({ ...formInput, name: e.target.value })} id=\"name\" required />\n                    </div>\n\n                    <div className=\"row\">\n                      <div className=\"col-lg-6\">\n\n                        <div className=\"form-group\">\n                          <label>Matic Price<span className=\"required\">*</span></label>\n                          <input type=\"text\" className=\"form-control\" onChange={updateFormPrice} id=\"\" required />\n                        </div>\n                      </div>\n                      <div className=\"col-lg-6\">\n                        <div className=\"form-group\">\n                          <label>Dollar Price</label>\n                          <input type=\"text\" className=\"form-control doller_price\" readOnly  id=\"price\" />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Description<span className=\"required\">*</span></label>\n                      <textarea className=\"form-control\" rows=\"5\" onChange={e => updateFormInput({ ...formInput, description: e.target.value })} required id=\"comment\"></textarea>\n                    </div>\n                    <div className=\"form-group loginbtn\">\n                      <input type=\"button\" className=\"btn btn-info\" onClick={listNFTForSale} value={uploading ? uploading : processing ? processing : 'Submit'} disabled={processing ? 'disabled' :  ButtonDisabled ? 'disabled': ''} />\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <Mainfooter />\n    </div>\n    \n  \n  )\n}\n","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/forget_password.js",[],[],"/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/index.js",["198","199","200","201","202","203","204","205","206","207","208","209","210"],[],"/* pages/index.js */\nimport * as React from \"react\";\nimport { ethers } from 'ethers'\nimport { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport Web3Modal from 'web3modal'\nimport Link from 'next/link'\nimport toast from \"../components/Toast\";\nimport Mainheader from './components/layout/mainheader';\n\nimport {\n  marketplaceAddress\n} from '../config'\nimport { useRouter } from 'next/router'\n\nimport NFTMarketplace from '../artifacts/contracts/NFTMarketplace.sol/NFTMarketplace.json'\nimport Mainfooter from './components/layout/mainfooter';\n\n\n\n\nexport default function Home() {\n  const [nfts, setNfts] = useState([])\n  const [topSeller, setTopSeller] = useState([])\n  const [users, User] = useState([])\n  const [baseURL, setBaseUrl] = useState('');\n\n  const [rndmNumber, setRndmNumber] = useState('');\n\n  const [loadingState, setLoadingState] = useState('not-loaded')\n  useEffect(() => {\n    loadNFTs()\n    // NFTtransfer()\n  }, [])\n  const router = useRouter()\n\n\n  const notify = React.useCallback((type, message) => {\n    toast({ type, message });\n  }, []);\n\n  async function loadNFTs() {\n    User(JSON.parse(localStorage.getItem('user')))\n\n    // Fatch Top Seller\n    const top_seller =  await  axios.get(process.env.NEXT_PUBLIC_BASE_URL+'/api/get-top-seller',{\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    setTopSeller(top_seller.data.data);\n    \n    /* create a generic provider and query for unsold market items */\n    const provider = new ethers.providers.JsonRpcProvider(\"https://rpc-mumbai.maticvigil.com\")\n    const contract = new ethers.Contract(marketplaceAddress, NFTMarketplace.abi, provider)\n    const data = await contract.fetchMarketItems()\n    \n    // fatch latest nfts\n    var wallet_addresses = [];\n    var wallet_response = '';\n    const itemsss = await Promise.all(data.map(async (i, index) => {\n      wallet_addresses.push(i.seller);\n    }))\n    let fd = new FormData\n    fd.append('wallet_address', wallet_addresses)\n    wallet_response =  await  axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/nft-profile-image-list', fd ,{\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    const userNFT = wallet_response.data.user_nft.reverse()\n    setBaseUrl(wallet_response.data.base_url)\n    /*\n    *  map over items returned from smart contract and format \n    *  them as well as fetch their token metadata\n    */\n    const reponsePriceExchange = await axios.get('https://api.coinconvert.net/convert/matic/usd?amount='+1)\n    const items = await Promise.all(userNFT.map(async i => {\n\n      var profileImage = '';\n      var user_name = '';\n      wallet_response.data.profilesData.forEach(value => {\n        if(value.wallet_address == i.seller){\n          profileImage = value.profile_image,\n          user_name = value.name\n        }\n      });\n      const tokenUri = await contract.tokenURI(i.tokenID)\n      if(reponsePriceExchange){\n        if(tokenUri.split('/')[2] ==  'infura-ipfs.io'){\n          var getwayURL = 'https://gateway.moralisipfs.com/ipfs/'+tokenUri.split('/')[4]\n          const meta = await axios.get(getwayURL)\n          const USDPrice = i.price * reponsePriceExchange.data.USD;\n          \n            if(meta.data != undefined){\n              let price = ethers.utils.formatUnits(i.string_price, 'ether')\n              let item = {\n                price,\n                DollarPrice:USDPrice,\n                tokenID: i.tokenID,\n                seller: i.seller,\n                string_price:i.string_price,\n                owner: i.owner,\n                image: meta.data.image,\n                name: meta.data.name,\n                description: meta.data.description,\n                pImage : profileImage,\n                wishlist : i.wishlist,\n                Uname : user_name,\n                wishlist_id : i.wishlist_id ? i.wishlist_id : '',\n                id : i.id,\n              }\n              console.log(item);\n              return item\n            }\n        }\n      }\n    }))\n  \n    setNfts(items)\n    setLoadingState('loaded') \n  }\n  async function buyNft(nft) {\n    const user = JSON.parse(localStorage.getItem('user'));\n    var product_id = '';\n    if(user){\n\n      var temp = 'logout';\n      var response = await axios.get(process.env.NEXT_PUBLIC_BASE_URL+'/api/check-auth',{\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+user.access_token\n        },\n      }).then((response)  =>{\n        temp = 'login';\n      }).catch(function (error) {\n        // handle error\n        if(error.response.status == 400){\n          notify(\"error\", error.response.data.error)\n        }else if(error.response.status == 401) {\n          temp = 'logout';\n          localStorage.removeItem(\"user\")\n          router.push('/login')\n        }else{\n          notify(\"error\", 'Something went wrong please try again!')\n        } \n      })\n\n      if(temp == 'login'){\n        document.getElementById('button_disabled'+nft.id).innerHTML = 'Processing...';\n        document.getElementById('button_disabled'+nft.id).disabled = true;\n        /* needs the user to sign the transaction, so will use Web3Provider and sign it */\n        var price = '';\n        var transaction = '';\n        try {\n          const web3Modal = new Web3Modal()\n          const connection = await web3Modal.connect()\n          const provider = new ethers.providers.Web3Provider(connection)\n          const signer = provider.getSigner()\n          const contract = new ethers.Contract(marketplaceAddress, NFTMarketplace.abi, signer)\n      \n          /* user will be prompted to pay the asking proces to complete the transaction */\n          price = ethers.utils.parseUnits(nft.price, 'ether')   \n          \n          transaction = await contract.createMarketSale(nft.tokenID, {\n            value: price\n          }) \n          await transaction.wait()\n        } catch (error) {\n          if(error.code == '-32603'){\n            notify('error','Insufficient funds for gas * price + value!')\n            document.getElementById('button_disabled'+nft.id).innerHTML = 'Buy';\n            document.getElementById('button_disabled'+nft.id).disabled = false;\n          }\n          if(error.code == 'ACTION_REJECTED'){\n            notify('error','Transaction rejected!') \n            document.getElementById('button_disabled'+nft.id).innerHTML = 'Buy';\n            document.getElementById('button_disabled'+nft.id).disabled = false;\n          }\n        }\n        if(transaction){\n\n          let fd = new FormData();\n          fd.append('product_id', nft.id)\n          fd.append('name', nft.name)\n          fd.append('price', nft.price)\n          fd.append('string_price', nft.string_price)\n          fd.append('description', nft.description)\n          fd.append('image', nft.image)\n          fd.append('tokenID', nft.tokenID)\n          fd.append('hash_token', transaction.hash)\n          fd.append('from_wallet', transaction.from)\n          fd.append('gasLimit', JSON.stringify(transaction.gasLimit))\n          fd.append('gasPrice', JSON.stringify(transaction.gasPrice))\n          fd.append('maxFeePerGas', JSON.stringify(transaction.maxFeePerGas))\n          fd.append('maxPriorityFeePerGas', JSON.stringify(transaction.maxPriorityFeePerGas))\n          \n          \n          axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/user-buy-nft', fd,{\n            headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer '+user.access_token\n            },\n          }).then((response)  => {\n            notify(\"success\", 'Buy NFT successfully!')\n            const data = response.data;\n            product_id = response.data.userNFT.id\n            document.getElementById('button_disabled'+nft.id).innerHTML = 'Buy';\n            document.getElementById('button_disabled'+nft.id).disabled = false;\n            \n          }).catch(function (error) {\n            // handle error\n            if(error.response.status == 400){\n              notify(\"error\", error.response.data.error)\n            }else if(error.response.status == 401){\n              localStorage.removeItem(\"user\")\n              router.push('/login')\n            }else{\n              notify(\"error\", 'Something went wrong please try again!')\n            } \n          })\n\n         \n          let transaction_detail = new FormData();\n          transaction_detail.append('product_id', nft.id)\n          transaction_detail.append('Transaction_Token', 'ABC001567IUOP')\n          transaction_detail.append('Price', nft.price)\n          transaction_detail.append('Quantity', 1)\n  \n          axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/order-nft', transaction_detail,{\n            headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer '+user.access_token\n            },\n          }).then((response)  => {\n            const data = response.data;\n          }).catch(function (error) {\n            // handle error\n            if(error.response.status == 400){\n              notify(\"error\", error.response.data.error)\n            }else if(error.response.status == 401) {\n              localStorage.removeItem(\"user\")\n              router.push('/login')\n            }else{\n              notify(\"error\", 'Something went wrong please try again!')\n            } \n          })\n          \n          loadNFTs()\n        }\n      }\n    }\n  }\n\n  async function wishlist(wishlist_id, product_id){\n    const user = JSON.parse(localStorage.getItem('user'));\n    \n    \n    if(Boolean(wishlist_id)){\n      var fd = new FormData();\n      fd.append('wishlist_id', wishlist_id);\n      axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/remove-wishlist', fd ,{\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+user.access_token\n        },\n      }).then((response)  => {\n       \n        nfts.forEach((nft, index) => {\n          if(Boolean(wishlist_id)){\n            if(nft.wishlist_id == wishlist_id){\n              // console.log(wishlist_id); \n              nft.wishlist_id = '';\n              nft.wishlist = 0;\n            }\n            nfts[index] = nft\n          }\n        });\n        setRndmNumber(Math.random())\n        setNfts(nfts)\n        notify(\"success\", 'Wishlist removed successfully!')\n      }).catch(function (error) {\n        // handle error\n        if(error.response){\n\n          if(error.response.status == 400){\n            notify(\"error\", error.response.data.error)\n          }else if(error.response.status == 401){\n            localStorage.removeItem(\"user\")\n            router.push('/login')\n          } else{\n              notify(\"error\", 'Something went wrong please try again!')\n          }\n        }else{\n          console.log(error)\n        }\n      })\n    }else{\n      var fd = new FormData();\n      fd.append('product_id', product_id);\n      axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/add-wishlist', fd ,{\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+user.access_token\n        },\n      }).then((response)  => {\n       \n        nfts.forEach((nft, index) => {\n          if(Boolean(product_id)){\n            if(nft.id == product_id){\n              // console.log(wishlist_id); \n              nft.wishlist_id = response.data.wishlist.id;\n              nft.wishlist = 1;\n            }\n            nfts[index] = nft\n          }\n        });\n        console.log(nfts);\n\n        setRndmNumber(Math.random())\n        setNfts(nfts)\n        notify(\"success\", 'Wishlist added successfully!')\n      }).catch(function (error) {\n        // handle error\n        if(error.response){\n\n          if(error.response.status == 400){\n            notify(\"error\", error.response.data.error)\n          }else if(error.response.status == 401){\n            localStorage.removeItem(\"user\")\n            router.push('/login')\n          } else{\n              notify(\"error\", 'Something went wrong please try again!')\n          }\n        }else{\n          console.log(error)\n        }\n      })\n    }\n  }\n\n  // if (loadingState === 'loaded' && !nfts.length) return (<h1 className=\"px-20 py-10 text-3xl\">No items in marketplace</h1>)\n  return (\n    <div>\n      <Mainheader/>\n      <section className=\"mainbanner\" style={{ background: \"url(\" + \"/assets/images/mainbg.jpg\" + \")\" }} >\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"mainbanner-left\">\n                <h2>Mint, <span>Buy</span>, and <span>Sell</span> Your NFT&apos;s<div className=\"divider\"></div></h2>\n                <p>2kPAID is the biggest Blockchain based NFT marketplace</p>\n                <div className=\"btn-sec\">\n                  {/* <a href=\"\" className=\"btn btn-info b-btn\">Create NFT</a> */}\n                    {users ? (\n                      <Link href=\"/create-nft\">\n                        <a className=\"btn btn-info b-btn\" >\n                          Create NFT\n                        </a>\n                      </Link>\n                    ) : (\n                      <Link href=\"/login\">\n                        <a className=\"btn btn-info b-btn\" >\n                          Create NFT\n                        </a>\n                      </Link>\n                    )}\n                  <Link href=\"/signup\">\n                    <a className=\"btn btn-info\">\n                    Sign Up\n                    </a>\n                  </Link>\n                  {/* <a href=\"signup.html\" className=\"btn btn-info\">Sign Up</a> */}\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"mainbanner-right\">\n                <div className=\"mainbanner-top\">\n                <div className=\"mainbanner-a\">\n                  <img src=\"assets/images/mainimg1.jpg\" className=\"img-fluid\" alt=\"\"/>\n                </div>\n                <div className=\"mainbanner-b\">\n                  <img src=\"assets/images/mainimg2.jpg\" className=\"img-fluid\" alt=\"\"/>\n                </div>\n                <svg className=\"uk-position-right uk-opacity-30\" viewBox=\"0 0 200 200\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path fill=\"#F796FF\" d=\"M47.5,-67.2C55.9,-59.3,53.2,-37.9,56.7,-20.1C60.2,-2.3,69.9,11.8,70.8,27.3C71.7,42.9,63.8,59.9,50.6,64.4C37.3,68.9,18.6,60.8,-0.3,61.2C-19.3,61.6,-38.6,70.7,-53.5,66.7C-68.4,62.8,-78.9,45.9,-78.8,29.5C-78.7,13.2,-67.9,-2.7,-59.8,-16.8C-51.6,-31,-46,-43.3,-36.5,-50.9C-27,-58.4,-13.5,-61.1,3,-65.2C19.6,-69.4,39.1,-75.1,47.5,-67.2Z\" transform=\"translate(100 100)\">\n                </path></svg>\n              </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n        {/* <svg className=\"bottombg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" preserveAspectRatio=\"none\" viewBox=\"0 0 1680 40\" classNameName=\"position-absolute width-full z-1\" style=\"bottom: -1px;\">\n              <path d=\"M0 40h1680V30S1340 0 840 0 0 30 0 30z\" fill=\"#f0f0f0\"></path>\n          </svg> */}\n      </section>\n      <section className=\"latestnft\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h2 className=\"heading\">Latest NFTs<div className=\"divider\"></div></h2>\n            </div>\n          </div>\n\n         \n\n          <div className=\"row myfvtrow\">\n            {\n              loadingState === 'not-loaded' ? \n              <div className=\"col-sm-6 col-md-4 col-lg-3\">      \n                <h2>Loading</h2>\n              </div>\n              :\n              ''\n            }\n            {\n            loadingState === 'loaded' && !nfts.length   ?\n              <div className=\"col-sm-6 col-md-4 col-lg-3\">      \n                <h2>No nfts found</h2>\n              </div>\n               :\n              \n                nfts.reverse().slice(0 , 5).map((nft, i) => (\n            \n                \n                  <div key={i} className=\"col-sm-6 col-md-4 col-lg-3 myfvt\">      \n                    <div className=\"nftbox\">\n                      <div className=\"nftbox-img\">\n                        <a href=\"#\"><img src={nft.image} className=\"img-fluid\" alt=\"\"/></a>\n                        <div className=\"counter\">\n                          {/* <span>717 : 6 : 32 : 34</span> */}\n                        </div>\n                      </div>\n                      <div className=\"nftbox-desc\">\n                        <div className=\"nftbox-desc-img\">\n                          <div className=\"nftbox-user\">\n                            <a href=\"#\">\n                              <img src={nft.pImage ?baseURL+ '/public/'+ nft.pImage : 'assets/images/user.png' } className=\"img-fluid\" alt=\"\"/>\n                            </a>\n                            <span>{nft.Uname.length > 9 ? nft.Uname.substring(0,9)+'...' :  nft.Uname}</span>\n                          </div>\n                        </div>\n                        <h3><a href=\"#\">{nft.name}</a></h3>\n                        <h5 className=\"rate\">$ {nft.DollarPrice.toFixed(7)}\n                          <span className=\"like-design\" style={{ display: users ? \"block\" : \"none\" }}><a onClick={() => wishlist(nft.wishlist_id, nft.id)} id={nft.wishlist_id} ><i className={nft.wishlist == 1 ? 'fa fa-heart active':'fa fa-heart-o'} aria-hidden=\"true\"></i></a></span>\n                        </h5>\n                      \n                        <button className=\"btn btn-info\" id={'button_disabled'+nft.id} style={{ display: users ? \"block\" : \"none\" }} onClick={() => buyNft(nft)}>Buy</button>\n                        \n                      </div>\n                    </div>\n                  </div> \n                \n                \n                ))\n            \n            }\n            </div>\n          \n          </div>\n        {/* </div> */}\n      </section>\n      <section className=\"topcollections\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h2 className=\"heading\">Top Collections<div className=\"divider\"></div></h2>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"collection_top\">\n                <div className=\"collection_row\">\n                  <div className=\"collection_item\">\n                      <div className=\"collection_item_in\">\n                        <a href=\"#\">\n                        <div className=\"collection_item_img\">\n                          <img src=\"assets/images/nft4.png\" className=\"img-fluid\" alt=\"\"/>\n                          <div className=\"collection-desc\">\n                          <h3>CinnaRolls</h3>\n                          <h5>10 Collection</h5>\n                          </div>\n                        </div>\n                        </a>\n                      </div>\n                  </div>\n                  <div className=\"collection_item\">\n                      <div className=\"collection_item_in\">\n                        <div className=\"collection_item_img\">\n                          <img src=\"assets/images/nft3.png\" className=\"img-fluid\" alt=\"\"/>\n                        </div>\n                      </div>\n                  </div>\n                  <div className=\"collection_item\">\n                      <div className=\"collection_item_in\">\n                        <a href=\"#\">\n                        <div className=\"collection_item_img\">\n                          <img src=\"assets/images/nft2.png\" className=\"img-fluid\" alt=\"\"/>\n                          <div className=\"collection-desc\">\n                          <h3>Pans</h3>\n                          <h5>30 Collection</h5>\n                          </div>\n                        </div>\n                      </a>\n                      </div>\n                  </div>\n                  <div className=\"collection_item\">\n                      <div className=\"collection_item_in\">\n                        <div className=\"collection_item_img\">\n                          <img src=\"assets/images/nft1.png\" className=\"img-fluid\" alt=\"\"/>\n                        </div>\n                      </div>\n                  </div>\n                </div>\n                <div className=\"collection_row collection_row2\">\n                  <div className=\"collection_item\">\n                      <div className=\"collection_item_in\">\n                        <div className=\"collection_item_img\">\n                          <img src=\"assets/images/nft5.png\" className=\"img-fluid\" alt=\"\"/>\n                        </div>\n                      </div>\n                  </div>\n                  <div className=\"collection_item\">\n                      <div className=\"collection_item_in\">\n                        <a href=\"#\">\n                        <div className=\"collection_item_img\">\n                          <img src=\"assets/images/nft6.png\" className=\"img-fluid\" alt=\"\"/>\n                          <div className=\"collection-desc\">\n                          <h3>Paper Planes</h3>\n                          <h5>20 Collection</h5>\n                          </div>\n                        </div>\n                      </a>\n                      </div>\n                  </div>\n                  <div className=\"collection_item\">\n                      <div className=\"collection_item_in\">\n                        <div className=\"collection_item_img\">\n                          <img src=\"assets/images/nft7.png\" className=\"img-fluid\" alt=\"\"/>\n                        </div>\n                      </div>\n                  </div>\n                  <div className=\"collection_item\">\n                      <div className=\"collection_item_in\">\n                        <a href=\"#\">\n                        <div className=\"collection_item_img\">\n                          <img src=\"assets/images/nft8.png\" className=\"img-fluid\" alt=\"\"/>\n                          <div className=\"collection-desc\">\n                          <h3>Lightning Gods</h3>\n                          <h5>8 Collection</h5>\n                          </div>\n                        </div>\n                      </a>\n                      </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"topcollections-desc\">\n                <p>Meta Legends represent a collection of 17,000 legends categorized by level of rarity and generated with hundreds of elements. The Legends are stored as ERC-721 tokens on the Ethereum blockchain and hosted on IPFS.</p>\n                <a href=\"#\" className=\"btn btn-info\">all Collection</a>\n              </div>\n            </div>\n          </div>\n\n\n        </div>\n      </section>\n      <section className=\"top-seller\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h2 className=\"heading\">Top Sellers<div className=\"divider\"></div></h2>\n            </div>\n          </div>\n          <div className=\"row\">\n\n            {\n              topSeller.length > 0 ? topSeller.map((seller, i) => (\n                <div className=\"col-md-3\" key={i}>\n                  <div className=\"top-sellerbox\">\n                    <div className=\"top-sellerimg\"><a href=\"#\"><img src={seller.profile} className=\"img-fluid\" alt=\"\"/></a></div>\n                    <h3><a href=\"#\">{seller.full_name}</a></h3>\n                    <p>{seller.total ? seller.total+' nfts' :'0 nfts'}</p> \n                  </div>\n                </div>    \n                )) \n              :\n              <div className=\"col-md-3\" >\n                <h2 style={{fontSize:'1.7em'}}>Seller not found</h2>\n              </div>\n\n            }\n          </div>\n        </div>\n      </section>\n      <Mainfooter />\n    </div>\n    \n  )\n}","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/login.js",["211"],[],"/* pages/create-nft.js */\r\nimport * as React from \"react\";\r\nimport { useEffect, useState } from 'react'\r\nimport axios from \"axios\";\r\nimport toast from \"../components/Toast\";\r\nimport Link from 'next/link'\r\nimport { useRouter } from 'next/router'\r\nimport Mainheader from './components/layout/mainheader';\r\nimport Mainfooter from './components/layout/mainfooter';\r\n\r\nexport default function Login() {\r\n  const [inputField , setInputField] = useState({\r\n    email: '',\r\n    password:'',\r\n  })\r\n  const router = useRouter()\r\n  const notify = React.useCallback((type, message) => {\r\n    toast({ type, message });\r\n  }, []);\r\n\r\n  const inputsHandler = (e) =>{\r\n    const { name, value } = e.target;\r\n    setInputField((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n\r\n  async function submitButton(){\r\n    let fd = new FormData();\r\n  \r\n    fd.append('email', inputField.email)\r\n    fd.append('password', inputField.password)\r\n    \r\n    axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/login', fd).then((response)  => {\r\n      // notify(\"success\", 'Login Successfully')\r\n      localStorage.setItem('user', JSON.stringify(response.data))\r\n      router.push('/my-nft')\r\n    }).catch(function (error) {\r\n      // handle error\r\n      if(error.response.status == 400){\r\n        notify(\"error\", error.response.data.error)\r\n      }else if(error.response.status == 401){\r\n        notify(\"error\", \"Please check email or password!\")\r\n      }else{\r\n        notify(\"error\", 'Something went wrong please try again!')\r\n      } \r\n    })\r\n    \r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <Mainheader />\r\n      <section className=\"login-page\" style= {{ background: \"url(\" + \"assets/images/loginbg.jpg\" + \")\" }}>\r\n        <section className=\"innerbg\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <h3>Login</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <div className=\"login-page-design\">\r\n                <h2>Log in</h2>\r\n                <h4>Login to your account</h4>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.</p>\r\n                <div className=\"loginform\">\r\n               \r\n                  <div className=\"form-group\">\r\n                    <input type=\"email\" name =\"email\" className=\"form-control\"  onChange={inputsHandler}  placeholder=\"Email Address\" id=\"email\"/>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"password\" name=\"password\" className=\"form-control\"  onChange={inputsHandler}  placeholder=\"Password\" id=\"pwd\"/>\r\n                  </div>\r\n                  <div className=\"form-group forgotpassword\">\r\n                    <Link href=\"/forget_password\">\r\n                      <a >\r\n                      Forgot password?\r\n                      </a>\r\n                    </Link>\r\n                    {/* <a href=\"forgot-password.html\">Forgot password?</a> */}\r\n                  </div>\r\n                  <div className=\"form-group loginbtn\">\r\n                    <input type=\"submit\" onClick={submitButton} className=\"btn btn-info\" value=\"LOG IN\"/>\r\n                  </div>\r\n                  <div className=\"form-group or\">\r\n                    <h3><span>OR</span></h3>\r\n                  </div>\r\n                 \r\n                  <div className=\"form-group googlebtn\">\r\n                    {/* <a href=\"#\"><img src=\"assets/images/google-icon.png\" className=\"img-fluid\" alt=\"\"/>continue with google</a> */}\r\n                    <a href=\"#\"><img src=\"\" className=\"img-fluid\" alt=\"\"/>continue with google</a>\r\n                  </div>\r\n                  <div className=\"form-group signuplink\">\r\n                    <p>Not registered? \r\n                      {/* <a href=\"signup.html\">sign up</a> */}\r\n                      <Link href=\"/signup\">\r\n                        <a >\r\n                        sign up\r\n                        </a>\r\n                      </Link>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <Mainfooter />\r\n    </div>\r\n    \r\n    \r\n  )\r\n}","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/resell-nft.js",["212","213","214"],[],"/* pages/resell-nft.js */\nimport { useEffect, useState } from 'react'\nimport { ethers } from 'ethers'\nimport { useRouter } from 'next/router'\nimport axios from 'axios'\nimport Web3Modal from 'web3modal'\n\nimport {\n  marketplaceAddress\n} from '../config'\n\nimport NFTMarketplace from '../artifacts/contracts/NFTMarketplace.sol/NFTMarketplace.json'\nimport Mainheader from './components/layout/mainheader';\nimport Mainfooter from './components/layout/mainfooter';\n\nexport default function ResellNFT() {\n  const [formInput, updateFormInput] = useState({ price: '', image: '' })\n  const router = useRouter()\n  const { id, tokenURI } = router.query\n  const { image, price } = formInput\n\n  useEffect(() => {\n    fetchNFT()\n  }, [id])\n\n  async function fetchNFT() {\n    if (!tokenURI) return\n    const meta = await axios.get(tokenURI)\n    updateFormInput(state => ({ ...state, image: meta.data.image }))\n  }\n\n  async function listNFTForSale() {\n    if (!price) return\n    const web3Modal = new Web3Modal()\n    const connection = await web3Modal.connect()\n    const provider = new ethers.providers.Web3Provider(connection)\n    const signer = provider.getSigner()\n\n    const priceFormatted = ethers.utils.parseUnits(formInput.price, 'ether')\n    let contract = new ethers.Contract(marketplaceAddress, NFTMarketplace.abi, signer)\n    let listingPrice = await contract.getListingPrice()\n\n    listingPrice = listingPrice.toString()\n    let transaction = await contract.resellToken(id, priceFormatted, { value: listingPrice })\n    await transaction.wait()\n\n    router.push('/')\n  }\n\n  return (\n    <div>\n      <Mainheader />\n      <div className=\"flex justify-center\">\n        <div className=\"w-1/2 flex flex-col pb-12\">\n          <input\n            placeholder=\"Asset Price in Eth\"\n            className=\"mt-2 border rounded p-4\"\n            onChange={e => updateFormInput({ ...formInput, price: e.target.value })}\n          />\n          {\n            image && (\n              <img className=\"rounded mt-4\" width=\"350\" src={image} />\n            )\n          }\n          <button onClick={listNFTForSale} className=\"font-bold mt-4 bg-pink-500 text-white rounded p-4 shadow-lg\">\n            List NFT\n          </button>\n        </div>\n      </div>\n      <Mainfooter />\n    </div>\n  )\n}","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/signup.js",["215"],[],"/* pages/create-nft.js */\r\nimport * as React from \"react\";\r\nimport { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useRouter } from 'next/router'\r\nimport Link from 'next/link'\r\nimport toast from \"../components/Toast\";\r\nimport Mainheader from './components/layout/mainheader';\r\nimport Mainfooter from './components/layout/mainfooter';\r\n\r\n\r\nexport default function Signup() {\r\n  \r\n  const [inputField , setInputField] = useState({\r\n    first_name: '',\r\n    last_name: '',\r\n    email: '',\r\n    password:'',\r\n    phone_number:''\r\n  })\r\n  const router = useRouter()\r\n\r\n  const notify = React.useCallback((type, message) => {\r\n    toast({ type, message });\r\n  }, []);\r\n\r\n  const inputsHandler = (e) =>{\r\n    const { name, value } = e.target;\r\n    setInputField((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  async function submitButton(){\r\n    let fd = new FormData();\r\n    fd.append('name', inputField.first_name)\r\n    fd.append('lastname', inputField.last_name)\r\n    fd.append('email', inputField.email)\r\n    fd.append('password', inputField.password)\r\n    fd.append('phone_number', inputField.phone_number)\r\n    \r\n    await axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/register', fd).then((response)  => {\r\n      // notify(\"success\", 'Account Create Successfully')\r\n      const data = response.data;\r\n      localStorage.setItem('user', JSON.stringify(response.data))\r\n      router.push('/my-profile')\r\n    }).catch(function (error) {\r\n      // handle error\r\n      console.log(error)\r\n      if(error.response.status == 400){\r\n        notify(\"error\", error.response.data.error)\r\n      }else{\r\n        notify(\"error\", 'Something went wrong please try again!')\r\n      }  \r\n    })\r\n    \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Mainheader />\r\n      <section className=\"login-page\" style= {{ background: \"url(\" + \"/assets/images/loginbg.jpg\" + \")\" }}>\r\n        <section className=\"innerbg\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <h3>Sign Up</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <div className=\"login-page-design\">\r\n                <h2>Sign Up</h2>\r\n                <h4>Create your account</h4>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.</p>\r\n                <div className=\"loginform\">\r\n                 \r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control\" onChange={inputsHandler}  name=\"first_name\"  placeholder=\"First Name\" id=\"fname\"/>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control\" onChange={inputsHandler}  name=\"last_name\" placeholder=\"Last Name\" id=\"lname\"/>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"email\" className=\"form-control\" onChange={inputsHandler}  name=\"email\" placeholder=\"Email Address\" id=\"email\"/>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" onChange={inputsHandler}  name=\"password\" placeholder=\"Password\"/>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" onChange={inputsHandler}  name=\"phone_number\" placeholder=\"Phone Number (optional)\"/>\r\n                  </div>\r\n                  {/* <div className=\"form-group forgotpassword\">\r\n                    <a href=\"forgot-password.html\">Forgot password?</a>\r\n                  </div> */}\r\n                  <div className=\"form-group loginbtn\">\r\n                    <input type=\"submit\" className=\"btn btn-info\" onClick={submitButton} value=\"SIGN UP\"/>\r\n                  </div>\r\n                  <div className=\"form-group or\">\r\n                    <h3><span>OR</span></h3>\r\n                  </div>\r\n                 \r\n                  <div className=\"form-group googlebtn\">\r\n                    <a href=\"#\" onClick={() => notify(\"success\", \"Success!\")}><img src=\"\" className=\"img-fluid\" alt=\"\"/>continue with google</a>\r\n                  </div>\r\n                  <div className=\"form-group signuplink\">\r\n                    <p>Already have an account? \r\n                      {/* <a href=\"login.html\">Log In</a> */}\r\n                      <Link href=\"/login\">\r\n                        <a  >\r\n                        Login\r\n                        </a>\r\n                      </Link>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <Mainfooter />\r\n    </div>\r\n   \r\n  )\r\n}","/home/anshuman/Desktop/2kpaid/nft-marketplace/components/Toast/index.js",[],[],"/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/faq.js",[],[],"/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/map-manage-shipping-container.js",["216","217","218"],[],"/* pages/create-nft.js */\nimport * as React from \"react\";\nimport axios from 'axios'\nimport { useRouter } from 'next/router'\nimport toast from \"../components/Toast\";\nimport { useEffect, useState } from 'react'\nimport Mainheader from './components/layout/mainheader';\nimport Mainfooter from './components/layout/mainfooter';\nimport queryString from 'query-string';\nimport * as $ from 'jquery';\n\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\n\n\nexport default function MapMSCVideo() {\n  \n  const [inputField , setInputField] = useState({\n    Name: '',\n    Description: '',\n    Featured_Image: ''\n  })\n\n  const { SearchBar } = Search;\n  const [ManageSCList, setManageSCList]=useState([])\n  const [base_url, BaseUrl]=useState('')\n  const [filteredMapManageShippingContainer, setFilteredMapManageShippingContainer] = useState([]);\n\n  const router = useRouter()\n  useEffect(() => {\n    MSCVideoList()\n    var table =  document.querySelector('#data-table-ID');\n    table.classList.remove(\"table-bordered\");\n  }, [])\n\n  const inputsHandler = (index) =>{    \n    \n    var temp = [];\n    filteredMapManageShippingContainer.forEach((value, i) => {\n      if(i == index){\n        value.SCplacement_id = '';\n      }\n      temp.push(value);\n    });\n    setFilteredMapManageShippingContainer(temp)\n  }\n\n \n\n\n  // Get SC Video List .....\n  async function MSCVideoList() {\n    const user = JSON.parse(localStorage.getItem('user'));\n    let params = queryString.parse(location.search)\n\n    if(user){\n      var fd = new FormData();\n      fd.append('item_id', params.id);\n      axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/get-manage-sc-list',fd , {\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+user.access_token\n        },\n      }).then((response)  => {\n        const data = response.data;\n        BaseUrl(response.data.base_url)\n       \n        setManageSCList(Object.values(data.manage_sc))  \n        setFilteredMapManageShippingContainer(Object.values(data.manage_sc))\n        setTimeout(() => {\n          Object.values(data.manage_sc).map((item , index)=>{\n            if(Boolean(item.SCplacement_id)){\n              if( document.getElementById(index)){\n                document.getElementById(index).checked = true;\n              }\n            }\n          })\n        }, 200);\n       \n      }).catch(function (error) {\n        // handle error\n        console.log(error)\n        if(error.response.status == 400){\n          notify(\"error\", error.response.data.error)\n        }else if(error.response.status == 401){\n          localStorage.removeItem(\"user\")\n          router.push('/login')\n        }else{\n          notify(\"error\", 'Something went wrong please try again!')\n        }\n      })\n    }else{\n      router.push('/login')\n    }\n  }\n\n  \n\n  const notify = React.useCallback((type, message) => {\n    toast({ type, message });\n  }, []);\n\n  // Datalist\n   const columns = [\n    {\n      text: \"#\",\n      dataField: 'Sc_ID',\n      headerStyle: { minWidth: '50px' },\n      style: { width: '50px' },\n      formatter: (cell, row, index) => <><input type=\"checkbox\" defaultChecked={Boolean(row.SCplacement_id) } onChange={() => inputsHandler(index)} className=\"checkboxs\" name=\"checkbox\"   value={row.Sc_ID}  id={index}  /><label htmlFor={index}></label></>\n    },\n    {\n      text: \"Image\",\n      dataField: 'Featured_Image',\n      formatter: (cell, row) => <><div className=\"video_button\"><img src={process.env.NEXT_PUBLIC_BASE_URL+'/public/'+row.Featured_Image} /></div></>,\n      headerStyle: { minWidth: '50px' },\n      style: { width: '50px' },\n    },\n    {\n      text: \"Name\",\n      dataField: 'Name',\n      sort: true,\n      headerStyle: { minWidth: '150px' },\n      style: { width: '150px' },\n    },\n    {\n      text: \"Description\",\n      dataField: 'Description',\n      sort: true,\n      style:{width : '504px'},\n      headerStyle:{minWidth : '504px'}\n    },\n   \n    \n  ] \n  const customTotal = (from, to, size) => (\n    <span className=\"react-bootstrap-table-pagination-total\">\n      Showing { from } to { to } of { size } Results\n    </span>\n  );\n  const options = {\n    paginationSize: 4,\n    pageStartIndex: 1,\n    // alwaysShowAllBtns: true, // Always show next and previous button\n    // withFirstAndLast: false, // Hide the going to First and Last page button\n    // hideSizePerPage: true, // Hide the sizePerPage dropdown always\n    // hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\n    firstPageText: 'First',\n    prePageText: 'Back',\n    nextPageText: 'Next',\n    lastPageText: 'Last',\n    nextPageTitle: 'First page',\n    prePageTitle: 'Pre page',\n    firstPageTitle: 'Next page',\n    lastPageTitle: 'Last page',\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    disablePageTitle: true,\n   };\n\n  \n\n  // Sc Video Uploaded Here......\n  async function Submit(){\n    const user = JSON.parse(localStorage.getItem('user'));\n    let params = queryString.parse(location.search)\n    var arr= []\n    $('.checkboxs').each(function(index){\n      if($('#'+index).is(':checked')){\n        var checkedBoxes = $('#'+index).val();\n        arr.push(checkedBoxes)\n      }\n    })\n    let fd = new FormData();\n    fd.append('SC_ID', arr)\n    fd.append('Item_ID', params.id)  \n    fd.append('Item_type', 'Product')  \n    axios({\n      method: 'post',\n      url: process.env.NEXT_PUBLIC_BASE_URL+'/api/map-manage-shipping-container',\n      data: fd,\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'Authorization': 'Bearer '+user.access_token\n      },\n    }).then((response)  => {\n      if(response.data.status == 204){\n        notify(\"success\", 'Unmap shipping container successfully')\n       }else{\n        notify(\"success\", 'Map shipping container successfully')\n       }\n     \n     \n    }).catch(function (error) {\n      // handle error\n      console.log(error)\n      if(error.response.status == 400){\n        notify(\"error\", error.response.data.error)\n      }else if(error.response.status == 401){\n        localStorage.removeItem(\"user\")\n        router.push('/login')\n      }else{\n        notify(\"error\", 'Something went wrong please try again!')\n      }  \n    })\n  }\n\n  return (\n    <div>\n    <Mainheader />\n    <section className=\"login-page\" style= {{ background: \"url(\" + \"assets/images/loginbg.jpg\" + \")\" }}>\n      <section className=\"innerbg\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h3>Map Shipping Container</h3>\n            </div>\n          </div>\n        </div>\n      </section>\n\n     \n\n      {/* For Videos List */}\n      <div className=\"container\"  >\n        <div className=\"row video_heading\">\n          <div className=\"col-md-6\">\n            <h2>Shipping Container List</h2>\n          </div>\n         \n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"table-responsive datatables-design\">\n              <ToolkitProvider\n                  keyField=\"id\"\n                  data={ filteredMapManageShippingContainer }\n                  columns={ columns }\n                  search\n                >\n                {\n                  props => (\n                    <div> \n                      <SearchBar { ...props.searchProps } />\n                      <BootstrapTable \n                        keyField='id'\n                        columns={columns}  \n                        id = \"data-table-ID\"\n                        classes = \"dt-responsive dataTable no-footer\"\n                        data={filteredMapManageShippingContainer} \n                        pagination={ paginationFactory(options) }\n                        noDataIndication=\"No Records Found\"\n                        { ...props.baseProps }\n                      />\n                    </div>\n                  )\n                }\n              </ToolkitProvider>\n             \n            </div>\n            <div className=\"tablebtn text-right\">\n              <button type=\"button\" className=\"btn btn-info\" onClick={Submit} >Submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    \n\n    </section>\n    <Mainfooter />\n  </div>\n   \n  )\n}","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/map-shipping-container.js",["219","220","221"],[],"/* pages/create-nft.js */\nimport * as React from \"react\";\nimport axios from 'axios'\nimport { useRouter } from 'next/router'\nimport toast from \"../components/Toast\";\nimport { useEffect, useState } from 'react'\nimport Mainheader from './components/layout/mainheader';\nimport Mainfooter from './components/layout/mainfooter';\nimport queryString from 'query-string';\nimport * as $ from 'jquery';\n\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\n\n\n\n\nexport default function SCVideoMaping() {\n  \n  const [inputField , setInputField] = useState({\n    name: '',\n    description: '',\n    video: '',\n  })\n\n  const [videoList, setSCVideoList]=useState([])\n  const [show, setShow] = useState(false);\n  const [base_url, BaseUrl]=useState('')\n  const [html, Sethtml] = useState('');\n  const [checked, setChecked] = useState();\n  const [filteredManageShippingContainer, setFilteredManageShippingContainer] = useState([]);\n  const { SearchBar } = Search;\n  const router = useRouter()\n\n  useEffect(() => {\n    SCVideoList()\n    var table =  document.querySelector('#data-table-ID');\n    table.classList.remove(\"table-bordered\");\n  }, [])\n  \n  // Get SC Video List .....\n  async function SCVideoList() {\n    const user = JSON.parse(localStorage.getItem('user'));\n    let params = queryString.parse(location.search)\n    if(user){\n      var fd = new FormData();\n      fd.append('video_id', params.id);\n      axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/get-manage-sc-list',fd,{\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+user.access_token\n        },\n      }).then( async (response)  => {\n        const data = response.data;\n        BaseUrl(response.data.base_url)\n        setSCVideoList(Object.values(data.manage_sc))\n        setFilteredManageShippingContainer(Object.values(data.manage_sc))\n        // setTimeout(() => {\n        //   Object.values(data.manage_sc).map((item , index)=>{\n           \n        //     if(Boolean(item.SCplacement_id)){ \n        //       if(document.getElementById(index)){\n        //         document.getElementById(index).checked = true;\n        //       }\n        //     }\n        //   })\n        // }, 200);\n        \n      }).catch(function (error) {\n        // handle error\n        console.log(error)\n        if(error.response.status == 400){\n          notify(\"error\", error.response.data.error)\n        }else if(error.response.status == 401){\n          localStorage.removeItem(\"user\")\n          router.push('/login')\n        }else{\n          notify(\"error\", 'Something went wrong please try again!')\n        }\n      })\n    }else{\n      router.push('/login')\n    }\n  }\n\n  const notify = React.useCallback((type, message) => {\n    toast({ type, message });\n  }, []);\n\n  const inputsHandler = (index) =>{    \n   \n    var temp = [];\n    filteredManageShippingContainer.forEach((value, i) => {\n      if(i == index){\n        value.SCplacement_id = '';\n      }\n      temp.push(value);\n    });\n    setFilteredManageShippingContainer(temp)\n    console.log(filteredManageShippingContainer)\n  }\n \n\n\n  // Sc Video Uploaded Here......\n  async function Submit(){\n    const user = JSON.parse(localStorage.getItem('user'));\n    let params = queryString.parse(location.search)\n    var arr= []\n    $('.checkboxs').each(function(index){\n      if($('#'+index).is(':checked')){\n        var checkedBoxes = $('#'+index).val();\n        arr.push(checkedBoxes)\n      }\n    })\n    let fd = new FormData();\n    fd.append('SC_ID', arr)\n    fd.append('Item_ID', params.id)  \n    fd.append('Item_type', 'Video')  \n    axios({\n      method: 'post',\n      url: process.env.NEXT_PUBLIC_BASE_URL+'/api/map-shipping-container-video',\n      data: fd,\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'Authorization': 'Bearer '+user.access_token\n      },\n    }).then((response)  => {\n      if(response.data.status == 204){\n        notify(\"success\", 'Unmap shipping container successfully')\n       }else{\n        notify(\"success\", 'Map shipping container  successfully')\n       }\n     \n    }).catch(function (error) {\n      // handle error\n      console.log(error)\n      if(error.response.status == 400){\n        notify(\"error\", error.response.data.error)\n      }else if(error.response.status == 401){\n        localStorage.removeItem(\"user\")\n        router.push('/login')\n      }else{\n        notify(\"error\", 'Something went wrong please try again!')\n      }  \n    })\n  }\n\n  // Popup close ....\n  function close(){\n    setShow(false);\n    Sethtml('')\n  }\n\n  // Datalist\n   const columns = [\n    {\n      text: \"#\",\n      dataField: 'Sc_ID', \n      headerStyle: { minWidth: '50px' },\n      style: { width: '50px' },\n      formatter: (cell, row, index) => <><input type=\"checkbox\"  value={row.Sc_ID} defaultChecked={Boolean(row.SCplacement_id) } onChange={() => inputsHandler(index)} className=\"checkboxs\" name=\"checkbox\"  id={index}  /><label htmlFor={index}></label></>\n    },\n    {\n      text: \"Image\",\n      dataField: 'Featured_Image',\n      headerStyle: { minWidth: '50px' },\n      style: { width: '50px' },\n      formatter: (cell, row) => <><div className=\"video_button\"><img src={process.env.NEXT_PUBLIC_BASE_URL+'/public/'+row.Featured_Image} /></div></>,\n    },\n    {\n      text: \"Name\",\n      dataField: 'Name',\n      sort: true,\n      headerStyle: { minWidth: '150px' },\n      style: { width: '150px' },\n    },\n    {\n      text: \"Description\",\n      dataField: 'Description',\n      sort: true,\n      style:{width : '504px'},\n      headerStyle:{minWidth : '504px'}\n    },\n   \n    \n  ] \n  const customTotal = (from, to, size) => (\n    <span className=\"react-bootstrap-table-pagination-total\">\n      Showing { from } to { to } of { size } Results\n    </span>\n  );\n  const options = {\n    paginationSize: 4,\n    pageStartIndex: 1,\n    // alwaysShowAllBtns: true, // Always show next and previous button\n    // withFirstAndLast: false, // Hide the going to First and Last page button\n    // hideSizePerPage: true, // Hide the sizePerPage dropdown always\n    // hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\n    firstPageText: 'First',\n    prePageText: 'Back',\n    nextPageText: 'Next',\n    lastPageText: 'Last',\n    nextPageTitle: 'First page',\n    prePageTitle: 'Pre page',\n    firstPageTitle: 'Next page',\n    lastPageTitle: 'Last page',\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    disablePageTitle: true,\n    // A numeric array is also available. the purpose of above example is custom the text\n  };\n\n  return (\n    <div>\n    <Mainheader />\n    <section className=\"login-page\" style= {{ background: \"url(\" + \"assets/images/loginbg.jpg\" + \")\" }}>\n      <section className=\"innerbg\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h3>Map Shipping Container</h3>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* For Videos List */}\n      <div className=\"container\" >\n        <div className=\"row video_heading\">\n          <div className=\"col-md-6\">\n            <h2>Shipping Container List</h2>\n          </div>\n          <div className=\"col-md-6 text-right\">\n            \n            {/* <button type=\"button\" className=\"btn btn-info add_sc\" onClick={divHandle}>Add Shipping Container</button> */}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"table-responsive datatables-design\">\n            <ToolkitProvider\n                keyField=\"id\"\n                data={ filteredManageShippingContainer }\n                columns={ columns }\n                search\n              >\n                {\n                  props => (\n                    <div> \n                      <SearchBar { ...props.searchProps } />\n                      <BootstrapTable \n                        keyField='id'\n                        id = \"data-table-ID\"\n                        classes = \"dt-responsive dataTable no-footer\"\n                        columns={columns}  \n                        data={filteredManageShippingContainer} \n                        pagination={ paginationFactory(options) }\n                        noDataIndication=\"No Records Found\"\n                        { ...props.baseProps }\n                      />\n                    </div>\n                  )\n                }\n              </ToolkitProvider>\n              \n             \n            </div>\n            <div className=\"tablebtn text-right\">\n              <button type=\"button\" className=\"btn btn-info\" onClick={Submit} >Submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Video Popup */}\n      <div id=\"modal-row\" className=\"modal\" style={{ display: show ? \"block\" : \"none\" }}>\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">Shipping Container</h4>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={close}>&times;</button>\n            </div>\n\n            <div className=\"modal-body\">\n              {html}\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </section>\n    <Mainfooter />\n  </div>\n   \n  )\n}","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/map-slime-seat.js",["222","223","224"],[],"/* pages/create-nft.js */\nimport * as React from \"react\";\nimport axios from 'axios'\nimport { useRouter } from 'next/router'\nimport toast from \"../components/Toast\";\nimport { useEffect, useState } from 'react'\nimport Mainheader from './components/layout/mainheader';\nimport Mainfooter from './components/layout/mainfooter';\nimport queryString from 'query-string';\n\nimport * as $ from 'jquery';\n\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\n\n\n\n\n\n\nexport default function SlimeSeatMaping() {\n  \n  \n\n  const { SearchBar } = Search;\n  const [videoList, setSCVideoList]=useState([])\n\n  const [show, setShow] = useState(false);\n  const [base_url, BaseUrl]=useState('')\n  const [html, Sethtml] = useState('');\n  const [search, setSearch] = useState('');\n  const [filteredSlimeSeat, setFilteredSlimeSeat] = useState([]);\n\n  const router = useRouter()\n  useEffect(() => {\n    SCVideoList()\n    var table =  document.querySelector('#data-table-ID');\n    table.classList.remove(\"table-bordered\");\n  }, [])\n\n\n  // Get SC Video List .....\n  async function SCVideoList() {\n   \n    const user = JSON.parse(localStorage.getItem('user'));\n    let params = queryString.parse(location.search)\n    if(user){\n      var fd = new FormData();\n      fd.append('slime_seat', params.id);\n      axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/get-manage-sc-list',fd,{\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+user.access_token\n        },\n      }).then( async (response)  => {\n        const data = response.data;\n        BaseUrl(response.data.base_url)\n        setSCVideoList(Object.values(data.manage_sc))\n        setFilteredSlimeSeat(Object.values(data.manage_sc))\n        setTimeout(() => {\n          Object.values(data.manage_sc).map((item , index)=>{\n            if(Boolean(item.SCplacement_id)){ \n              if(document.getElementById(index)){\n                document.getElementById(index).checked = true;\n              }\n            }\n          })\n        }, 200);\n       \n      }).catch(function (error) {\n        // handle error\n        console.log(error)\n        if(error.response.status == 400){\n          notify(\"error\", error.response.data.error)\n        }else if(error.response.status == 401){\n          localStorage.removeItem(\"user\")\n          router.push('/login')\n        }else{\n          notify(\"error\", 'Something went wrong please try again!')\n        }\n      })\n    }else{\n      router.push('/login')\n    }\n  }\n\n  const notify = React.useCallback((type, message) => {\n    toast({ type, message });\n  }, []);\n\n  // Sc Video Uploaded Here......\n  async function Submit(){\n    const user = JSON.parse(localStorage.getItem('user'));\n    let params = queryString.parse(location.search)\n    var arr= []\n    $('.checkboxs').each(function(index){\n      console.log(index)\n      if($('#'+index).is(':checked')){\n        var checkedBoxes = $('#'+index).val();\n        arr.push(checkedBoxes)\n      }\n    })\n    let fd = new FormData();\n    fd.append('SC_ID', arr)\n    fd.append('Item_ID', params.id)  \n    fd.append('Item_type', 'Slime Seat')  \n    axios({\n      method: 'post',\n      url: process.env.NEXT_PUBLIC_BASE_URL+'/api/map-slime-seat',\n      data: fd,\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'Authorization': 'Bearer '+user.access_token\n      },\n    }).then((response)  => {\n     if(response.data.status == 204){\n      notify(\"success\", 'Unmap shipping container successfully')\n     }else{\n      notify(\"success\", 'Map shipping container successfully')\n     }\n     \n    }).catch(function (error) {\n      // handle error\n      console.log(error)\n      if(error.response.status == 400){\n        notify(\"error\", error.response.data.error)\n      }else if(error.response.status == 401){\n        localStorage.removeItem(\"user\")\n        router.push('/login')\n      }else{\n        notify(\"error\", 'Something went wrong please try again!')\n      }  \n    })\n  }\n\n  const inputsHandler = (index) =>{    \n\n    var temp = [];\n    filteredSlimeSeat.forEach((value, i) => {\n      if(i == index){\n        value.SCplacement_id = '';\n      }\n      temp.push(value);\n    });\n    setFilteredSlimeSeat(temp)\n\n  }\n\n\n\n\n  // Popup close ....\n  function close(){\n    setShow(false);\n    Sethtml('')\n  }\n\n\n  // Datalist\n  const columns = [\n\n    {\n      text: \"#\",\n      dataField: 'Sc_ID',\n      headerStyle: { minWidth: '50px' },\n      style: { width: '50px' },\n      formatter: (cell, row, index) => <><input type=\"checkbox\" defaultChecked={Boolean(row.SCplacement_id) } onChange={() => inputsHandler(index)} className=\"checkboxs\" name=\"checkbox\"   value={row.Sc_ID}  id={index}  /><label htmlFor={index}></label></>\n    },\n    {\n      text: \"Image\",\n      dataField: 'Featured_Image',\n      headerStyle: { minWidth: '50px' },\n      style: { width: '50px' },\n      formatter: (cell, row) => <><div className=\"video_button\"><img src={process.env.NEXT_PUBLIC_BASE_URL+'/public/'+row.Featured_Image} /></div></>,\n    },\n    {\n      text: \"Name\",\n      dataField: 'Name',\n      sort: true,\n      headerStyle: { minWidth: '150px' },\n      style: { width: '150px' },\n    },\n    {\n      text: \"Description\",\n      dataField: 'Description',\n      sort: true,\n      style:{width : '504px'},\n      headerStyle:{minWidth : '504px'}\n    },\n   \n    \n  ] \n  const customTotal = (from, to, size) => (\n    <span className=\"react-bootstrap-table-pagination-total\">\n      Showing { from } to { to } of { size } Results\n    </span>\n  );\n  const options = {\n    paginationSize: 4,\n    pageStartIndex: 1,\n    // alwaysShowAllBtns: true, // Always show next and previous button\n    // withFirstAndLast: false, // Hide the going to First and Last page button\n    // hideSizePerPage: true, // Hide the sizePerPage dropdown always\n    // hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\n    firstPageText: 'First',\n    prePageText: 'Back',\n    nextPageText: 'Next',\n    lastPageText: 'Last',\n    nextPageTitle: 'First page',\n    prePageTitle: 'Pre page',\n    firstPageTitle: 'Next page',\n    lastPageTitle: 'Last page',\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    disablePageTitle: true,\n    // A numeric array is also available. the purpose of above example is custom the text\n  };\n\n\n\n  return (\n    <div>\n    <Mainheader />\n    <section className=\"login-page\" style= {{ background: \"url(\" + \"assets/images/loginbg.jpg\" + \")\" }}>\n      <section className=\"innerbg\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h3>Map Shipping Container</h3>\n            </div>\n          </div>\n        </div>\n      </section>\n\n\n      {/* For Videos List */}\n      <div className=\"container\" >\n        <div className=\"row video_heading\">\n          <div className=\"col-md-6\">\n            <h2>Shipping Container List</h2>\n          </div>\n          <div className=\"col-md-6 text-right\">\n            \n            {/* <button type=\"button\" className=\"btn btn-info add_sc\" onClick={divHandle}>Add Shipping Container</button> */}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"table-responsive datatables-design\">\n           \n              <ToolkitProvider\n                keyField=\"id\"\n                data={ filteredSlimeSeat }\n                columns={ columns }\n                search\n              >\n                {\n                  props => (\n                    <div> \n                      <SearchBar { ...props.searchProps } />\n                      <BootstrapTable \n                        keyField='id'\n                        id = \"data-table-ID\"\n                        classes = \"dt-responsive dataTable no-footer\"\n                        columns={columns}  \n                        data={filteredSlimeSeat} \n                        pagination={ paginationFactory(options) }\n                        noDataIndication=\"No Records Found\"\n                        { ...props.baseProps }\n                      />\n                    </div>\n                  )\n                }\n              </ToolkitProvider>\n              \n              \n            </div>\n            <div className=\"tablebtn text-right\">\n              <button type=\"button\" className=\"btn btn-info\" onClick={Submit} >Submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Video Popup */}\n      <div id=\"modal-row\" className=\"modal\" style={{ display: show ? \"block\" : \"none\" }}>\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">Shipping Container</h4>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={close}>&times;</button>\n            </div>\n\n            <div className=\"modal-body\">\n              {html}\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </section>\n    <Mainfooter />\n  </div>\n   \n  )\n}","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/my-nft.js",["225","226"],[],"/* pages/dashboard.js */\nimport * as React from \"react\";\nimport { ethers } from 'ethers'\nimport { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport Web3Modal from 'web3modal'\nimport toast from \"../components/Toast\";\nimport {\n  marketplaceAddress\n} from '../config'\n\nimport NFTMarketplace from '../artifacts/contracts/NFTMarketplace.sol/NFTMarketplace.json'\nimport Mainheader from './components/layout/mainheader';\nimport Mainfooter from './components/layout/mainfooter';\nimport { useRouter } from 'next/router'\n\n\n\nexport default function CreatorDashboard() {\n  const router = useRouter()\n  const [nfts, setNfts] = useState([])\n  const [loadingState, setLoadingState] = useState('not-loaded')\n  const [loading, setLoading] = useState(false);\n  const [rndmNumber, setRndmNumber] = useState('');\n\n  useEffect(() => {\n    loadNFTs()\n  }, [])\n\n  const notify = React.useCallback((type, message) => {\n    toast({ type, message });\n  }, []);\n  async function loadNFTs() {\n\n    const user = JSON.parse(localStorage.getItem('user'));  \n    var temp = 'logout'; \n    if(user){\n      var response = await axios.get(process.env.NEXT_PUBLIC_BASE_URL+'/api/check-auth',{\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+user.access_token\n        },\n      }).then((response)  =>{\n        temp = 'login';\n      }).catch(function (error) {\n        // handle error\n        if(error.response.status == 400){\n          notify(\"error\", error.response.data.error)\n        }else if(error.response.status == 401) {\n          temp = 'logout';\n          localStorage.removeItem(\"user\")\n          router.push('/login')\n        }else{\n          notify(\"error\", 'Something went wrong please try again!')\n        } \n      })\n      if(temp == 'login'){\n\n        const web3Modal =  new Web3Modal({\n          network: 'mainnet',\n          cacheProvider: true,\n        })\n        if(window.ethereum){\n        await window.ethereum.request({method:'eth_requestAccounts'})\n          .then(res=>{\n            // Return the address of the wallet\n          })\n        }else{\n          alert(\"install metamask extension!!\")\n        }\n        const connection =  await web3Modal.connect()\n        \n        setLoading(true) \n        const provider = new ethers.providers.Web3Provider(connection)\n        const signer = provider.getSigner()\n        const contract = new ethers.Contract(marketplaceAddress, NFTMarketplace.abi, signer)\n        const data = await contract.fetchItemsListed()\n  \n        var wallet_response =  await  axios.get(process.env.NEXT_PUBLIC_BASE_URL+'/api/get-users-nft',{\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer '+user.access_token\n          },\n        })\n        const userNFT = wallet_response.data.user_nft.reverse()\n        const reponsePriceExchange = await axios.get('https://api.coinconvert.net/convert/matic/usd?amount='+1)\n  \n        if(wallet_response.data){\n          const items = await Promise.all(userNFT.map(async  ( i, index) => {\n            const tokenUri = await contract.tokenURI(i.tokenID)\n            if(reponsePriceExchange){\n              if(tokenUri.split('/')[2] ==  'infura-ipfs.io'){\n                var getwayURL = 'https://gateway.moralisipfs.com/ipfs/'+tokenUri.split('/')[4]\n                const meta = await axios.get(getwayURL)\n                const USDPrice = i.price * reponsePriceExchange.data.USD;\n  \n                if(meta.data != undefined){\n                  const priceFormat = ethers.utils.parseUnits(i.price, 'ether')\n                  let price = ethers.utils.formatUnits(priceFormat, 'ether')\n                  let item = {\n                    price,\n                    DollarPrice:USDPrice,\n                    tokenId: i.tokenID,\n                    seller: i.seller,\n                    owner: i.owner,\n                    image: meta.data.image,\n                    name: meta.data.name,\n                    item_id: wallet_response.data.user_nft?wallet_response.data.user_nft[index].id:'',\n                    wishlist : i.wishlist,\n                    wishlist_id : i.wishlist_id ? i.wishlist_id : '',\n                    id : i.id,\n                  }\n                  return item\n                }\n              }\n            }\n          }))\n          setNfts(items)\n          setLoading(false) \n          setLoadingState('loaded') \n        }\n      }\n\n    }else{\n      router.push('/login')\n    }\n\n\n  }\n \n\n\n  async function wishlist(wishlist_id, product_id){\n    const user = JSON.parse(localStorage.getItem('user'));\n    \n    \n    if(Boolean(wishlist_id)){\n      var fd = new FormData();\n      fd.append('wishlist_id', wishlist_id);\n      axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/remove-wishlist', fd ,{\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+user.access_token\n        },\n      }).then((response)  => {\n       \n        nfts.forEach((nft, index) => {\n          if(Boolean(wishlist_id)){\n            if(nft.wishlist_id == wishlist_id){\n              // console.log(wishlist_id); \n              nft.wishlist_id = '';\n              nft.wishlist = 0;\n            }\n            nfts[index] = nft\n          }\n        });\n        setRndmNumber(Math.random())\n        setNfts(nfts)\n        notify(\"success\", 'Wishlist removed successfully!')\n      }).catch(function (error) {\n        // handle error\n        if(error.response){\n\n          if(error.response.status == 400){\n            notify(\"error\", error.response.data.error)\n          }else if(error.response.status == 401){\n            localStorage.removeItem(\"user\")\n            router.push('/login')\n          } else{\n              notify(\"error\", 'Something went wrong please try again!')\n          }\n        }else{\n          console.log(error)\n        }\n      })\n    }else{\n      var fd = new FormData();\n      fd.append('product_id', product_id);\n      axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/add-wishlist', fd ,{\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+user.access_token\n        },\n      }).then((response)  => {\n       \n        nfts.forEach((nft, index) => {\n          if(Boolean(product_id)){\n            if(nft.id == product_id){\n              // console.log(wishlist_id); \n              nft.wishlist_id = response.data.wishlist.id;\n              nft.wishlist = 1;\n            }\n            nfts[index] = nft\n          }\n        });\n        console.log(nfts);\n\n        setRndmNumber(Math.random())\n        setNfts(nfts)\n        notify(\"success\", 'Wishlist added successfully!')\n      }).catch(function (error) {\n        // handle error\n        if(error.response){\n\n          if(error.response.status == 400){\n            notify(\"error\", error.response.data.error)\n          }else if(error.response.status == 401){\n            localStorage.removeItem(\"user\")\n            router.push('/login')\n          } else{\n              notify(\"error\", 'Something went wrong please try again!')\n          }\n        }else{\n          console.log(error)\n        }\n      })\n    }\n  }\n\n  if (loadingState === 'loaded' && !nfts.length) return (\n    \n    <div>\n    <Mainheader />\n  \n    <section className=\"latestnft\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <h2 className=\"heading\">My NFT<div className=\"divider\"></div></h2>\n          </div>\n        </div>\n        <div className=\"\">\n          \n          <div className=\"row myfvtrow\">\n          <h1 className=\"py-10 px-20 text-3xl\">No nfts listed</h1>\n          </div>\n        </div>\n      </div>\n    \n    </section>\n    <Mainfooter />\n  </div>\n  )\n  return (\n\n    <div>\n        <Mainheader />\n        <section className=\"latestnft\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <h2 className=\"heading\">My NFTs<div className=\"divider\"></div></h2>\n              </div>\n            </div>\n            {loading ? (\n              <div className=\"loader-container\">\n                <div className=\"spinner\"></div>\n              </div>\n            ) : (\n              <div className=\"\">\n                \n                <div className=\"row myfvtrow\">\n                  {\n                  nfts.map((nft, i) => (\n                    nft?<div key={i} className=\"col-sm-6 col-md-4 col-lg-3 myfvt\">      \n                  {/* <div className=\"col-sm-6 col-md-4 col-lg-3 myfvt\"> */}\n                    <div className=\"nftbox\">\n                      <div className=\"nftbox-img\">\n                        <a href=\"#\"><img src={nft.image} className=\"img-fluid\" alt=\"\"/></a>\n                        <div className=\"counter\">\n                          {/* <span>717 : 6 : 32 : 34</span> */}\n                        </div>\n                      </div>\n                      <div className=\"nftbox-desc\">\n                        <h3><a href=\"#\">{nft.name}</a></h3>\n                        <h5 className=\"rate\">\n                          $ {nft.DollarPrice.toFixed(7)}\n                          {/* <span className=\"like-design\"><a  onClick={() => wishlist(nft.wishlist_id, nft.id)} id={nft.wishlist_id} ><i className={nft.wishlist == 1 ? 'fa fa-heart':'fa fa-heart-o'} aria-hidden=\"true\"></i></a></span> */}\n\n                        </h5>\n                        {/* <button className=\"mt-4 w-full bg-pink-500 text-white font-bold py-2 px-12 rounded\" onClick={() => listNFT(nft)} value={nft.item_id}><span className=\"front\">Map Shipping Container</span></button> */}\n                        <button className=\"btn btn-info\" onClick={e => {router.push(`/map-manage-shipping-container?id=${nft.item_id}`)}} value={nft.item_id}>Map Container</button>\n                      </div>\n                    </div>\n                    </div> : \"\"\n                    )) \n                  }\n                </div>\n              </div>\n            )}\n\n          </div>\n        \n        </section>\n        <Mainfooter />\n    </div>\n    \n \n  )\n}","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/my-profile.js",["227","228","229"],[],"/* pages/create-nft.js */\nimport * as React from \"react\";\nimport axios from 'axios'\nimport { useRouter } from 'next/router'\nimport toast from \"../components/Toast\";\nimport { useEffect, useState } from 'react'\nimport Mainheader from './components/layout/mainheader';\nimport Mainfooter from './components/layout/mainfooter';\n\n\nexport default function Myprofile() {\n  \n  const [inputField , setInputField] = useState({\n    id: '',\n    name: '',\n    lastname: '',\n    email: '',\n    password:'',\n    phone_number:'',\n    bio:'',\n    facebook_link:'',\n    twitter_link:'',\n    youtube_link:'',\n    is_verified:'',\n    profile_image: '',\n    city: '',\n    state: '',\n    country: '',\n    pincode: '',\n    address: '',\n  })\n  const [userData, setUserData] = useState('')\n  const [file, setFileObject]=useState('')\n  const [profile_image, setProfileImage]=useState('')\n  const [flag, setFlag]=useState(false)\n  const router = useRouter()\n  useEffect(() => {\n    UserDetail()\n  }, [])\n\n  async function UserDetail() {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if(user){\n      axios.get(process.env.NEXT_PUBLIC_BASE_URL+'/api/my-profile',{\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+user.access_token\n        },\n      }).then((response)  => {\n        const data = response.data;\n\n        setInputField(data.user) \n        setProfileImage(data.user.profile_image)\n        setUserData(data)\n      }).catch(function (error) {\n        // handle error\n        if(error.response.status == 400){\n          notify(\"error\", error.response.data.error)\n        }else if(error.response.status == 401){\n          localStorage.removeItem(\"user\")\n          router.push('/login')\n        }else{\n          notify(\"error\", 'Something went wrong please try again!')\n        }\n      })\n    }else{\n      router.push('/login')\n    }\n  }\n\n  const notify = React.useCallback((type, message) => {\n    toast({ type, message });\n  }, []);\n\n  const inputsHandler = (e) =>{\n    const { name, value } = e.target;\n    if(name == 'profile_image'){\n      if(e.target.files[0]){\n        setFileObject(URL.createObjectURL(e.target.files[0]));\n        setProfileImage(e.target.files[0])\n        setFlag(true)\n      }\n    }else{\n      setInputField((prevState) => ({\n        ...prevState,\n        [name]: value,\n      }));\n    }\n    \n\n  }\n\n  async function submitButton(){\n    console.log(inputField.facebook_link)\n    const user = JSON.parse(localStorage.getItem('user'));\n    delete user.user.profile_image\n    \n    // localStorage.setItem('user', JSON.stringify(response.data))\n    let fd = new FormData();\n    fd.append('name', inputField.name)\n    fd.append('lastname', inputField.lastname)\n    fd.append('bio', inputField.bio)\n\n    fd.append('city', inputField.city)\n    fd.append('state', inputField.state)\n    fd.append('country', inputField.country)\n    fd.append('pincode', inputField.pincode)\n    fd.append('address', inputField.address)\n    fd.append('facebook_link', Boolean(inputField.facebook_link) ? inputField.facebook_link : '')\n    fd.append('twitter_link', Boolean(inputField.twitter_link )? inputField.twitter_link : '')\n    fd.append('youtube_link', Boolean(inputField.youtube_link) ? inputField.youtube_link : '')\n    fd.append('phone_number', Boolean(inputField.phone_number) ?inputField.phone_number : '' )\n    fd.append('profile_image', profile_image)  \n    axios({\n        method: 'post',\n        url: process.env.NEXT_PUBLIC_BASE_URL+'/api/update-my-profile',\n        data: fd,\n        headers: {\n        'Content-Type': 'multipart/form-data',\n        'Authorization': 'Bearer '+user.access_token\n        },\n    }).then((response)  => {\n      notify(\"success\", 'Profile updated successfully!')\n    //   const data = response.data;\n      setInputField(response.data.user)\n      setUserData(response.data)\n      setProfileImage(response.data.user.profile_image)\n      setFlag(false)\n      Object.assign(user.user, {profile_image: response.data.user.profile_image});\n      localStorage.setItem('user', JSON.stringify(user))\n    }).catch(function (error) {\n      // handle error\n      if(error.response.status == 400){\n        notify(\"error\", error.response.sdata.error)\n      }else if(error.response.status == 401){\n        localStorage.removeItem(\"user\")\n        router.push('/login')\n      }else{\n        notify(\"error\", 'Something went wrong please try again!')\n      }  \n    })\n      \n    \n  }\n\n  async function verifyAccount(e){\n    const user = JSON.parse(localStorage.getItem('user'));\n    if(user){\n      var fd = new FormData();\n      fd.append('id', e.target.value);\n      axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/verification-request', fd,{\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+user.access_token\n        },\n      }).then((response)  => {\n        notify(\"success\", 'Verification request submit!')\n        UserDetail()\n      }).catch(function (error) {\n        // handle error\n        if(error.response.status == 400){\n          notify(\"error\", error.response.data.error)\n        }else if(error.response.status == 401){\n          localStorage.removeItem(\"user\")\n          router.push('/login')\n        }else{\n          notify(\"error\", 'Something went wrong please try again!')\n        }\n      })\n    }else{\n      router.push('/login')\n    }\n  }\n\n  return (\n    <div>\n      <Mainheader />\n      <section className=\"login-page\" style= {{ background: \"url(\" + \"/assets/images/loginbg.jpg\" + \")\" }}>\n        <section className=\"innerbg\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <h3>My Profile</h3>\n              </div>\n            </div>\n          </div>\n        </section>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"login-page-design\">\n                <h2>My Profile</h2>\n                <h4>Update your account</h4>\n                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.</p>\n                <div className=\"loginform\">\n                    <div className=\"box\">\n                        <input type=\"file\"  name=\"profile_image\" id=\"file-5\" onChange={inputsHandler}  className=\"inputfile inputfile-4\" data-multiple-caption=\"{count} files selected\" multiple />\n                        <label htmlFor=\"file-5\">\n                        <figure><img id=\"profilepreview\" src={flag ? file : profile_image ? userData.base_url+'/public/'+profile_image :  'assets/images/user.png'} /></figure>\n                        <span><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path><path d=\"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.9 13.98l2.1 2.53 3.1-3.99c.2-.26.6-.26.8.01l3.51 4.68c.25.33.01.8-.4.8H6.02c-.42 0-.65-.48-.39-.81L8.12 14c.19-.26.57-.27.78-.02z\"></path></svg></span></label>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-md-6\">\n                        <div className=\"form-group\">\n                            <input type=\"text\" className=\"form-control\" onChange={inputsHandler}  name=\"name\"  placeholder=\"First Name\" value={inputField.name} id=\"fname\" disabled={inputField.is_verified == 0 ? false : true} />\n                        </div>\n                        <div className=\"form-group\">\n                          <input type=\"email\" className=\"form-control\" onChange={inputsHandler}  name=\"email\" placeholder=\"Email Address\" value={inputField.email} id=\"email\" disabled />\n                        </div>\n                        <div className=\"form-group\">\n                          <input type=\"text\" className=\"form-control\" onChange={inputsHandler}  name=\"city\" placeholder=\"City\" value={inputField.city } disabled={inputField.is_verified == 0 ? false : true} />\n                        </div>\n                        <div className=\"form-group\">\n                          <input type=\"text\" className=\"form-control\" onChange={inputsHandler}  name=\"country\" placeholder=\"Country\" value={inputField.country } disabled={inputField.is_verified == 0 ? false : true} />\n                        </div>\n                        <div className=\"form-group\">\n                          <input type=\"text\" className=\"form-control\" onChange={inputsHandler}  name=\"facebook_link\" placeholder=\"Facebook link\" value={inputField.facebook_link ? inputField.facebook_link : '' } disabled={inputField.is_verified == 0 ? false : true} />\n                        </div>\n                        <div className=\"form-group\">\n                          <input type=\"text\" className=\"form-control\" onChange={inputsHandler}  name=\"youtube_link\" placeholder=\"Youtube link\" value={inputField.youtube_link ? inputField.youtube_link : '' } disabled={inputField.is_verified == 0 ? false : true} />\n                        </div>\n                      </div>\n                      \n                      <div className=\"col-md-6\">\n                        <div className=\"form-group\">\n                          <input type=\"text\" className=\"form-control\" onChange={inputsHandler}  name=\"lastname\" placeholder=\"Last Name\" value={inputField.lastname} id=\"lname\" disabled={inputField.is_verified == 0 ? false : true} />\n                        </div>\n                        <div className=\"form-group\">\n                          <input type=\"text\" className=\"form-control\" onChange={inputsHandler}  name=\"phone_number\" placeholder=\"Phone Number (optional)\" value={Boolean(inputField.phone_number) ? inputField.phone_number : '' } disabled={inputField.is_verified == 0 ? false : true} />\n                        </div>\n                        <div className=\"form-group\">\n                          <input type=\"text\" className=\"form-control\" onChange={inputsHandler}  name=\"state\" placeholder=\"State\" value={inputField.state } disabled={inputField.is_verified == 0 ? false : true} />\n                        </div>\n                        <div className=\"form-group\">\n                          <input type=\"text\" className=\"form-control\" onChange={inputsHandler}  name=\"pincode\" placeholder=\"Pincode\" value={inputField.pincode } disabled={inputField.is_verified == 0 ? false : true} />\n                        </div>\n                        <div className=\"form-group\">\n                          <input type=\"text\" className=\"form-control\" onChange={inputsHandler}  name=\"twitter_link\" placeholder=\"Twitter link\" value={inputField.twitter_link ? inputField.twitter_link : '' } disabled={inputField.is_verified == 0 ? false : true} />\n                        </div>\n                        <div className=\"form-group\">\n                          <input type=\"text\" className=\"form-control\" onChange={inputsHandler}  name=\"bio\" placeholder=\"Bio\" value={inputField.bio } disabled={inputField.is_verified == 2 ? true : false} />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"form-group\">\n                      <input type=\"text\" className=\"form-control\" onChange={inputsHandler}  name=\"address\" placeholder=\"Address\" value={inputField.address } disabled={inputField.is_verified == 0 ? false : true} />\n                    </div>\n                    {/* <div className=\"form-group forgotpassword\">\n                        <a href=\"forgot-password.html\">Forgot password?</a>\n                    </div> */}\n\n                    <div className=\"row\">\n                      <div className=\"col\">\n                        <div className=\"form-group loginbtn\">\n                          <input type=\"submit\" className=\"btn btn-info\" onClick={submitButton} disabled={inputField.is_verified == 2 ? true : false} value={inputField.is_verified == 2 ? 'Verification Pending' : 'UPDATE'} />\n                        </div> \n                      </div>\n                      {\n                        inputField.is_verified == 0 \n                        ?\n                          <div className=\"col\">\n                            <div className=\"form-group loginbtn\">\n                              <button className=\"btn btn-info\"  onClick={verifyAccount} value={inputField.id}  ><i className=\"fas fa-badge-check\"></i>Verify Account</button>\n                            </div> \n                          </div>\n\n                        : \n                        ''\n                        }\n                    </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <Mainfooter />\n    </div>\n   \n  )\n}","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/nfts.js",["230","231","232"],[],"/* pages/index.js */\nimport * as React from \"react\";\nimport { ethers } from 'ethers'\nimport toast from \"../components/Toast\";\nimport { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport Web3Modal from 'web3modal'\nimport Select from 'react-select'\nimport Mainheader from './components/layout/mainheader';\nimport Mainfooter from './components/layout/mainfooter';\nimport { useRouter } from 'next/router'\n\nimport {\n  marketplaceAddress\n} from '../config'\n\nimport NFTMarketplace from '../artifacts/contracts/NFTMarketplace.sol/NFTMarketplace.json'\n\n\n\n\nexport default function Home() {\n  const router = useRouter()\n  const [nfts, setNfts] = useState([])\n  const [show, setShow] = useState(false);\n  const [html, Sethtml] = useState('');\n  const [baseURL, setBaseUrl] = useState('');\n  const [rndmNumber, setRndmNumber] = useState('');\n  const [loading, setLoading] = useState(false);\n  \n\n  const checkedArr = [];\n\n  const options = [\n    { value: 'by_user', label: 'By User' },\n    { value: 'by_custom', label: 'By Custom' },\n  ]\n  var wltAdr = []\n\n  const [loadingState, setLoadingState] = useState('not-loaded')\n  useEffect(() => {\n    loadNFTs()\n  }, [])\n\n  const notify = React.useCallback((type, message) => {\n    toast({ type, message });\n  }, []);\n  \n\n  async function  users(e){\n  \n    if(e.value == 'by_user'){\n      \n      const user = JSON.parse(localStorage.getItem('user'));\n      if(user){\n\n        var formData = new FormData();\n        formData.append('by_user', e.value);\n  \n  \n        // const response = await axios.get(process.env.NEXT_PUBLIC_BASE_URL+'/api/get-users', formData);\n  \n  \n        axios.get(process.env.NEXT_PUBLIC_BASE_URL+'/api/get-users' ,{\n          headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer '+user.access_token\n          },\n        }).then((response)  => {\n          const data = response.data.user;\n          setShow(true);\n          Sethtml(\n            <div>\n              <ul className=\"nft_users\">\n                {data.map((user, key) => {\n                  return (\n                    <li key={key}>\n                      <input className=\"abc\" id={user.id} value={user.id} name=\"ids[]\"  data-id={user.id} onChange={handleChange} type=\"checkbox\" /><label htmlFor={user.id}> {user.name}</label>\n                    </li>\n                  )\n                })}\n              </ul>\n            </div>\n          );\n        }).catch(function (error) {\n          // handle error\n          if(error.response){\n  \n            if(error.response.status == 400){\n              notify(\"error\", error.response.data.error)\n            }else if(error.response.status == 401){\n              localStorage.removeItem(\"user\")\n              router.push('/login')\n            } else{\n                notify(\"error\", 'Something went wrong please try again!')\n            }\n          }else{\n            console.log(error)\n          }\n        })\n      }\n    }\n\n  }\n  function close(){\n    setShow(false);\n  }\n  async function handleChange(event) {\n   \n    const user = JSON.parse(localStorage.getItem('user'));\n    if (event.target.checked) {\n      checkedArr.push(event.target.value);\n      var fd = new FormData();\n      fd.append('ids[]', checkedArr);\n      \n      // setLoading(true)\n      axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/get-user-nft-collections', fd ,{\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+user.access_token\n        },\n      }).then((response)  => {\n        wltAdr.push(event.target.value)\n        loadNFTs(response.data.userNFTCollection, response.data.wallet_address, response.data.flag);\n      }).catch(function (error) {\n        // handle error\n        if(error.response.status == 400){\n          notify(\"error\", error.response.data.error)\n        }else if(error.response.status == 401){\n          localStorage.removeItem(\"user\")\n          router.push('/login')\n        } else{\n            notify(\"error\", 'Something went wrong please try again!')\n        }\n      })\n    } else {\n      let index = checkedArr.findIndex(a => a === event.target.value);\n      checkedArr.splice(index,1);\n      var fd = new FormData();\n      fd.append('ids[]', checkedArr);\n      // const response = await axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/get-user-nft-collections',fd);\n      axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/get-user-nft-collections', fd ,{\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+user.access_token\n        },\n      }).then((response)  => {\n        if(checkedArr.length > 0){\n          wltAdr.push(event.target.value)\n          loadNFTs(response.data.userNFTCollection, response.data.wallet_address, response.data.flag);\n        }else{\n          wltAdr.push(event.target.value)\n          loadNFTs(response.data.userNFTCollection, response.data.wallet_address);\n        }\n      }).catch(function (error) {\n        // handle error\n        if(error.response.status == 400){\n          notify(\"error\", error.response.data.error)\n        }else if(error.response.status == 401){\n          localStorage.removeItem(\"user\")\n          router.push('/login')\n        } else{\n            notify(\"error\", 'Something went wrong please try again!')\n        }\n      })\n     \n    }\n   \n    \n  };\n\n  async function loadNFTs(nftCollection, wallet_address, flag) {\n   \n    /* create a generic provider and query for unsold market items */\n    // Check auth\n    \n    setLoading(true) \n    const provider = new ethers.providers.JsonRpcProvider(\"https://rpc-mumbai.maticvigil.com\")\n    const contract = new ethers.Contract(marketplaceAddress, NFTMarketplace.abi, provider)\n    const data = await contract.fetchMarketItems()\n    \n    var wallet_addresses = [];\n    var wallet_response = '';\n    \n    const itemsss = await Promise.all(data.map(async (i, index) => {\n      wallet_addresses.push(i.seller);\n\n    }))\n   \n    /*\n    *  map over items returned from smart contract and format \n    *  them as well as fetch their token metadata\n    */\n\n    // For user image\n\n    const user = JSON.parse(localStorage.getItem('user'));  \n    if(user){\n      let fd = new FormData\n      fd.append('wallet_address', wallet_addresses)\n      wallet_response =  await  axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/nft-profile-image', fd ,{\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+user.access_token\n        },\n      })\n      const userNFT = wallet_response.data.user_nft.reverse()\n      const reponsePriceExchange = await axios.get('https://api.coinconvert.net/convert/matic/usd?amount='+1)\n      setBaseUrl(wallet_response.data.base_url)\n      if(nftCollection != undefined && flag == 'backend'){\n        \n        if(nftCollection.length > 0){ \n\n          const items = await Promise.all(nftCollection.map(async (i, index) => {\n            \n\n            if(wallet_address.includes(i.seller)){\n              console.log(i);\n              var profileImage = '';\n              wallet_response.data.profilesData.forEach(value => {\n                if(value.wallet_address == i.seller){\n                  profileImage = value.profile_image\n                }\n              });\n              const tokenUri = await contract.tokenURI(i.tokenID)\n              const USDPrice = i.price * reponsePriceExchange.data.USD;\n\n              if(reponsePriceExchange){\n                if(tokenUri.split('/')[2] ==  'infura-ipfs.io'){\n                  var getwayURL = 'https://gateway.moralisipfs.com/ipfs/'+tokenUri.split('/')[4]\n                  const meta = await axios.get(getwayURL)\n                  let price = ethers.utils.formatUnits(i.string_price, 'ether')\n                  console.log(i.string_price)\n                  let item = {\n                    price,\n                    DollarPrice:USDPrice,\n                    tokenId: i.tokenID,\n                    seller: i.seller,\n                    image: meta.data.image,\n                    name: meta.data.name,\n                    description: meta.data.description,\n                    pImage : profileImage,\n                    TokenID : i.tokenID,\n                    wishlist : i.wishlist,\n                    wishlist_id : i.wishlist_id ? i.wishlist_id : '',\n                    id : i.id,\n                  }\n                  return item\n                }\n              } \n            }\n\n          }))\n          setNfts(items)\n          setLoading(false)\n          setLoadingState('loaded')\n        }else{\n          console.log('No NFT')\n          setNfts([])\n          setLoadingState('loaded')\n        }\n\n\n      }else{\n        console.log('Without filter')\n        const items = await Promise.all(userNFT.map(async (i, index) => {\n          var profileImage = '';\n          wallet_response.data.profilesData.forEach(value => {\n            if(value.wallet_address == i.seller){\n              profileImage = value.profile_image\n            }\n          });\n          const tokenUri = await contract.tokenURI(i.tokenID)\n          const USDPrice = i.price * reponsePriceExchange.data.USD;\n          // const reponsePriceExchange = await axios.get('https://api.coinconvert.net/convert/matic/usd?amount='+i.price)\n\n          if(reponsePriceExchange){\n            if(tokenUri.split('/')[2] ==  'infura-ipfs.io'){\n              var getwayURL = 'https://ipfs.io/ipfs/'+tokenUri.split('/')[4]\n              const meta = await axios.get(getwayURL) \n            \n              if(meta.data != undefined){\n                \n                let price = ethers.utils.formatUnits(i.string_price, 'ether')\n              \n                let item = {\n                  price,\n                  DollarPrice:USDPrice,\n                  tokenId: i.tokenID,\n                  seller: i.seller,\n                  image: meta.data.image,\n                  name: meta.data.name,\n                  description: meta.data.description,\n                  pImage : profileImage,\n                  TokenID : i.tokenID,\n                  wishlist : i.wishlist,\n                  wishlist_id : i.wishlist_id ? i.wishlist_id : '',\n                  id : i.id,\n                }\n                return item\n              }\n            }\n          }\n        }))\n        setNfts(items)\n        setLoading(false)\n        setLoadingState('loaded')\n      }\n    }else{\n      router.push('/login')\n    } \n  }\n\n  async function buyNft(nft) {\n\n    /* needs the user to sign the transaction, so will use Web3Provider and sign it */\n    console.log(nft)\n    const user = JSON.parse(localStorage.getItem('user'));\n    var temp = 'logout';\n    var response = await axios.get(process.env.NEXT_PUBLIC_BASE_URL+'/api/check-auth',{\n      headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer '+user.access_token\n      },\n    }).then((response)  =>{\n      temp = 'login';\n    }).catch(function (error) {\n      // handle error\n      if(error.response.status == 400){\n        notify(\"error\", error.response.data.error)\n      }else if(error.response.status == 401) {\n        temp = 'logout';\n        localStorage.removeItem(\"user\")\n        router.push('/login')\n      }else{\n        notify(\"error\", 'Something went wrong please try again!')\n      } \n    })\n\n    if(temp == 'login' ){\n\n      const web3Modal = new Web3Modal()\n      const connection = await web3Modal.connect()\n      const provider = new ethers.providers.Web3Provider(connection)\n      const signer = provider.getSigner()\n      const contract = new ethers.Contract(marketplaceAddress, NFTMarketplace.abi, signer)\n  \n      /* user will be prompted to pay the asking proces to complete the transaction */\n      const price = ethers.utils.parseUnits(nft.price, 'ether') \n      const transaction = await contract.createMarketSale(nft.tokenId, {\n        value: price\n      }) \n      await transaction.wait()\n      let fd = new FormData();\n      fd.append('name', nft.name)\n      fd.append('price', nft.price)\n      fd.append('string_price', nft.string_price)\n      fd.append('description', nft.description)\n      fd.append('image', nft.image)\n      fd.append('tokenID', nft.tokenId)\n      fd.append('hash_token', transaction.hash)\n      fd.append('from_wallet', transaction.from)\n      fd.append('gasLimit', JSON.stringify(transaction.gasLimit))\n      fd.append('gasPrice', JSON.stringify(transaction.gasPrice))\n      fd.append('maxFeePerGas', JSON.stringify(transaction.maxFeePerGas))\n      fd.append('maxPriorityFeePerGas', JSON.stringify(transaction.maxPriorityFeePerGas))\n      \n      axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/user-buy-nft', fd,{\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+user.access_token\n        },\n      }).then((response)  => {\n        notify(\"success\", 'Buy NFT successfully')\n        const data = response.data;\n  \n      }).catch(function (error) {\n        // handle error\n        if(error.response.status == 400){\n          notify(\"error\", error.response.data.error)\n        }else if(error.response.status == 401) {\n          localStorage.removeItem(\"user\")\n          router.push('/login')\n        }else{\n          notify(\"error\", 'Something went wrong please try again!')\n        } \n      })\n      loadNFTs()\n    }\n  }\n\n  async function wishlist(wishlist_id, product_id){\n    const user = JSON.parse(localStorage.getItem('user'));\n    \n    \n    if(Boolean(wishlist_id)){\n      var fd = new FormData();\n      fd.append('wishlist_id', wishlist_id);\n      axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/remove-wishlist', fd ,{\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+user.access_token\n        },\n      }).then((response)  => {\n       \n        nfts.forEach((nft, index) => {\n          if(Boolean(wishlist_id)){\n            if(nft.wishlist_id == wishlist_id){\n              // console.log(wishlist_id); \n              nft.wishlist_id = '';\n              nft.wishlist = 0;\n            }\n            nfts[index] = nft\n          }\n        });\n        setRndmNumber(Math.random())\n        setNfts(nfts)\n        notify(\"success\", 'Wishlist removed successfully!')\n      }).catch(function (error) {\n        // handle error\n        if(error.response){\n\n          if(error.response.status == 400){\n            notify(\"error\", error.response.data.error)\n          }else if(error.response.status == 401){\n            localStorage.removeItem(\"user\")\n            router.push('/login')\n          } else{\n              notify(\"error\", 'Something went wrong please try again!')\n          }\n        }else{\n          console.log(error)\n        }\n      })\n    }else{\n      var fd = new FormData();\n      fd.append('product_id', product_id);\n      axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/add-wishlist', fd ,{\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+user.access_token\n        },\n      }).then((response)  => {\n       \n        nfts.forEach((nft, index) => {\n          if(Boolean(product_id)){\n            if(nft.id == product_id){\n              // console.log(wishlist_id); \n              nft.wishlist_id = response.data.wishlist.id;\n              nft.wishlist = 1;\n            }\n            nfts[index] = nft\n          }\n        });\n        console.log(nfts);\n\n        setRndmNumber(Math.random())\n        setNfts(nfts)\n        notify(\"success\", 'Wishlist added successfully!')\n      }).catch(function (error) {\n        // handle error\n        if(error.response){\n\n          if(error.response.status == 400){\n            notify(\"error\", error.response.data.error)\n          }else if(error.response.status == 401){\n            localStorage.removeItem(\"user\")\n            router.push('/login')\n          } else{\n              notify(\"error\", 'Something went wrong please try again!')\n          }\n        }else{\n          console.log(error)\n        }\n      })\n    }\n  }\n\n  if (loadingState === 'loaded' && !nfts.length) return (\n    \n    <div>\n    <Mainheader />\n  \n    <section className=\"latestnft\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <h2 className=\"heading\">All NFTs<div className=\"divider\"></div></h2>\n          </div>\n          <div className=\"col-md-6\">\n            <div className='select-nfts'>\n              <Select options={options} onChange={users} id=\"long-value-select\" instanceId=\"long-value-select\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"\">\n          \n          <div className=\"row myfvtrow\">\n          <h1 className=\"py-10 px-20 text-3xl\"  >No items in marketplace</h1>\n          </div>\n        </div>\n      </div>\n    \n    </section>\n    <div id=\"modal-row\" className=\"modal\" style={{ display: show ? \"block\" : \"none\" }}>\n      <div className=\"modal-dialog\">\n        <div className=\"modal-content\">\n          \n          <div className=\"modal-header\">\n            <h4 className=\"modal-title\">Users</h4>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={close}>&times;</button>\n          </div>\n\n          <div className=\"modal-body\">\n            {html}\n          </div>\n\n        </div>\n      </div>\n    </div>\n    <Mainfooter />\n  </div>\n  )\n  return (\n   \n    <div>\n     \n           <Mainheader />\n          <section className=\"latestnft\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <h2 className=\"heading\">All NFTs<div className=\"divider\"></div></h2>\n                </div>\n                <div className=\"col-md-6\">\n                  <div className='select-nfts'>\n                    <Select options={options} onChange={users} id=\"long-value-select\" instanceId=\"long-value-select\" />\n                  </div>\n                </div>\n              </div>\n              \n              {loading ? (\n                <div className=\"loader-container\">\n                  <div className=\"spinner\"></div>\n                </div>\n                \n              ) : (\n                <div className=\"\">\n                  {/* <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 pt-4\"> */}\n                  <div className=\"row myfvtrow\">\n                    {\n                    nfts.map((nft, i) => (\n                       \n                      nft?<div key={i} className=\"col-sm-6 col-md-4 col-lg-3 myfvt\">      \n                    {/* <div className=\"col-sm-6 col-md-4 col-lg-3 myfvt\"> */}\n                      <div className=\"nftbox\">\n                        <div className=\"nftbox-img\">\n                          <a href=\"#\"><img src={nft.image} className=\"img-fluid\" alt=\"\"/></a>\n                          <div className=\"counter\"><span>717 : 6 : 32 : 34</span></div>\n                        </div>\n                        <div className=\"nftbox-desc\">\n                          <div className=\"nftbox-desc-img\">\n                            {/* <div className=\"nftbox-user\"><a href=\"#\"><img src=\"assets/images/user.png\" className=\"img-fluid\" alt=\"\"/></a></div> */}\n                            <div className=\"nftbox-user\"><a href=\"#\"><img src={nft.pImage ?baseURL+ '/'+ nft.pImage : 'assets/images/user.png' } className=\"img-fluid\" alt=\"\"/></a></div>\n                            <span><a  onClick={() => wishlist(nft.wishlist_id, nft.id)} id={nft.wishlist_id}  ><i className={nft.wishlist == 1 ? 'fa fa-heart-o active':'fa fa-heart-o'} aria-hidden=\"true\"></i></a></span>\n                          </div>\n\n                          <h3><a href=\"#\">{nft.name}</a></h3>\n                          <h5 className=\"rate\">$ {nft.DollarPrice.toFixed(7)}</h5>\n                          <button className=\"btn btn-info\" onClick={() => buyNft(nft)} data-id={nft.TokenID}>Buy</button>\n                        </div>\n                      </div>\n                      </div> : \"\"\n                      )) \n                    }\n                  </div>\n                </div>\n              )}  \n              \n            </div>\n          </section>\n  \n          <div id=\"modal-row\" className=\"modal\" style={{ display: show ? \"block\" : \"none\" }}>\n            <div className=\"modal-dialog\">\n              <div className=\"modal-content\">\n                \n                <div className=\"modal-header\">\n                  <h4 className=\"modal-title\">Users</h4>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={close}>&times;</button>\n                </div>\n  \n                <div className=\"modal-body\">\n                  {html}\n                </div>\n  \n              </div>\n            </div>\n          </div>\n          <Mainfooter />\n        </div>\n     \n    \n  \n  )\n}","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/purchased-nfts.js",["233","234"],[],"/* pages/my-nfts.js */\nimport * as React from \"react\";\nimport { ethers } from 'ethers'\nimport { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport Web3Modal from 'web3modal'\nimport { useRouter } from 'next/router'\nimport toast from \"../components/Toast\";\nimport Mainheader from './components/layout/mainheader';\nimport {\n  marketplaceAddress\n} from '../config'\n\nimport NFTMarketplace from '../artifacts/contracts/NFTMarketplace.sol/NFTMarketplace.json'\nimport Mainfooter from './components/layout/mainfooter';\n\n\nexport default function MyAssets() {\n  const [nfts, setNfts] = useState([])\n  const [userBuyNFt, userBuyNFT] = useState()\n  const [loadingState, setLoadingState] = useState('not-loaded')\n  const [loading, setLoading] = useState(false);\n  const [rndmNumber, setRndmNumber] = useState('');\n  const router = useRouter()\n  useEffect(() => {\n    loadNFTs()\n  }, [])\n\n  const notify = React.useCallback((type, message) => {\n    toast({ type, message });\n  }, []);\n\n  async function loadNFTs() {\n    var temp = 'logout';\n    const user = JSON.parse(localStorage.getItem('user'));\n    if(user){\n      var response = await axios.get(process.env.NEXT_PUBLIC_BASE_URL+'/api/check-auth',{\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+user.access_token\n        },\n      }).then((response)  =>{\n        temp = 'login';\n      }).catch(function (error) {\n        // handle error\n        if(error.response.status == 400){\n          notify(\"error\", error.response.data.error)\n        }else if(error.response.status == 401) {\n          temp = 'logout';\n          localStorage.removeItem(\"user\")\n          router.push('/login')\n        }else{\n          notify(\"error\", 'Something went wrong please try again!')\n        } \n      })\n      if(temp == 'login'){\n        const web3Modal = new Web3Modal({\n          network: \"mainnet\",\n          cacheProvider: true,\n        })\n        if(window.ethereum){\n          await window.ethereum.request({method:'eth_requestAccounts'})\n          .then(res=>{\n            // Return the address of the wallet\n            console.log(res) \n          })\n        }else{\n          alert(\"install metamask extension!!\")\n        }\n        setLoading(true) \n        const connection = await web3Modal.connect()\n        const provider = new ethers.providers.Web3Provider(connection)\n        const signer = provider.getSigner()\n        const marketplaceContract = new ethers.Contract(marketplaceAddress, NFTMarketplace.abi, signer)\n        const data = await marketplaceContract.fetchMyNFTs()\n        const reponsePriceExchange = await axios.get('https://api.coinconvert.net/convert/matic/usd?amount='+1)\n        var wallet_response =  await  axios.get(process.env.NEXT_PUBLIC_BASE_URL+'/api/get-users-buy-nft',{\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer '+user.access_token\n          },\n        })\n        const BoughtNFT = wallet_response.data.userBuyNFT.reverse()\n        if(wallet_response.data){\n          const items = await Promise.all(BoughtNFT.map(async (i, index) => {\n            const tokenURI = await marketplaceContract.tokenURI(i.tokenID)\n  \n            if(reponsePriceExchange){\n              if(tokenURI.split('/')[2] ==  'infura-ipfs.io'){\n      \n                var getwayURL = 'https://gateway.moralisipfs.com/ipfs/'+tokenURI.split('/')[4]\n                const meta = await axios.get(getwayURL)\n                const USDPrice = i.price * reponsePriceExchange.data.USD;\n  \n                if(meta.data != undefined){\n      \n                  console.log(meta)\n                  const priceFormat = ethers.utils.parseUnits(i.price, 'ether')\n                  let price = ethers.utils.formatUnits(priceFormat, 'ether')\n                  let item = {\n                    price,\n                    DollarPrice:USDPrice,\n                    tokenId: i.tokenId,\n                    seller: i.seller,\n                    owner: i.owner,\n                    image: meta.data.image,\n                    name: meta.data.name,\n                    tokenURI,\n                    wishlist : i.wishlist,\n                    wishlist_id : i.wishlist_id ? i.wishlist_id : '',\n                    product_id : i.product_id,\n                  }\n                  console.log(item)\n                  return item\n                }\n              }\n            }\n    \n          }))\n          setNfts(items)\n          setLoading(false) \n          setLoadingState('loaded') \n        }\n      }    \n    }else{\n      localStorage.removeItem(\"user\")\n      router.push('/login')\n    }\n    \n  }\n  function listNFT(nft) {\n    router.push(`/resell-nft?id=${nft.tokenId}&tokenURI=${nft.tokenURI}`)\n  }\n\n \n  if (loadingState === 'loaded' && !nfts.length) return (\n    <div>\n      <Mainheader />\n    \n      <section className=\"latestnft\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h2 className=\"heading\">Purchased NFTs<div className=\"divider\"></div></h2>\n            </div>\n          </div>\n          <div className=\"\">\n            \n            <div className=\"row myfvtrow\">\n            <h1 className=\"py-10 px-20 text-3xl\">No nfts purchased</h1>\n            </div>\n          </div>\n        </div>\n      \n      </section>\n      <Mainfooter />\n    </div>\n  )\n  return (\n\n\n    <div>\n        \n      <Mainheader />\n      <section className=\"latestnft\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h2 className=\"heading\">Purchased NFTs<div className=\"divider\"></div></h2>\n            </div>\n          </div>\n          {loading ? (\n\n            <div className=\"loader-container\">\n              <div className=\"spinner\"></div>\n            </div>\n\n          ) : (\n            <div className=\"\">\n              \n              <div className=\"row myfvtrow\">\n              {\n                nfts.map((nft, i) => (\n                  nft?<div key={i} className=\"col-sm-6 col-md-4 col-lg-3 myfvt\">      \n                {/* <div className=\"col-sm-6 col-md-4 col-lg-3 myfvt\"> */}\n                  <div className=\"nftbox\">\n                    <div className=\"nftbox-img\">\n                      <a href=\"#\"><img src={nft.image} className=\"img-fluid\" alt=\"\"/></a>\n                      <div className=\"counter\">\n                        {/* <span>717 : 6 : 32 : 34</span> */}\n                      </div>\n                    </div>\n                    <div className=\"nftbox-desc\">\n                      <h3><a href=\"#\">{nft.name}</a></h3>\n                      <h5 className=\"rate\"> \n                        $ {nft.DollarPrice.toFixed(7)}\n                        {/* <span className=\"like-design\"><a onClick={() => wishlist(nft.wishlist_id, nft.product_id)} id={nft.wishlist_id} ><i className={nft.wishlist == 1 ? 'fa fa-heart':'fa fa-heart-o'} aria-hidden=\"true\"></i>{nft.wishlist ? 1 : 0}</a></span> */}\n\n                      </h5>\n                      {/* <button className=\"mt-4 w-full bg-pink-500 text-white font-bold py-2 px-12 rounded\" onClick={() => listNFT(nft)}><span className=\"front\">List</span></button> */}\n                    </div>\n                  </div>\n                  </div> : \"\"\n                  )) \n                }\n              </div>\n            </div>\n          )}\n            </div>\n      \n      </section>\n      <Mainfooter />\n    \n  \n    </div>\n\n  )\n}","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/reset-password.js",["235"],[],"/* pages/create-nft.js */\nimport * as React from \"react\";\nimport { useEffect,useState } from 'react'\nimport axios from \"axios\";\nimport toast from \"../components/Toast\";\nimport Mainheader from './components/layout/mainheader';\nimport Mainfooter from './components/layout/mainfooter';\nimport { useRouter } from 'next/router'\n\nexport default function ResetPassword() {\n    const router = useRouter()\n    const [formInput, updateFormInput] = useState({  password: '', confirm_password: '', email: '' })\n\n  useEffect(() => {\n    \n    const queryParams = new URLSearchParams(window.location.search);\n    const email = queryParams.get('email');\n    updateFormInput({...formInput, email: email})\n  }, [])\n  const notify = React.useCallback((type, message) => {\n    toast({ type, message });\n  }, []);\n\n  async function submit (){\n    if(formInput.password, formInput.confirm_password){\n\n        if(formInput.password == formInput.confirm_password){\n            axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/forget-password', formInput,{\n                headers: {\n                'Content-Type': 'application/json',\n                },\n            }).then((response)  => {\n                notify(\"success\", 'Password changed successfully!')\n                updateFormInput({\n                    email: ''\n                })\n                router.push('/login')\n            }).catch(function (error) {\n                // handle error\n                if(error.response.status == 400){\n                    notify(\"error\", error.response.data.error)\n                }else{\n                    notify(\"error\", 'Something went wrong please try again!')\n                }\n            }) \n        }else{\n            notify(\"error\", 'Confirm password not matched!')\n        }\n    }else{\n      notify(\"error\", 'Please fill all mandatory fields!')\n    }\n  }  \n  \n\n  return (\n    <div>\n        <Mainheader />\n        <section className=\"login-page\" style= {{ background: \"url(\" + \"assets/images/loginbg.jpg\" + \")\" }}>\n            <section className=\"innerbg\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h3>Reset Password</h3>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <div className=\"container\">\n                <div className=\"row\">\n                <div className=\"col-md-12\">\n                <div className=\"login-page-design\">\n                <h2>Reset Password</h2>\n                <h4>Enter your password</h4>\n                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.</p>\n                <div className=\"loginform\">\n                <form>\n                    \n                    <input type=\"hidden\" className=\"form-control\"   id=\"email\"/>                    \n                    <div className=\"form-group\">\n                        <input type=\"text\" className=\"form-control\" onChange={e => updateFormInput({ ...formInput, password: e.target.value })} placeholder=\"password\" id=\"password\"/>\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"text\" className=\"form-control\" onChange={e => updateFormInput({ ...formInput, confirm_password: e.target.value })} placeholder=\"Confirm Password\" id=\"confirm_password\"/>\n                    </div>\n                    <div className=\"form-group loginbtn\">\n                        <input type=\"button\" onClick={submit} className=\"btn btn-info\" value=\"submit\" />\n                    </div>\n                </form>\n                </div>\n                </div>\n                </div>\n            </div>\n            </div>\n        </section>\n        <Mainfooter />\n    </div>\n  )\n}","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/shipping-container-edit.js",["236","237","238"],[],"/* pages/create-nft.js */\nimport * as React from \"react\";\nimport axios from 'axios'\nimport { useRouter } from 'next/router'\nimport toast from \"../components/Toast\";\nimport { useEffect, useState } from 'react'\nimport Mainheader from './components/layout/mainheader';\nimport Mainfooter from './components/layout/mainfooter';\nimport queryString from 'query-string';\n\n\n\n\nexport default function MSCVideo() {\n  \n  const [inputField , setInputField] = useState({\n    Name: '',\n    Description: '',\n    Featured_Image: '',\n    Sc_ID: ''\n  })\n\n  const [file, setFileObject]=useState('')\n  const [flag, setFlag]=useState(false)\n  const [base_url, BaseUrl]=useState('')\n  const [Featured_Image, setFeaturedImage]=useState('')\n  const [SCdata, setData]=useState('')\n\n\n\n  const router = useRouter()\n  useEffect(() => {\n    GetMSC()\n  }, [])\n\n\n  // Get SC GetMSC .....\n  async function GetMSC() {\n    const user = JSON.parse(localStorage.getItem('user'));\n    let params = queryString.parse(location.search)\n    var fd = new FormData()\n    fd.append('sc_id', params.id)\n    if(user){\n      axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/get-manage-sc', fd,  {\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+user.access_token,\n        },\n       \n      }).then((response)  => {\n        const data = response.data;\n        BaseUrl(response.data.base_url)\n      \n        setFeaturedImage(data.manage_sc.Featured_Image)\n        setInputField(data.manage_sc)\n      }).catch(function (error) {\n        // handle error\n        console.log(error)\n        if(error.response.status == 400){\n          notify(\"error\", error.response.data.error)\n        }else if(error.response.status == 401){\n          localStorage.removeItem(\"user\")\n          router.push('/login')\n        }else{\n          notify(\"error\", 'Something went wrong please try again!')\n        }\n      })\n    }else{\n      router.push('/login')\n    }\n  }\n\n  const notify = React.useCallback((type, message) => {\n    toast({ type, message });\n  }, []);\n\n  // Sc Video Input handle Here......\n  const inputsHandler = (e, resolve) =>{\n    const { name, value } = e.target;\n    if(name == 'Featured_Image'){      \n        if(e.target.files[0]){\n            setFileObject(URL.createObjectURL(e.target.files[0]));\n            setFeaturedImage(e.target.files[0])\n            setFlag(true)\n        }\n    }else{\n      setInputField((prevState) => ({\n        ...prevState,\n        [name]: value,\n      }));\n    }\n  }\n\n  // Sc Video Uploaded Here......\n  async function submitButton(){\n    const user = JSON.parse(localStorage.getItem('user'));\n    let fd = new FormData();\n    fd.append('sc_id', inputField.Sc_ID)\n    fd.append('Name', inputField.Name)\n    fd.append('Featured_Image', Featured_Image)  \n    fd.append('Description', inputField.Description)  \n    axios({\n      method: 'post',\n      url: process.env.NEXT_PUBLIC_BASE_URL+'/api/update-manage-sc',\n      data: fd,\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'Authorization': 'Bearer '+user.access_token\n      },\n    }).then((response)  => {\n      notify(\"success\", 'Shipping Container updated successfully')\n      const data = response.data;\n      setFeaturedImage(data.manage_sc.Featured_Image)\n      setInputField(data.manage_sc)\n    //   setFlag(false)\n    }).catch(function (error) {\n      // handle error\n      console.log(error)\n      if(error.response.status == 400){\n        notify(\"error\", error.response.data.error)\n      }else if(error.response.status == 401){\n        localStorage.removeItem(\"user\")\n        router.push('/login')\n      }else{\n        notify(\"error\", 'Something went wrong please try again!')\n      }  \n    })\n  }\n\n  \n\n  \n\n\n  return (\n    <div>\n    <Mainheader />\n    <section className=\"login-page\" style= {{ background: \"url(\" + \"assets/images/loginbg.jpg\" + \")\" }}>\n      <section className=\"innerbg\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h3>Shipping Container</h3>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* For video upload */}\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"login-page-design\">\n              <h2>Edit Shipping Container</h2>\n              <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.</p>\n              <div className=\"loginform\">\n              \n                <div className=\"box\">\n                  <input type=\"file\" onChange={inputsHandler} name=\"Featured_Image\" id=\"file-5\" className=\"inputfile inputfile-4\" data-multiple-caption=\"{count} files selected\" multiple />\n                  <label htmlFor=\"file-5\">\n                  <figure><img id=\"profilepreview\" src={flag ? file : Featured_Image ? base_url+'/public/'+Featured_Image :  'assets/images/sample2.jpg'}  /></figure>\n                  <span><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path><path d=\"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.9 13.98l2.1 2.53 3.1-3.99c.2-.26.6-.26.8.01l3.51 4.68c.25.33.01.8-.4.8H6.02c-.42 0-.65-.48-.39-.81L8.12 14c.19-.26.57-.27.78-.02z\"></path></svg></span></label>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" className=\"form-control\" value={inputField.Name} onChange={inputsHandler} placeholder=\"Name\" id=\"name\" name=\"Name\" />\n                </div>\n                <div className=\"form-group\">\n                    <textarea className=\"form-control\" value={inputField.Description} rows=\"5\" onChange={inputsHandler} placeholder=\"Description\" name=\"Description\" id=\"comment\"></textarea>\n                </div>\n                <div className=\"form-group loginbtn\">\n                    <input type=\"button\" className=\"btn btn-info\" onClick={submitButton} value=\"Submit\"/>\n                </div>\n                \n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <Mainfooter />\n  </div>\n   \n  )\n}","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/shipping-container-video.js",["239","240","241","242","243"],[],"/* pages/create-nft.js */\nimport * as React from \"react\";\nimport axios from 'axios'\nimport { useRouter } from 'next/router'\nimport toast from \"../components/Toast\";\nimport { useEffect, useState, useRef } from 'react'\nimport Mainheader from './components/layout/mainheader';\nimport Mainfooter from './components/layout/mainfooter';\n\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { ColumnToggle, Search } from 'react-bootstrap-table2-toolkit';\n\n\nexport default function SCVideo() {\n  \n  const [inputField , setInputField] = useState({\n    name: '',\n    description: '',\n    video: '',\n    redirection_link:''\n  })\n  const { SearchBar } = Search;\n\n  const [file, setFileObject]=useState('')\n  const [video, setVideo]=useState('')\n  const [videoList, setSCVideoList]=useState([])\n  const [flag, setFlag]=useState(false)\n  const [Divflag, setDivFlag]=useState(false)\n  const [show, setShow] = useState(false);\n  const [base_url, BaseUrl]=useState('')\n  const [html, Sethtml] = useState('');\n  const [fileType, SetFileType] = useState('video');\n\n  const [filteredShippingContainer, setFilteredShippingContainer] = useState([]);\n\n\n  const router = useRouter()\n  useEffect(() => {\n    SCVideoList()\n    var element =  document.querySelector('#data-table-ID');\n    element.classList.remove(\"table-bordered\");\n   \n  }, []);\n\n  // Get SC Video List .....\n  function SCVideoList() {\n   \n    const user = JSON.parse(localStorage.getItem('user'));\n    if(user){\n      axios.get(process.env.NEXT_PUBLIC_BASE_URL+'/api/get-sc-video',{\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+user.access_token\n        },\n      }).then( async(response)  => {\n        const data = response.data;\n     \n        BaseUrl(response.data.base_url)\n        setSCVideoList(Object.values(data.sc_videos))\n        setFilteredShippingContainer(Object.values(data.sc_videos))\n       \n       \n       \n      }).catch(function (error) {\n        // handle error\n        console.log(error)\n        if(error.response.status == 400){\n          notify(\"error\", error.response.data.error)\n        }else if(error.response.status == 401){\n          localStorage.removeItem(\"user\")\n          router.push('/login')\n        }else{\n          notify(\"error\", 'Something went wrong please try again!')\n        }\n      })\n    }else{\n      router.push('/login')\n    }\n  }\n\n  const columns = [\n    {\n      text: \"#\",\n      dataField: 'id',\n      formatter: (cell, row, index) => index+1,\n    },\n    {\n      text: \"Video\",\n      sort: true,\n      dataField:'video',\n      headerStyle: { minWidth: '50px' },\n      style: { width: '50px' },\n      formatter: (cell, row) => row.type == 'Video' ?  <>\n                              <div className=\"video_button\">\n                                <i className=\"fa fa-play-circle\" aria-hidden=\"true\"></i>\n                                <input type=\"button\" onClick={popUpClick}  value=\"\" className=\"fa fa-play-circle\"  name={base_url+'/public/'+ row.video} /> \n                                <div>\n                                  <video width=\"320\" height=\"240\">\n                                    <source src={row.video ? process.env.NEXT_PUBLIC_BASE_URL+'/public/'+ row.video :''} type=\"video/mp4\" />\n                                    Your browser does not support the video tag.\n                                  </video>\n                                </div>\n                                </div>\n                              </>\n                              :\n                              <div className=\"video_button\">\n                               <img src={row.video ? base_url+'/'+ row.video :''} className=\"zoom\" />\n                              </div>\n    },\n    {\n      text: \"Name\",\n      headerStyle: { minWidth: '150px' },\n      style: { width: '150px' },\n      sort: true,\n      dataField:'name',\n      formatter: (cell, row) => row.name\n    },\n    {\n      text: \"Description\",\n      sort: true,\n      dataField:'description',\n      formatter: (cell, row) => row.description,\n      style:{width : '504px'},\n      headerStyle:{minWidth : '504px'}\n    },\n    {\n      text: \"Action\",\n      classes: 'icon-design-td',\n      dataField:'SCplacement_id',\n      headerStyle: { minWidth: '190px' },\n      style: { width: '190px' },\n      formatter: (cell, row) => <><span>\n                                    <button className=\"icon-design icon-delete\" id={row.id} onClick={DeleteSC} value={row.id}>\n                                      <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                                    </button>\n                                  </span>\n                                  <span>\n                                    <button className=\"btn btn-info\" id={row.id} onClick={e => {router.push(`/map-shipping-container?id=${row.id}`)}} value={row.id}>\n                                      Map Container\n                                    </button>\n                                  </span>\n                                </>\n     \n    },\n    \n  ] \n  const customTotal = (from, to, size) => (\n    <span className=\"react-bootstrap-table-pagination-total\">\n      Showing { from } to { to } of { size } Results\n    </span>\n  );\n  const options = {\n    paginationSize: 4,\n    pageStartIndex: 1,\n    // alwaysShowAllBtns: true, // Always show next and previous button\n    // withFirstAndLast: false, // Hide the going to First and Last page button\n    // hideSizePerPage: true, // Hide the sizePerPage dropdown always\n    // hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\n    firstPageText: 'First',\n    prePageText: 'Back',\n    nextPageText: 'Next',\n    lastPageText: 'Last',\n    nextPageTitle: 'First page',\n    prePageTitle: 'Pre page',\n    firstPageTitle: 'Next page',\n    lastPageTitle: 'Last page',\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n   \n   // A numeric array is also available. the purpose of above example is custom the text\n  };\n\n\n\n\n\n\n  const notify = React.useCallback((type, message) => {\n    toast({ type, message });\n  }, []);\n\n  // Sc Video Input handle Here......\n  const inputsHandler = (e, resolve) =>{\n    const { name, value } = e.target;\n    if(name == 'video'){ \n\n      if(e.target.files[0]){\n        if(e.target.files[0].type.split('/')[0] == 'video'){\n          SetFileType('video')\n        }else{\n          SetFileType('image')\n        }  \n        setFileObject(URL.createObjectURL(e.target.files[0]));\n        setVideo(e.target.files[0])\n      }\n    }else{\n      setInputField((prevState) => ({\n        ...prevState,\n        [name]: value,\n      }));\n    }\n    setFlag(true)\n    \n\n  }\n\n  // Sc Video Uploaded Here......\n  async function submitButton(){\n    const user = JSON.parse(localStorage.getItem('user'));\n    let fd = new FormData();\n    fd.append('name', inputField.name)\n    fd.append('video', video)  \n    fd.append('description', inputField.description)  \n    fd.append('redirection_link', inputField.redirection_link)\n    axios({\n      method: 'post',\n      url: process.env.NEXT_PUBLIC_BASE_URL+'/api/sc-video',\n      data: fd,\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'Authorization': 'Bearer '+user.access_token\n      },\n    }).then((response)  => {\n      notify(\"success\", 'Shipping container video added successfully!')\n      setInputField({\n        name:'',\n        description:'',\n        video:'',\n        redirection_link:''\n      })\n      document.getElementById('name').value = '';\n      document.getElementById('comment').value = '';\n      document.getElementById('profilepreview').src = '';\n      setFlag(false)\n      setDivFlag(false)\n      SCVideoList()\n      SetFileType('video')\n      setFileObject('')\n      setVideo('')\n    }).catch(function (error) {\n      // handle error\n      console.log(error)\n      if(error.response.status == 400){\n        notify(\"error\", error.response.data.error)\n      }else if(error.response.status == 401){\n        localStorage.removeItem(\"user\")\n        router.push('/login')\n      }else if(error.response.status == 413){\n        notify(\"error\", 'File size too large!')\n\n      }else{\n        notify(\"error\", 'Something went wrong please try again!')\n      }  \n    })\n  }\n\n  // SC Video Delete.....\n  async function DeleteSC(e){\n    \n    const user = JSON.parse(localStorage.getItem('user'));\n    if(confirm('Are you sure?')){\n      let fd = new FormData();\n      fd.append('sc_id', e.currentTarget.value)\n  \n      axios({\n        method: 'post',\n        url: process.env.NEXT_PUBLIC_BASE_URL+'/api/sc-video-delete',\n        data: fd,\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': 'Bearer '+user.access_token\n        },\n      }).then((response)  => {\n        notify(\"success\", 'Shipping container video deleted successfully!')\n        setSCVideoList('')\n        SCVideoList()\n      }).catch(function (error) {\n        // handle error\n        if(error.response.status == 400){\n          notify(\"error\", error.response.data.error)\n        }else if(error.response.status == 401){\n          localStorage.removeItem(\"user\")\n          router.push('/login')\n        }else{\n          notify(\"error\", 'Something went wrong please try again!')\n        }  \n      })    \n    }\n  }\n\n  function divHandle(e){\n\n    const user = JSON.parse(localStorage.getItem('user'));\n    if(user.user.is_verified == 1 && user){\n      setDivFlag(true)\n    }else{\n      e.preventDefault()\n      alert('You do not have permission to access this option!')\n    }\n  }\n\n  function closeDiv(){\n    setDivFlag(false)\n  }\n\n  // Popup close ....\n  function close(){\n    setShow(false);\n    Sethtml('')\n  }\n\n  function popUpClick(e){\n   \n  \n    setShow(true)\n    Sethtml(\n      <div>\n        <video width=\"320\" height=\"240\" src={e.currentTarget.name}   controls autoPlay >\n        </video>\n      </div>\n    );\n  }\n\n  \n\n  return (\n    <div>\n    <Mainheader />\n    <section className=\"login-page\" style= {{ background: \"url(\" + \"assets/images/loginbg.jpg\" + \")\" }}>\n      <section className=\"innerbg\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h3>Shipping Container Video</h3>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* For video upload */}\n      <div className=\"container\"  style={{display: Divflag ? 'block' : 'none'}}>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"login-page-design\">\n              <h2>Add Shipping Container video</h2>\n              <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.</p>\n              <div className=\"loginform\">\n              \n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={closeDiv}>Back</button>\n                <div className=\"box\">\n                  <input type=\"file\" onChange={inputsHandler} name=\"video\" id=\"file-5\" className=\"inputfile inputfile-4\" data-multiple-caption=\"{count} files selected\" multiple />\n                  <label htmlFor=\"file-5\">\n                  <figure>\n                    {fileType == 'video'?\n\n                      <video id=\"profilepreview\" data-id={flag} data-value={file}  data-sc={video} src={flag ? file : video} />\n                      :\n                      <img id=\"profilepreview\" data-id={flag} data-value={file}  data-sc={video}   src={flag ? file : video}></img>\n                    \n                    }\n                  </figure>\n                  <span><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path><path d=\"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.9 13.98l2.1 2.53 3.1-3.99c.2-.26.6-.26.8.01l3.51 4.68c.25.33.01.8-.4.8H6.02c-.42 0-.65-.48-.39-.81L8.12 14c.19-.26.57-.27.78-.02z\"></path></svg></span></label>\n                </div>\n                <div className=\"form-group\">\n                  <input type=\"text\" className=\"form-control\" onChange={inputsHandler} placeholder=\"Name\" id=\"name\" name=\"name\" />\n                </div>\n                {fileType == 'image'?\n\n                  <>\n                    <div className=\"form-group\">\n                      <input type=\"text\" className=\"form-control\" onChange={inputsHandler} placeholder=\"Redirection link\" id=\"redirection_link\" name=\"redirection_link\" />\n                    </div>\n                  </>\n                  :\n                  <></>\n              \n                \n                }\n                <div className=\"form-group\">\n                    <textarea className=\"form-control\" rows=\"5\" onChange={inputsHandler} placeholder=\"Description\" name=\"description\" id=\"comment\"></textarea>\n                </div>\n                <div className=\"form-group loginbtn\">\n                    <input type=\"button\" className=\"btn btn-info\" onClick={submitButton} value=\"Submit\"/>\n                </div>\n                \n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* For Videos List */}\n      <div className=\"container\" style={{display: Divflag ? 'none' : 'block'}} >\n        <div className=\"row video_heading\">\n          <div className=\"col-md-6\">\n            <h2>Shipping Container Video List</h2>\n          </div>\n          <div className=\"col-md-6 text-right\">\n            \n            <button type=\"button\" className=\"btn btn-info add_sc\" onClick={divHandle}>Add SC Video</button>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"table-responsive datatables-design\">\n              <ToolkitProvider\n                keyField=\"id\"\n                data={ filteredShippingContainer }\n                columns={ columns }\n                search\n                >\n                {\n\n                  props => (\n                    <>\n                     \n                      <SearchBar { ...props.searchProps } />\n                      <BootstrapTable \n                        keyField=\"dataField\"\n                        columns={columns}   \n                        data={filteredShippingContainer} \n                        id = \"data-table-ID\"\n                        tabIndexCell\n                        responsive = {true}\n                        defaultSortDirection=\"asc\"\n                        classes = \"dt-responsive dataTable no-footer\"\n                        pagination={ paginationFactory(options) }\n                        noDataIndication=\"No Records Found\"\n                        { ...props.baseProps }\n                      />\n                    </>\n                  )\n                }\n              </ToolkitProvider>\n              \n            \n              \n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Video Popup */}\n      <div id=\"modal-row\" className=\"modal\" style={{ display: show ? \"block\" : \"none\" }}>\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">Shipping Container Video</h4>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={close}>&times;</button>\n            </div>\n            <div className=\"modal-body\">\n              {html}\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </section>\n    <Mainfooter />\n  </div>\n   \n  )\n\n\n}","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/shipping-container.js",["244","245","246","247","248"],[],"/* pages/create-nft.js */\nimport * as React from \"react\";\nimport axios from 'axios'\nimport { useRouter } from 'next/router'\nimport toast from \"../components/Toast\";\nimport { useEffect, useState } from 'react'\nimport Mainheader from './components/layout/mainheader';\nimport Mainfooter from './components/layout/mainfooter';\n\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\n\n\n\n\n\nexport default function MSCVideo() {\n  \n  const [inputField , setInputField] = useState({\n    Name: '',\n    Description: '',\n    Featured_Image: ''\n  })\n  const { SearchBar } = Search;\n\n  const [file, setFileObject]=useState('')\n  const [ManageSCList, setManageSCList]=useState([])\n  const [flag, setFlag]=useState(false)\n  const [Divflag, setDivFlag]=useState(false)\n  const [base_url, BaseUrl]=useState('')\n  const [Featured_Image, setFeaturedImage]=useState('')\n  const [filteredManageShippingContainer, setFilteredManageShippingContainer] = useState([]);\n\n\n  const router = useRouter()\n  useEffect(() => {\n    MSCVideoList()\n    var table =  document.querySelector('#data-table-ID');\n    table.classList.remove(\"table-bordered\");\n  }, [])\n\n \n\n\n  // Get SC Video List .....\n  async function MSCVideoList() {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if(user){\n      var fd = new FormData();\n      axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/get-manage-sc-list', fd, {\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+user.access_token\n        },\n      }).then((response)  => {\n        const data = response.data;\n        BaseUrl(response.data.base_url)\n        setManageSCList(Object.values(data.manage_sc))\n        setFilteredManageShippingContainer(Object.values(data.manage_sc))\n      }).catch(function (error) {\n        // handle error\n        console.log(error)\n        if(error.response.status == 400){\n          notify(\"error\", error.response.data.error)\n        }else if(error.response.status == 401){\n          localStorage.removeItem(\"user\")\n          router.push('/login')\n        }else{\n          notify(\"error\", 'Something went wrong please try again!')\n        }\n      })\n    }else{\n      router.push('/login')\n    }\n  }\n  const notify = React.useCallback((type, message) => {\n    toast({ type, message });\n  }, []);\n\n  // Sc Video Input handle Here......\n  const inputsHandler = (e, resolve) =>{\n    const { name, value } = e.target;\n    if(name == 'Featured_Image'){      \n        if(e.target.files[0]){\n            setFileObject(URL.createObjectURL(e.target.files[0]));\n            setFeaturedImage(e.target.files[0])\n            setFlag(true)\n        }\n    }else{\n      setInputField((prevState) => ({\n        ...prevState,\n        [name]: value,\n      }));\n    }\n   \n    \n\n  }\n\n  // Sc Video Uploaded Here......\n  async function submitButton(){\n    const user = JSON.parse(localStorage.getItem('user'));\n    let fd = new FormData();\n    fd.append('Name', inputField.Name)\n    fd.append('Featured_Image', Featured_Image)  \n    fd.append('Description', inputField.Description)  \n    axios({\n      method: 'post',\n      url: process.env.NEXT_PUBLIC_BASE_URL+'/api/manage-sc',\n      data: fd,\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'Authorization': 'Bearer '+user.access_token\n      },\n    }).then((response)  => {\n      notify(\"success\", 'Shipping container added successfully!')\n      setInputField({\n        Name:'',\n        Description:'',\n        Featured_Image:'',\n      })\n      document.getElementById('name').value = '';\n      document.getElementById('comment').value = '';\n      setFlag(false)\n      setFeaturedImage('')\n      setDivFlag(false)\n      MSCVideoList()\n    }).catch(function (error) {\n      // handle error\n      if(error.response.status == 400){\n        notify(\"error\", error.response.data.error)\n      }else if(error.response.status == 401){\n        localStorage.removeItem(\"user\")\n        router.push('/login')\n      }else{\n        notify(\"error\", 'Something went wrong please try again!')\n      }  \n    })\n  }\n\n  // SC Video Delete.....\n  async function DeleteSC(e){\n    \n    const user = JSON.parse(localStorage.getItem('user'));\n    if(confirm('Are you sure?')){\n      let fd = new FormData();\n      fd.append('sc_id', e.currentTarget.value)\n\n      axios({\n          method: 'post',\n          url: process.env.NEXT_PUBLIC_BASE_URL+'/api/manage-sc-delete',\n          data: fd,\n          headers: {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': 'Bearer '+user.access_token\n          },\n      }).then((response)  => {\n        notify(\"success\", 'Shipping container deleted successfully!')\n        MSCVideoList()\n      }).catch(function (error) {\n        // handle error\n        if(error.response.status == 400){\n          notify(\"error\", error.response.data.error)\n        }else if(error.response.status == 401){\n          localStorage.removeItem(\"user\")\n          router.push('/login')\n        }else{\n          notify(\"error\", 'Something went wrong please try again!')\n        }  \n      })\n    }    \n  }\n\n  function divHandle(e){\n\n    const user = JSON.parse(localStorage.getItem('user'));\n    if(user){\n      if(user.user.is_verified == 1 ){\n        \n        setDivFlag(true)\n      }else{\n        e.preventDefault()\n        alert('You do not have permission to access this option!')\n      }\n    }\n  }\n  function closeDiv(){\n    setDivFlag(false)\n  }\n\n  // Datalist\n  const columns = [\n    {\n      text: \"#\",\n      dataField: 'Sc_ID',\n      formatter: (cell, row, index) => index+1,\n    },\n    {\n      text: \"Images\",\n      dataField: 'Featured_Image',\n      sort: true,\n      formatter: (cell, row) => <div className=\"video_button\">\n                                  <img src={process.env.NEXT_PUBLIC_BASE_URL+'/public/'+row.Featured_Image} />\n                                </div>,\n      headerStyle: { minWidth: '50px' },\n      style: { width: '50px' },\n    },\n    {\n      text: \"Name\",\n      dataField: 'Name',\n      sort: true,\n      formatter: (cell, row) => row.Name,\n      headerStyle: { minWidth: '150px' },\n      style: { width: '150px' },\n    },\n    {\n      text: \"Description\",\n      dataField: 'Description',\n      sort: true,\n      formatter: (cell, row) => row.Description,\n      style:{width : '504px'},\n      headerStyle:{minWidth : '504px'}\n    },\n    {\n      text: \"Action\",\n      dataField: 'Status',\n      classes: 'icon-design-td',\n      headerStyle: { minWidth: '190px' },\n      style: { width: '190px' },\n      formatter: (cell, row) => <><span>\n                                  <button className=\"icon-design icon-edit\" onClick={e => {router.push(`/shipping-container-edit?id=${row.Sc_ID}`)}} value={row.Sc_ID}>\n                                    <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                                  </button>\n                                </span>\n                                <span>\n                                  <button className=\"icon-design icon-delete\" id={row.Sc_ID} onClick={DeleteSC} value={row.Sc_ID}>\n                                    <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                                  </button>\n                                </span></>\n     \n    },\n    \n  ] \n  const customTotal = (from, to, size) => (\n    <span className=\"react-bootstrap-table-pagination-total\">\n      Showing { from } to { to } of { size } Results\n    </span>\n  );\n  const options = {\n    paginationSize: 4,\n    pageStartIndex: 1,\n    // alwaysShowAllBtns: true, // Always show next and previous button\n    // withFirstAndLast: false, // Hide the going to First and Last page button\n    // hideSizePerPage: true, // Hide the sizePerPage dropdown always\n    // hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\n    firstPageText: 'First',\n    prePageText: 'Back',\n    nextPageText: 'Next',\n    lastPageText: 'Last',\n    nextPageTitle: 'First page',\n    prePageTitle: 'Pre page',\n    firstPageTitle: 'Next page',\n    lastPageTitle: 'Last page',\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    disablePageTitle: true,\n     // A numeric array is also available. the purpose of above example is custom the text\n  };\n\n\n\n  return (\n    <div>\n    <Mainheader />\n    <section className=\"login-page\" style= {{ background: \"url(\" + \"assets/images/loginbg.jpg\" + \")\" }}>\n      <section className=\"innerbg\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h3>Shipping Container</h3>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* For video upload */}\n      <div className=\"container\"  style={{display: Divflag ? 'block' : 'none'}}>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"login-page-design\">\n              <h2>Add Shipping Container</h2>\n              <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.</p>\n              <div className=\"loginform\">\n              \n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={closeDiv}>Back</button>\n                <div className=\"box\">\n                  <input type=\"file\" onChange={inputsHandler} name=\"Featured_Image\" id=\"file-5\" className=\"inputfile inputfile-4\" data-multiple-caption=\"{count} files selected\" multiple />\n                  <label htmlFor=\"file-5\">\n                  <figure><img id=\"profilepreview\" src={flag ? file : Featured_Image ? base_url+'/public/'+Featured_Image :  'assets/images/sample2.jpg'}  /></figure>\n                  <span><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path><path d=\"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.9 13.98l2.1 2.53 3.1-3.99c.2-.26.6-.26.8.01l3.51 4.68c.25.33.01.8-.4.8H6.02c-.42 0-.65-.48-.39-.81L8.12 14c.19-.26.57-.27.78-.02z\"></path></svg></span></label>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" className=\"form-control\" onChange={inputsHandler} placeholder=\"Name\" id=\"name\" name=\"Name\" />\n                </div>\n                <div className=\"form-group\">\n                    <textarea className=\"form-control\" rows=\"5\" onChange={inputsHandler} placeholder=\"Description\" name=\"Description\" id=\"comment\"></textarea>\n                </div>\n                <div className=\"form-group loginbtn\">\n                    <input type=\"button\" className=\"btn btn-info\" onClick={submitButton} value=\"Submit\"/>\n                </div>\n                \n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* For Videos List */}\n      <div className=\"container\" style={{display: Divflag ? 'none' : 'block'}} >\n        <div className=\"row video_heading\">\n          <div className=\"col-md-6\">\n            <h2>Shipping Container List</h2>\n          </div>\n          <div className=\"col-md-6 text-right\">\n            \n            <button type=\"button\" className=\"btn btn-info add_sc\" onClick={divHandle}>Add Shipping Container</button>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"table-responsive datatables-design\">\n            <ToolkitProvider\n                keyField=\"id\"\n                data={ filteredManageShippingContainer }\n                columns={ columns }\n                search\n              >\n                {\n                  props => (\n                    <div> \n                      <SearchBar { ...props.searchProps } />\n                      <BootstrapTable \n                        keyField='dataField'\n                        columns={columns}  \n                        id = \"data-table-ID\"\n                        tabIndexCell\n                        responsive = {true}\n                        defaultSortDirection=\"asc\"\n                        classes = \"dt-responsive dataTable no-footer\"\n                        data={filteredManageShippingContainer} \n                        pagination={ paginationFactory(options) }\n                        noDataIndication=\"No Records Found\"\n                        { ...props.baseProps }\n                      />\n                    </div>\n                  )\n                }\n              </ToolkitProvider>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    \n\n    </section>\n    <Mainfooter />\n  </div>\n   \n  )\n}","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/slime-seat-management.js",["249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315"],[],"/* pages/create-nft.js */\nimport * as React from \"react\";\nimport axios from 'axios'\nimport { useRouter } from 'next/router'\nimport toast from \"../components/Toast\";\nimport { useEffect, useState, useRef } from 'react'\nimport Mainheader from './components/layout/mainheader';\nimport Mainfooter from './components/layout/mainfooter';\nimport * as $ from 'jquery';\n\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\n\nimport { ethers } from 'ethers'\nimport Web3Modal from 'web3modal'\nimport {\n  marketplaceAddress\n} from '../config'\nimport NFTMarketplace from '../artifacts/contracts/NFTMarketplace.sol/NFTMarketplace.json'\n\n\nexport default function SlimeSeatManagement() {\n  \n  const [inputField , setInputField] = useState({\n    name: '',\n    Description: '',\n    Price: '',\n    S_ID: '',\n\n  })\n  const [ButtonDisabled, setButtonDisabled] = useState(true)\n  const { SearchBar } = Search;\n  const [flag, setFlag]=useState(false)\n  const [DivflagAdd, setDivFlagAdd]=useState(false)\n  const [DivflagList, setDivFlagList]=useState(true)\n  const [base_url, BaseUrl]=useState('')\n  const [Image_path, setImages]=useState([])\n  const [processing, setProcessing] = useState(null)\n  const [uploading, setUploading] = useState(null)\n  \n  // IMage Object\n  const [image_priview1, setImagePreview1] = useState('');\n  const [image_priview2, setImagePreview2] = useState('');\n  const [image_priview3, setImagePreview3] = useState('');\n  const [image_priview4, setImagePreview4] = useState('');\n  const [image_priview5, setImagePreview5] = useState('');\n\n  // Image Files\n  const [image_file1, setImageFile1] = useState('');\n  const [image_file2, setImageFile2] = useState('');\n  const [image_file3, setImageFile3] = useState('');\n  const [image_file4, setImageFile4] = useState('');\n  const [image_file5, setImageFile5] = useState('');\n  \n  // Images IDS\n  const [image_ID1, setImageID1] = useState('');\n  const [image_ID2, setImageID2] = useState('');\n  const [image_ID3, setImageID3] = useState('');\n  const [image_ID4, setImageID4] = useState('');\n  const [image_ID5, setImageID5] = useState('');\n  const [product_image, setProductImage] = useState('');\n\n\n  // Edit\n  const [DivflagEdit, setDivFlagEdit]=useState(false)\n  const [data, setEditData]=useState(false)\n  \n \n  \n  // Featured Image\n  const [featured_image, setFeatured_image]=useState(false)\n  const [fileUrl, setFileUrl] = useState(null)\n  const [fileUrlObj, setFileUrlOBJ] = useState(null)\n\n  \n  const [filteredSlimeSeat, setFilteredSlimeSeat] = useState([]);\n  const [USDPrice, setUSDPrice] = useState('');\n  const dataFetchedRef = useRef(false);\n  const [FlagData, setFlagData] = useState(true);\n\n\n  const router = useRouter()\n  useEffect(() => {\n    if (dataFetchedRef.current) return;\n    dataFetchedRef.current = true;\n    SlimeSeatManagementList()\n    var table =  document.querySelector('#data-table-ID');\n    table.classList.remove(\"table-bordered\");\n  }, [])\n\n  const notify = React.useCallback((type, message) => {\n    toast({ type, message });\n  }, []);\n\n  async function setData(data, USDPrice){\n    Object.values(data).forEach(async (value, index) => {\n      value.USDPrice = value.Price * USDPrice;\n      console.log(USDPrice)\n    });\n    return data;\n  }\n\n\n  // Get SC Video List .....\n  async function SlimeSeatManagementList() {\n  \n    const user = JSON.parse(localStorage.getItem('user'));\n   \n    if(user){\n      try{\n        var response = await axios.get(process.env.NEXT_PUBLIC_BASE_URL+'/api/get-slime-seat-list', {\n          headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer '+user.access_token\n          },\n        })\n        \n        const data = response.data;\n        BaseUrl(response.data.base_url)\n\n        const perUSDPrice = await axios.get('https://api.coinconvert.net/convert/matic/usd?amount='+1) \n        var dataWithUSD = await setData(data.data, perUSDPrice.data.USD)\n        console.log(dataWithUSD)\n        setFilteredSlimeSeat(dataWithUSD)\n        setFlagData(false)\n      }catch( error) {\n        // handle error\n        console.log(error)\n        if(error.response.status == 400){\n          notify(\"error\", error.response.data.error)\n        }else if(error.response.status == 401){\n          localStorage.removeItem(\"user\")\n          router.push('/login')\n        }else{\n          notify(\"error\", 'Something went wrong please try again!')\n        }\n      }\n    }else{\n        router.push('/login')\n    }\n  }\n\n  // Sc Video Input handle Here......\n  const inputsHandler = (e, resolve) =>{\n    const { name, value } = e.target;\n   \n    if(name == 'Image_path'){\n      if(image_file1 == '' || image_file2 == '' || image_file3 == '' || image_file4 == '' || image_file5 == ''){\n        if(e.target.files[0]){\n          if(image_priview1 == '' && e.target.files[0].name.split('.')[1] == 'jpg'){\n\n            setImagePreview1(URL.createObjectURL(e.target.files[0]));\n            console.log(Image_path)\n            Image_path.splice(0, 0, e.target.files[0])\n            setImageFile1(e.target.files[0])\n\n          }else if(image_priview2 == ''  && e.target.files[0].name.split('.')[1] == 'jpg'){\n          \n            setImagePreview2(URL.createObjectURL(e.target.files[0]));\n            Image_path.splice(1, 0, e.target.files[0])\n            setImageFile2(e.target.files[0])\n\n          }else if(image_priview3 == '' &&  e.target.files[0].name.split('.')[1] == 'jpg'){  \n            setImagePreview3(URL.createObjectURL(e.target.files[0]));\n            Image_path.splice(2, 0, e.target.files[0])\n            setImageFile3(e.target.files[0])\n\n          }else if(image_priview4 == '' &&  e.target.files[0].name.split('.')[1] == 'jpg'){  \n            setImagePreview4(URL.createObjectURL(e.target.files[0]));\n            Image_path.splice(3, 0, e.target.files[0])\n            setImageFile4(e.target.files[0])\n\n          }else if(image_priview5 == '' &&  e.target.files[0].name.split('.')[1] == 'jpg'){\n\n            setImagePreview5(URL.createObjectURL(e.target.files[0]));\n            Image_path.splice(4, 0, e.target.files[0])\n            setImageFile5(e.target.files[0])\n\n          }else{\n            notify(\"error\", 'Please upload only .jpg file!')\n          }\n          setFlag(true)\n        }\n      }else{\n        notify(\"error\", 'Please upload only 5 images!')\n        \n      }\n    }else{\n      setInputField((prevState) => ({\n        ...prevState,\n        [name]: value,\n      }));\n    }\n  }\n\n  // Sc Video Uploaded Here......\n  async function submitButton(){\n    const user = JSON.parse(localStorage.getItem('user'));\n    var temp = 'logout';\n    if(inputField.Description && inputField.Price && inputField.name){\n\n      if(user){ \n        var response = await axios.get(process.env.NEXT_PUBLIC_BASE_URL+'/api/check-auth',{\n          headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer '+user.access_token\n          },\n        }).then((response)  =>{\n          temp = 'login';\n        }).catch(function (error) {\n          // handle error\n          if(error.response.status == 400){\n            notify(\"error\", error.response.data.error)\n          }else if(error.response.status == 401) {\n            temp = 'logout';\n            localStorage.removeItem(\"user\")\n            router.push('/login')\n          }else{\n            notify(\"error\", 'Something went wrong please try again!')\n          } \n        })\n        if(temp == 'login'){\n\n          setButtonDisabled(true)\n          // NFT UPLOAD......\n          const url = await uploadToIPFS()\n          setProcessing('Processing...')\n          const web3Modal = new Web3Modal()\n          const connection = await web3Modal.connect()\n          const provider = new ethers.providers.Web3Provider(connection)\n          const signer = provider.getSigner();\n          const user = JSON.parse(localStorage.getItem('user'));\n          if(inputField.name && inputField.Price && inputField.Description){\n\n            // Wallet Address Save\n            let formdata = new FormData();\n            formdata.append('wallet_address', await signer.getAddress())    \n            axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/save-wallet-address', formdata,{\n              headers: {\n              'Content-Type': 'application/json',\n              'Authorization': 'Bearer '+user.access_token\n              },\n            }).then((response)  => {\n              console.log(response.data);\n            }).catch(function (error) {\n              // handle error\n              if(error.response.status == 400){\n                notify(\"error\", error.response.data.error)\n              }else if(error.response.status == 401) {\n                localStorage.removeItem(\"user\")\n                router.push('/login')\n              }else{\n                notify(\"error\", 'Something went wrong please try again!')\n              } \n            }) \n        \n            /* create the NFT */\n            const price = ethers.utils.parseUnits(inputField.Price, 'ether')\n            let contract = new ethers.Contract(marketplaceAddress, NFTMarketplace.abi, signer)\n            let listingPrice = await contract.getListingPrice()\n            listingPrice = listingPrice.toString()\n            let transaction = '';\n\n            try {\n              transaction = await contract.createToken(url, price, { value: listingPrice })\n              await transaction.wait()\n\n            } catch (error) {\n              if(error.code == '-32603'){\n                notify('error','Insufficient funds for gas * price + value!')\n                setProcessing(null);\n              }\n              if(error.code == 'ACTION_REJECTED'){\n                notify('error','Transaction rejected!')\n                setProcessing(null);\n              }\n            }\n           \n          \n            if(transaction){\n              const data = await contract.fetchItemsListed()\n              let lastData = data[data.length - 1];\n              let NFTD = new FormData();\n              NFTD.append('name', inputField.name)\n              NFTD.append('price', inputField.Price)\n              NFTD.append('string_price', lastData.price.toString())\n              NFTD.append('description', inputField.Description)\n              NFTD.append('image', fileUrl)\n              NFTD.append('hash_token', transaction.hash)\n              NFTD.append('tokenID', lastData.tokenId.toNumber());\n              NFTD.append('seller', lastData.seller);\n              \n              var nftcreated = await axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/save-user-nft', NFTD,{\n                headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer '+user.access_token\n                },\n              })\n          \n              if(nftcreated.data){\n          \n                let fd = new FormData();\n                $.each($(Image_path), function(i, file) {\n                  fd.append('Image_path[]', file);\n                });\n              \n                fd.append('name', inputField.name)\n                fd.append('Price', inputField.Price)  \n                fd.append('Description', inputField.Description)  \n                fd.append('product_id', nftcreated.data.userNFT.id)\n                fd.append('featured_image', featured_image)\n                axios({\n                  method: 'post',\n                  url: process.env.NEXT_PUBLIC_BASE_URL+'/api/add-slime-seat',\n                  data: fd,\n                  headers: {\n                    'Content-Type': 'multipart/form-data',\n                    'Authorization': 'Bearer '+user.access_token\n                  },\n                }).then((response)  => {\n                  notify(\"success\", 'Slime seat added successfully!')\n                  setProcessing(null)\n                  setInputField({\n                    name:'',\n                    Description:'',\n                    Price:'',\n                  })\n                  document.getElementById('name').value = '';\n                  document.getElementById('comment').value = '';\n                  document.getElementById('price').value = '';\n                  document.getElementById('matic_price').value = '';\n                  setDivFlagList(true)\n                  setDivFlagAdd(false)\n                  setImages('')\n                  setFileUrlOBJ(null)\n                  setFileUrl(null)\n                  setImagePreview1('')\n                  setImagePreview2('')\n                  setImagePreview3('')\n                  setImagePreview4('')\n                  setImagePreview5('')\n                  SlimeSeatManagementList()\n                }).catch(function (error) {\n                  // handle error\n                  if(error.response.status == 400){\n                    notify(\"error\", error.response.data.error)\n                  }else if(error.response.status == 401){\n                    localStorage.removeItem(\"user\")\n                    router.push('/login')\n                  }else{\n                    notify(\"error\", 'Something went wrong please try again!')\n                  }  \n                })\n              }else{\n                notify(\"error\", 'Something went wrong please try again!')\n              }\n            }\n            // Save nft details\n          }else{\n            notify(\"error\", 'Please fill all mandatory fields!')\n            setButtonDisabled(false)\n          }\n        }\n      }else{\n        router.push('/login')\n      }\n    }else{\n      notify(\"error\", 'Please fill all mandatory fields!')\n    }\n  }\n\n  // SC Video Delete.....\n  async function DeleteSlimeSeat(e){\n    \n    if(confirm('Are you sure?')){\n      const user = JSON.parse(localStorage.getItem('user'));\n      let fd = new FormData();\n      fd.append('S_ID', e.currentTarget.value)\n\n      axios({\n          method: 'post',\n          url: process.env.NEXT_PUBLIC_BASE_URL+'/api/slime-seat-delete',\n          data: fd,\n          headers: {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': 'Bearer '+user.access_token\n          },\n      }).then((response)  => {\n        notify(\"success\", 'Slime seat deleted successfully!')\n        SlimeSeatManagementList()\n      }).catch(function (error) {\n        // handle error\n        if(error.response.status == 400){\n          notify(\"error\", error.response.data.error)\n        }else if(error.response.status == 401){\n          localStorage.removeItem(\"user\")\n          router.push('/login')\n        }else{\n          notify(\"error\", 'Something went wrong please try again!')\n        }  \n      })\n    }    \n  }\n\n  // Edit Data Show....\n  function divHandleEdit(e){\n\n    const user = JSON.parse(localStorage.getItem('user'));\n    \n    var s_id = e.currentTarget.value;\n    var fd = new FormData()\n    fd.append('S_ID', e.currentTarget.value)\n    if(user){\n      \n      axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/get-slime-seat-wid', fd, {\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+user.access_token\n        },\n      }).then(async(response)  => {\n        const data = response.data;\n        setEditData(data)\n        setInputField(data.TBL_slime_seats)\n        const reponsePriceExchange = await axios.get('https://api.coinconvert.net/convert/matic/usd?amount='+data.TBL_slime_seats.Price)\n\n        setUSDPrice(reponsePriceExchange.data.USD)\n        setFlag(true)\n        setProductImage(data.product_image)\n        var imageArr = []\n        \n        data.TBL_Slimeseat_Images.map(function(value, index){\n          if(value.Image_path ==  s_id+'_1.jpg'){\n            if(value.Status == 1){\n              setImagePreview1(response.data.base_url+'/'+value.Image_path);\n              setImageFile1(value.Image_path)\n            }\n            setImageID1(value.id)\n            \n          }\n          if(value.Image_path ==  s_id+'_2.jpg'){\n            if(value.Status == 1){\n              setImagePreview2(response.data.base_url+'/'+value.Image_path);\n              setImageFile2(value.Image_path)\n            }\n            setImageID2(value.id)\n          }\n          if(value.Image_path ==  s_id+'_3.jpg'){\n            if(value.Status == 1){\n              setImagePreview3(response.data.base_url+'/'+value.Image_path);\n              setImageFile3(value.Image_path)\n            }\n            setImageID3(value.id)\n          }\n          if(value.Image_path ==  s_id+'_4.jpg'){\n            if(value.Status == 1){\n              setImagePreview4(response.data.base_url+'/'+value.Image_path);\n              setImageFile4(value.Image_path)\n            }\n            setImageID4(value.id)\n          }\n          if(value.Image_path ==  s_id+'_5.jpg'){\n            if(value.Status == 1){\n              setImagePreview5(response.data.base_url+'/'+value.Image_path);\n              setImageFile5(value.Image_path)\n            }\n            setImageID5(value.id)\n          }\n        })\n      \n        var imgPath = []\n        var arrIDS = []\n        $.each($(data.TBL_Slimeseat_Images), function(i, data) {\n          imgPath.push(data.Image_path)\n          arrIDS.push(data.id)\n        });\n\n        setImages(imgPath)\n        setDivFlagEdit(true)\n        setDivFlagList(false)\n        \n      }).catch(function (error) {\n        // handle error\n        console.log(error)\n        if(error.response.status == 400){\n          notify(\"error\", error.response.data.error)\n        }else if(error.response.status == 401){\n          localStorage.removeItem(\"user\")\n          router.push('/login')\n        }else{\n          notify(\"error\", 'Something went wrong please try again!')\n        }\n      })\n      \n    }else{\n        router.push('/login')\n    }\n  }\n\n  // Update Data Show.....\n  async function UpdateButton(){\n    const user = JSON.parse(localStorage.getItem('user'));\n\n\n    let fd = new FormData();\n   \n    fd.append('img_1', image_file1)\n    fd.append('img_2', image_file2)\n    fd.append('img_3', image_file3)\n    fd.append('img_4', image_file4)\n    fd.append('img_5', image_file5)\n    fd.append('img_id1', image_ID1)\n    fd.append('img_id2', image_ID2)\n    fd.append('img_id3', image_ID3)\n    fd.append('img_id4', image_ID4)\n    fd.append('img_id5', image_ID5)\n    fd.append('S_ID', inputField.S_ID)\n   \n    axios({\n      method: 'post',\n      url: process.env.NEXT_PUBLIC_BASE_URL+'/api/update-slime-seat',\n      data: fd,\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'Authorization': 'Bearer '+user.access_token\n      },\n    }).then((response)  => {\n      // window.location.reload();\n      notify(\"success\", 'Slime seat updated successfully!')\n      setDivFlagList(true)\n      setDivFlagEdit(false)\n      setImagePreview1('')\n      setImagePreview2('')\n      setImagePreview3('')\n      setImagePreview4('')\n      setImagePreview5('')\n      SlimeSeatManagementList()\n    \n    }).catch(function (error) {\n      // handle error\n      if(error.response.status == 400){\n        notify(\"error\", error.response.data.error)\n      }else if(error.response.status == 401){\n        localStorage.removeItem(\"user\")\n        router.push('/login')\n      }else{\n        notify(\"error\", 'Something went wrong please try again!')\n      }  \n    })\n  }\n\n  // Image Remove\n  function removeImage(e){\n    console.log(e.currentTarget.id)\n\n    if(e.currentTarget.id == 0){\n      setImagePreview1('')\n      setImageFile1('')\n\n    }\n    if(e.currentTarget.id == 1){\n      setImagePreview2('')\n      setImageFile2('')\n    }\n    if(e.currentTarget.id == 2){\n      setImagePreview3('')\n      setImageFile3('')\n      \n    }\n    if(e.currentTarget.id == 3){\n      setImagePreview4('')\n      setImageFile4('')\n      \n    }\n    if(e.currentTarget.id == 4){\n      setImagePreview5('')\n      setImageFile5('')\n      \n    }\n   \n  }\n\n  function divHandle(e){\n    const user = JSON.parse(localStorage.getItem('user'));\n    \n    if(user){\n      if(user.user.is_verified == 1){\n        setDivFlagAdd(true)\n        setDivFlagList(false)\n      }else{\n        e.preventDefault()\n        alert('You do not have permission to access this option!')\n      }\n    }\n  }\n  function closeDiv(){\n    setDivFlagAdd(false)\n    setDivFlagEdit(false)\n    setDivFlagList(true)\n    setImages('')\n    setImagePreview1('')\n    setImagePreview2('')\n    setImagePreview3('')\n    setImagePreview4('')\n    setImagePreview5('')\n    setImageFile1('')\n    setImageFile2('')\n    setImageFile3('')\n    setImageFile4('')\n    setImageFile5('')\n  }\n\n  async function updateFormPrice(e){\n    if(e.target.value == ''){\n      document.querySelector('.doller_price').value = '';\n      setInputField({ ...inputField, Price: e.target.value })\n    }else{\n      var exchangePriceResponse = await axios.get('https://api.coinconvert.net/convert/matic/usd?amount='+e.target.value)\n      if(exchangePriceResponse){\n        document.querySelector('.doller_price').value = exchangePriceResponse.data.USD\n        setInputField({ ...inputField, Price:   e.target.value.toString() })\n      }\n    }\n  }\n\n  // Featured Images Updoad\n  async function onChangeAdd(e) {\n    var formData = new FormData();\n    const file = e.target.files[0]\n    if(file){\n      formData.append('file', file);\n      setUploading('Uploading...')\n      try {\n        const response = await axios({\n          url: 'https://api.pinata.cloud/pinning/pinFileToIPFS',\n          method: \"POST\", \n          data: formData,\n          maxBodyLength: \"Infinity\", \n          headers: {\n            'pinata_api_key'        : process.env.NEXT_PUBLIC_PINATA_PUBLIC_KEY,\n            'pinata_secret_api_key' : process.env.NEXT_PUBLIC_PINATA_SECRET_KEY\n          },\n        });\n      \n\n        const url = `https://infura-ipfs.io/ipfs/${response.data.IpfsHash}`;\n        setFileUrl(url)\n        console.log(url)\n        setFeatured_image(file)\n        setFileUrlOBJ(URL.createObjectURL(file))\n        setButtonDisabled(false)\n        setUploading(null)\n\n      \n      }catch(e){\n        console.log('Error uploading file: ', e)\n      }\n    }\n\n    // return response.data.IpfsHash;\n  }\n\n  async function uploadToIPFS() {\n    const { name, Description, Price } = inputField\n\n    if (!name || !Description || !Price || !fileUrl) return\n    /* first, upload metadata to IPFS */\n  \n    const data = JSON.stringify({\n      name, Description, Price, image: fileUrl\n    });\n\n    try {\n      const response = await axios({\n        url: 'https://api.pinata.cloud/pinning/pinJSONToIPFS',\n        method: \"POST\", \n        data: data,\n        headers: {\n          'Content-Type': 'application/json', \n          'pinata_api_key'        : process.env.NEXT_PUBLIC_PINATA_PUBLIC_KEY,\n          'pinata_secret_api_key' : process.env.NEXT_PUBLIC_PINATA_SECRET_KEY,\n          'token' : 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySW5mb3JtYXRpb24iOnsiaWQiOiI1MTUwMTllYi03NTVmLTRkNGYtYTRkOS1mMmE2MmVkMzM5ZjkiLCJlbWFpbCI6InJzOTYxMzYwOUBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGluX3BvbGljeSI6eyJyZWdpb25zIjpbeyJpZCI6IkZSQTEiLCJkZXNpcmVkUmVwbGljYXRpb25Db3VudCI6MX0seyJpZCI6Ik5ZQzEiLCJkZXNpcmVkUmVwbGljYXRpb25Db3VudCI6MX1dLCJ2ZXJzaW9uIjoxfSwibWZhX2VuYWJsZWQiOmZhbHNlLCJzdGF0dXMiOiJBQ1RJVkUifSwiYXV0aGVudGljYXRpb25UeXBlIjoic2NvcGVkS2V5Iiwic2NvcGVkS2V5S2V5IjoiNjE5ODI3ZTllODI4ZmRlZjAzMjgiLCJzY29wZWRLZXlTZWNyZXQiOiI2NTY2MWQyZTFmMjNlMDcxZmFhZWViMTQwMzBlNWZmOGQ4MWYxZWU3ZDFkNWZjMjUwZTg5OTFhYTcxOTlkNmJjIiwiaWF0IjoxNjYyMTEwNzI1fQ.R7EAt6TfKn0U42TWptpY6p4d3nvIPoCOw7NnEFNecJs'\n        },\n      });\n      const url = `https://infura-ipfs.io/ipfs/${response.data.IpfsHash}`;\n      setButtonDisabled(false)\n      return url\n\n    }catch(e){\n      console.log('Error uploading file: ', e)\n      notify(\"error\", 'Error uploading file: ', e)\n    }\n  }\n\n  // Datalist\n  const columns = [\n    {\n      text: \"#\",\n      dataField: 'created_at',\n      formatter: (cell, row, index) => index+1,\n    },\n    {\n      text: \"Image\",\n      dataField: 'featured_image',\n      headerStyle: { minWidth: '50px' },\n      style: { width: '50px' },\n      formatter: (cell, row) => <><div className=\"video_button\"><img src={process.env.NEXT_PUBLIC_BASE_URL+'/public/'+row.featured_image} /></div></>,\n    },\n    {\n      text:  \"Name\",\n      dataField: 'name',\n      sort: true,\n      headerStyle: { minWidth: '150px' },\n      style: { width: '150px' },\n    },\n    {\n      text: \"Description\",\n      dataField: 'Description',\n      sort: true,\n      headerStyle: { minWidth: '313px' },\n      style: { width: '313px' },\n    },\n    {\n      text: \"Matic Price\",\n      dataField: 'Price',\n      sort: true,\n      headerStyle: { minWidth: '90px' },\n      formatter: (cell, row) => row.Price?row.Price+'Matic':'',\n      style: { width: '90px' },\n    },\n    {\n      text: \"USD Price\",\n      dataField: 'USDPrice',\n      sort: true,\n      headerStyle: { minWidth: '150px' },\n      formatter: (cell, row) => row.USDPrice?'$ '+row.USDPrice.toFixed(7):'',\n      style: { width: '90px' },\n    },\n    {\n      text: \"Action\",\n      dataField: 'S_ID',\n      classes: 'icon-design-td',\n      headerStyle: { minWidth: '225px' },\n      style: { width: '225px' },\n      formatter: (cell, row) => <><span>\n                                  <button className=\"icon-design icon-edit\" id={row.S_ID} onClick={divHandleEdit} value={row.S_ID}>\n                                    <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                                  </button>\n                                </span>\n                                <span>\n                                  <button className=\"icon-design icon-delete\" id={row.S_ID} onClick={DeleteSlimeSeat} value={row.S_ID}>\n                                    <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                                  </button>\n                                </span>\n                                <span>\n                                  <button className=\"btn btn-info\" id={row.S_ID} onClick={e => {router.push(`/map-slime-seat?id=${row.S_ID}`)}} value={row.S_ID}>\n                                    Map Container\n                                  </button>\n                                </span>\n                                </>,\n    },\n    \n  ] \n  const customTotal = (from, to, size) => (\n    <span className=\"react-bootstrap-table-pagination-total\">\n      Showing { from } to { to } of { size } Results\n    </span>\n  );\n  const options = {\n    paginationSize: 4,\n    pageStartIndex: 1,\n    // alwaysShowAllBtns: true, // Always show next and previous button\n    // withFirstAndLast: false, // Hide the going to First and Last page button\n    // hideSizePerPage: true, // Hide the sizePerPage dropdown always\n    // hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\n    firstPageText: 'First',\n    prePageText: 'Back',\n    nextPageText: 'Next',\n    lastPageText: 'Last',\n    nextPageTitle: 'First page',\n    prePageTitle: 'Pre page',\n    firstPageTitle: 'Next page',\n    lastPageTitle: 'Last page',\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    disablePageTitle: true,\n    // sizePerPageList: [{\n    //   text: '2', value: 2\n    // }, \n    // {\n    //   text: '10', value: 10\n    // },\n    // {\n    //   text: '20', value: 20\n    // }, {\n    //   text: 'All', value: filteredSlimeSeat.length\n    // }] // A numeric array is also available. the purpose of above example is custom the text\n  };\n\n  return (\n    <div>\n    <Mainheader />\n    <section className=\"login-page\" style= {{ background: \"url(\" + \"assets/images/loginbg.jpg\" + \")\" }}>\n      <section className=\"innerbg\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h3>Slime Seat Management</h3>\n            </div>\n          </div>\n        </div>\n      </section>\n      {/* <iframe\n        src=\"https://buy.moonpay.com/?apiKey=[your_api_key]\"\n        allow=\"accelerometer; autoplay; camera; gyroscope; payment\"\n        width=\"100%\"\n        height=\"100%\"\n        frameborder=\"0\"\n      />  */}\n\n      {/* For Slime Seat Add */}\n      <div className=\"container\"  style={{display: DivflagAdd ? 'block' : 'none'}}>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"login-page-design\">\n              <h2>Add Slime Seat</h2>\n              <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.</p>\n              <div className=\"loginform\" style={{    maxWidth: '710px'}}>\n              \n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={closeDiv}>Back</button>\n           \n                {/* Featured Image */}\n\n                <div className=\"box\">\n                  <input type=\"file\" onChange={onChangeAdd} name=\"featured_image\" id=\"featured_image\"  className=\"inputfile inputfile-4 file-5\" data-multiple-caption=\"{count} files selected\" multiple />\n                  <label htmlFor=\"featured_image\">\n                  <figure><img className=\"profilepreview\" src={fileUrlObj}   /></figure>\n                  <span><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path><path d=\"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.9 13.98l2.1 2.53 3.1-3.99c.2-.26.6-.26.8.01l3.51 4.68c.25.33.01.8-.4.8H6.02c-.42 0-.65-.48-.39-.81L8.12 14c.19-.26.57-.27.78-.02z\"></path></svg></span></label>\n                </div>\n\n                {/* Other Five Images */}\n                <div className=\"form-group\">\n                  <lable className=\"lable-design\">Multiple images</lable>\n                  <input type=\"file\" onChange={inputsHandler} name=\"Image_path\" id=\"file-4\"  className=\"form-control\" data-multiple-caption=\"{count} files selected\" multiple />\n                 \n                </div>\n                <div className=\"form-group\">\n                    \n                  {/* <a class=\"prev\" onclick=\"plusSlides(-1)\">&#10094;</a> */}\n                  <div className=\"preview_images\">\n\n                    \n                    <div className=\"box\">\n                      <figure>\n                        {\n                          flag ? Boolean(image_priview1) ?  \n                          <><div className=\"remove1 get_image_id\"  id={0} onClick={removeImage} >X</div> <img id=\"profilepreview1\" className=\"profile_images_preview\"  src={image_priview1} /> </> : \n                          <img id=\"profilepreview1\" className=\"profile_images_preview\"  src={  Image_path > 0 ? base_url+'/'+Image_path :  'assets/images/no-image.png'}  /> : \n                          <img id=\"profilepreview1\" className=\"profile_images_preview\"  src={  Image_path > 0 ? base_url+'/'+Image_path :  'assets/images/no-image.png'}  /> \n                        } \n                      </figure>\n                    </div>\n                \n                    <div className=\"box\">\n                      <figure>\n                        {\n                          flag ? Boolean(image_priview2) ?\n                          <><div className=\"remove2 get_image_id\" id={1} onClick={removeImage} >X</div><img id=\"profilepreview2\" className=\"profile_images_preview\" src={image_priview2} /></> : \n                          <img id=\"profilepreview2\" className=\"profile_images_preview\"  src={  Image_path > 0 ? base_url+'/'+Image_path :  'assets/images/no-image.png'}  /> : \n                          <img id=\"profilepreview2\" className=\"profile_images_preview\"  src={  Image_path > 0 ? base_url+'/'+Image_path :  'assets/images/no-image.png'}  /> \n                        } \n                      </figure>\n                    </div>\n                    <div className=\"box\">\n                      <figure>\n                        {\n                          flag ? Boolean(image_priview3) ?\n                          <><div className=\"remove3 get_image_id\" id={2} onClick={removeImage} >X</div><img id=\"profilepreview3\" className=\"profile_images_preview\" src={image_priview3} /></> : \n                          <img id=\"profilepreview3\" className=\"profile_images_preview\"  src={  Image_path > 0 ? base_url+'/'+Image_path :  'assets/images/no-image.png'}  /> : \n                          <img id=\"profilepreview3\" className=\"profile_images_preview\"  src={  Image_path > 0 ? base_url+'/'+Image_path :  'assets/images/no-image.png'}  /> \n                        }\n                      </figure>\n                    </div>\n                    <div className=\"box\">\n                      <figure>\n                        {\n                          flag ? Boolean(image_priview4) ?\n                          <><div className=\"remove4 get_image_id\" id={3} onClick={removeImage} >X</div><img id=\"profilepreview4\" className=\"profile_images_preview\" src={image_priview4} /></> : \n                          <img id=\"profilepreview4\" className=\"profile_images_preview\"  src={  Image_path > 0 ? base_url+'/'+Image_path :  'assets/images/no-image.png'}  /> : \n                          <img id=\"profilepreview4\" className=\"profile_images_preview\"  src={  Image_path > 0 ? base_url+'/'+Image_path :  'assets/images/no-image.png'}  /> \n                        } \n                        </figure>\n                    </div>\n                    <div className=\"box\">\n                      <figure>\n                        {\n                          flag ? Boolean(image_priview5) ?\n                          <><div className=\"remove5 get_image_id\" id={4} onClick={removeImage} >X</div><img id=\"profilepreview5\" className=\"profile_images_preview\" src={image_priview5} /></> : \n                          <img id=\"profilepreview5\" className=\"profile_images_preview\"  src={  Image_path > 0 ? base_url+'/'+Image_path :  'assets/images/no-image.png'}  /> : \n                          <img id=\"profilepreview5\" className=\"profile_images_preview\"  src={  Image_path > 0 ? base_url+'/'+Image_path :  'assets/images/no-image.png'}  /> \n                        } \n                      </figure>\n                    </div>\n                  </div>\n                  {/* <a class=\"next\" onclick=\"plusSlides(1)\">&#10095;</a>\n                  <div style={{textAlign: 'center'}}>\n                      <span class=\"dot\" onclick=\"currentSlide(1)\"></span>\n                      <span class=\"dot\" onclick=\"currentSlide(2)\"></span>\n                      <span class=\"dot\" onclick=\"currentSlide(3)\"></span>\n                      <span class=\"dot\" onclick=\"currentSlide(4)\"></span>\n                  </div> */}\n                   \n                </div>\n                <div className=\"form-group\">\n                  <label>Name<span className=\"required\">*</span></label>\n                  <input type=\"text\" className=\"form-control\" onChange={inputsHandler}  id=\"name\" required name=\"name\" />\n                </div>\n               \n                {/* <div className=\"form-group\">\n                  <input type=\"text\" className=\"form-control\" onChange={inputsHandler} placeholder=\"Price\" id=\"price\" required name=\"Price\" />\n                </div> */}\n                <div className=\"row\">\n                <div className=\"col-lg-6\">\n\n                  <div className=\"form-group\">\n                    <label>Matic Price<span className=\"required\">*</span></label>\n                    <input type=\"text\" className=\"form-control\" onChange={updateFormPrice} id=\"matic_price\" required />\n                  </div>\n                </div>\n                <div className=\"col-lg-6\">\n                  <div className=\"form-group\">\n                    <label>Dollar Price</label>\n                    <input type=\"text\" className=\"form-control doller_price\" readOnly id=\"price\" />\n                  </div>\n                </div>\n\n                </div>\n                <div className=\"form-group\">\n                  <label>Description<span className=\"required\">*</span></label>\n                  <textarea className=\"form-control\" rows=\"5\" onChange={inputsHandler}  required name=\"Description\" id=\"comment\"></textarea>\n                </div>\n                <div className=\"form-group loginbtn\">\n                    <input type=\"button\" className=\"btn btn-info\" disabled={processing ? 'disabled' : ButtonDisabled ? 'disabled': ''} onClick={submitButton} value={uploading ? uploading : processing ? processing : 'Submit'} />\n                </div>\n                \n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* For Slime Seat Edit */}\n      <div className=\"container\"  style={{display: DivflagEdit ? 'block' : 'none'}}>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"login-page-design\">\n              <h2>Edit Slime Seat</h2>\n              <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.</p>\n              <div className=\"loginform\" style={{ maxWidth: '710px'}}>\n              \n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={closeDiv}>Back</button>\n                <div className=\"box\">\n                  <label htmlFor=\"file-5\">\n                  <figure><img id=\"profilepreview\" src={product_image}   /></figure>\n                  <span><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path><path d=\"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.9 13.98l2.1 2.53 3.1-3.99c.2-.26.6-.26.8.01l3.51 4.68c.25.33.01.8-.4.8H6.02c-.42 0-.65-.48-.39-.81L8.12 14c.19-.26.57-.27.78-.02z\"></path></svg></span></label>\n                </div>\n                <div className=\"form-group\">\n                  <lable className=\"lable-design\">Multiple images</lable>\n                  <input type=\"file\" onChange={inputsHandler} name=\"Image_path\" id=\"file-4\"  className=\"form-control\" data-multiple-caption=\"{count} files selected\" multiple />\n                 \n                </div>\n                <div className=\"form-group\">\n                    \n                    {/* <a class=\"prev\" onclick=\"plusSlides(-1)\">&#10094;</a> */}\n                    <div className=\"preview_images\">\n                        <div className=\"box\">\n                            <figure>\n                                {\n                                  flag ? Boolean(image_priview1) ?\n\n                                  <><div className=\"remove1 get_image_id\" data-image={data? data.TBL_Slimeseat_Images[0]?data.TBL_Slimeseat_Images[0].id:'':''} id={0} onClick={removeImage} >X</div><img id=\"profilepreview1\" className=\"profile_images_preview\"  src={image_priview1}  /> </> : \n                                  <img id=\"profilepreview1\" className=\"profile_images_preview\"  src={  Image_path > 0 ? base_url+'/public/'+Image_path :  'assets/images/no-image.png'}  /> : \n                                  <img id=\"profilepreview1\" className=\"profile_images_preview\"  src={  Image_path > 0 ? base_url+'/public/'+Image_path :  'assets/images/no-image.png'}  /> \n                                } \n                            </figure>\n                        </div>\n                        <div className=\"box\">\n                            <figure>\n                                {\n                                  flag ? Boolean(image_priview2) ?\n\n                                  <><div className=\"remove2 get_image_id\" data-image={data? data.TBL_Slimeseat_Images[1]?data.TBL_Slimeseat_Images[1].id:'' :''} id={1} onClick={removeImage} >X</div><img id=\"profilepreview2\" className=\"profile_images_preview\" src={image_priview2}  /> </> : \n                                  <img id=\"profilepreview2\" className=\"profile_images_preview\"  src={  Image_path > 0 ? base_url+'/public/'+Image_path :  'assets/images/no-image.png'}  /> : \n                                  <img id=\"profilepreview2\" className=\"profile_images_preview\"  src={  Image_path > 0 ? base_url+'/public/'+Image_path :  'assets/images/no-image.png'}  /> \n                                } \n                            </figure>\n                        </div>\n                        <div className=\"box\">\n                            <figure>\n                                {\n                                  flag ? Boolean(image_priview3) ?\n\n                                  <><div className=\"remove3 get_image_id\" data-image={ data? data.TBL_Slimeseat_Images[2]?data.TBL_Slimeseat_Images[2].id:'':''} id={2} onClick={removeImage} >X</div><img id=\"profilepreview3\" className=\"profile_images_preview\" src={image_priview3}  /> </> : \n                                  <img id=\"profilepreview3\" className=\"profile_images_preview\"  src={  Image_path > 0 ? base_url+'/public/'+Image_path :  'assets/images/no-image.png'}  /> : \n                                  <img id=\"profilepreview3\" className=\"profile_images_preview\"  src={  Image_path > 0 ? base_url+'/public/'+Image_path :  'assets/images/no-image.png'}  /> \n                                }\n                            </figure>\n                        </div>\n                        <div className=\"box\">\n                            <figure>\n                                {\n                                  flag ? Boolean(image_priview4) ?\n\n                                  <><div className=\"remove4 get_image_id\" data-image={data? data.TBL_Slimeseat_Images[3]?data.TBL_Slimeseat_Images[3].id:'':''} id={3} onClick={removeImage} >X</div><img id=\"profilepreview4\" className=\"profile_images_preview\" src={image_priview4}  /> </> : \n                                  <img id=\"profilepreview4\" className=\"profile_images_preview\"  src={  Image_path > 0 ? base_url+'/public/'+Image_path :  'assets/images/no-image.png'}  /> : \n                                  <img id=\"profilepreview4\" className=\"profile_images_preview\"  src={  Image_path > 0 ? base_url+'/public/'+Image_path :  'assets/images/no-image.png'}  /> \n                                } \n                            </figure>\n                        </div>\n                        <div className=\"box\">\n                            <figure>\n                                {\n                                  flag ? Boolean(image_priview5) ?\n\n                                  <><div className=\"remove5 get_image_id\" data-image={data?data.TBL_Slimeseat_Images[4]?data.TBL_Slimeseat_Images[4].id:'':''}  id={4} onClick={removeImage} >X</div><img id=\"profilepreview5\" className=\"profile_images_preview\" src={image_priview5}  /> </> : \n                                  <img id=\"profilepreview5\" className=\"profile_images_preview\"  src={  Image_path > 0 ? base_url+'/public/'+Image_path :  'assets/images/no-image.png'}  /> : \n                                  <img id=\"profilepreview5\" className=\"profile_images_preview\"  src={  Image_path > 0 ? base_url+'/public/'+Image_path :  'assets/images/no-image.png'}  /> \n                                } \n                            </figure>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                  <input type=\"text\" readOnly className=\"form-control\" value={inputField.name} onChange={inputsHandler} placeholder=\"Name\" id=\"name\" name=\"name\" />\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-lg-6\">\n                    \n                    <div className=\"form-group\">\n                      <input type=\"text\" readOnly className=\"form-control\" value={inputField.Price} onChange={inputsHandler} placeholder=\"Price\" id=\"price\" name=\"Price\" />\n                    </div>\n                  </div>\n                  <div className=\"col-lg-6\">\n\n                    <div className=\"form-group\">\n                      <input type=\"text\" className=\"form-control usdPrice\" readOnly value={USDPrice}  placeholder=\"USD Price\" id=\"price\" />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <textarea className=\"form-control\" readOnly rows=\"5\" value={inputField.Description} onChange={inputsHandler} placeholder=\"Description\" name=\"Description\" id=\"comment\"></textarea>\n                </div>\n                <div className=\"form-group loginbtn\">\n                    <input type=\"button\" className=\"btn btn-info\" onClick={UpdateButton} value=\"Update\"/>\n                </div>\n                \n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* For Slime seat  List */}\n      <div className=\"container\" style={{display: DivflagList ? 'block' : 'none'}} >\n        <div className=\"row video_heading\">\n          <div className=\"col-md-6\">\n            <h2>Slime Seat Management List</h2>\n          </div>\n          <div className=\"col-md-6 text-right\">\n            \n            <button type=\"button\" className=\"btn btn-info add_sc\" onClick={divHandle}>Add Slime Seat</button>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"table-responsive datatables-design\">\n            <ToolkitProvider\n                keyField=\"id\"\n                data={ filteredSlimeSeat }\n                columns={ columns }\n                search\n              >\n                {\n                  props => (\n                    <div> \n                      <SearchBar { ...props.searchProps } />\n                      <BootstrapTable \n                        keyField='id'\n                        id = \"data-table-ID\"\n                        classes = \"dt-responsive dataTable no-footer\"\n                        data={filteredSlimeSeat} \n                        columns={columns}  \n                        pagination={ paginationFactory(options) }\n                        noDataIndication={FlagData ? 'Loading': \"No Records Found\"}\n                        { ...props.baseProps }\n                      />\n                    </div>\n                  )\n                }\n              </ToolkitProvider>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <Mainfooter />\n  </div>\n   \n  )\n}\n","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/transaction-history.js",["316"],[],"/* pages/create-nft.js */\nimport * as React from \"react\";\nimport axios from 'axios'\nimport { useRouter } from 'next/router'\nimport toast from \"../components/Toast\";\nimport { useEffect, useState , useRef} from 'react'\n\nimport Mainheader from './components/layout/mainheader';\nimport Mainfooter from './components/layout/mainfooter';\n\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\n\n\n\n\n\n\n\nexport default function TransactionHistory() {\n  \n  const { SearchBar } = Search;\n  const router = useRouter()\n  const dataFetchedRef = useRef(false);\n  const [FilteredTransactionHostory, setFilteredTransactionHostory] = useState([]);\n  const [Flag, setFlag] = useState(false);\n\n \n  useEffect(() => {\n    if (dataFetchedRef.current) return;\n    dataFetchedRef.current = true;\n\n    GetTransactionHistory()\n    var table =  document.querySelector('#data-table-ID');\n    table.classList.remove(\"table-bordered\");\n\n  }, [FilteredTransactionHostory])\n\n  const notify = React.useCallback((type, message) => {\n    toast({ type, message });\n  }, []);\n\n  async function setData(data, USDPrice){\n    Object.values(data).forEach(async (value, index) => {\n      value.USDPrice = value.T_Amount * USDPrice;\n    });\n    return data;\n  }\n\n  // Get SC Video List .....\n  async function GetTransactionHistory() {\n\n  \n    const user = JSON.parse(localStorage.getItem('user'));\n    if(user){\n      try{\n        var response = await axios.get(process.env.NEXT_PUBLIC_BASE_URL+'/api/get-transaction-history', {\n          headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer '+user.access_token\n          },\n        }) \n        const data = await response.data; \n\n        const perUSDPrice = await axios.get('https://api.coinconvert.net/convert/matic/usd?amount='+1) \n        var dataWithUSD = await setData(data.data, perUSDPrice.data.USD)\n        console.log(dataWithUSD)\n        setFilteredTransactionHostory(dataWithUSD);\n\n      }catch(error) {\n        // handle error\n        console.log(error)\n        if(error.response.status == 400){\n          notify(\"error\", error.response.data.error)\n        }else if(error.response.status == 401){\n          localStorage.removeItem(\"user\")\n          router.push('/login')\n        }else{\n          notify(\"error\", 'Something went wrong please try again!')\n        }\n      }\n    }else{\n      router.push('/login')\n    }\n  }\n\n  // Datalist\n  const columns = [\n    {\n      text: \"#\",\n      dataField: 'id',\n      formatter: (cell, row, index) => index+1,\n      \n    },\n    {\n      text:  \"Transaction ID\",\n      dataField: 'Transaction_Token',\n      sort: true,\n      headerStyle: { minWidth: '120px' },\n      style: { width: '120px' },\n      formatter: (cell, row) => row.Transaction_Token\n    },\n    {\n      text: \"Name\",\n      dataField: 'name',\n      sort: true,\n      headerStyle: { minWidth: '150px' },\n      style: { width: '150px' },\n      formatter: (cell, row) => row.name\n    },\n    {\n      text: \"Matic Price\",\n      dataField: 'T_Amount',\n      sort: true,\n      headerStyle: { minWidth: '90px' },\n      formatter: (cell, row) => row.T_Amount+'Matic'\n    },\n    {\n      text: \"USD Price\",\n      dataField: 'USDPrice',\n      sort: true,\n      headerStyle: { minWidth: '90px' },\n      formatter: (cell, row) =>row.USDPrice? '$ '+row.USDPrice.toFixed(7): 'Not Found'\n    },\n    {\n      text: \"Status\",\n      dataField: 'Status',\n      sort: true,\n      formatter: (cell, row) => row.Status\n    },\n    \n    \n  ] \n  const customTotal = (from, to, size) => (\n    <span className=\"react-bootstrap-table-pagination-total\">\n      Showing { from } to { to } of { size } Results\n    </span>\n  );\n  const options = {\n    paginationSize: 4,\n    pageStartIndex: 1,\n    // alwaysShowAllBtns: true, // Always show next and previous button\n    // withFirstAndLast: false, // Hide the going to First and Last page button\n    // hideSizePerPage: true, // Hide the sizePerPage dropdown always\n    // hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\n    firstPageText: 'First',\n    prePageText: 'Back',\n    nextPageText: 'Next',\n    lastPageText: 'Last',\n    nextPageTitle: 'First page',\n    prePageTitle: 'Pre page',\n    firstPageTitle: 'Next page',\n    lastPageTitle: 'Last page',\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    disablePageTitle: true,\n    // A numeric array is also available. the purpose of above example is custom the text\n  };\n\n  \n  \n  \n\n\n  return (\n    <div>\n    <Mainheader />  \n    <section className=\"login-page\" style= {{ background: \"url(\" + \"assets/images/loginbg.jpg\" + \")\" }}>\n      <section className=\"innerbg\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h3>Transaction History</h3>\n            </div>\n          </div>\n        </div>\n      </section>\n\n\n      {/* For Slime seat  List */}\n      <div className=\"container\" >\n        <div className=\"row video_heading\">\n          <div className=\"col-md-6\">\n            <h2>Transaction History list</h2>\n          </div>\n          <div className=\"col-md-6 text-right\">\n            \n            {/* <button type=\"button\" className=\"btn btn-info add_sc\" >Add Slime Seat Management</button> */}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"table-responsive datatables-design\">  \n              <ToolkitProvider\n                  keyField=\"id\"\n                  data={ FilteredTransactionHostory }\n                  columns={ columns }\n                  search\n                >\n                  {\n                    props => (\n                      <div> \n                        <SearchBar { ...props.searchProps }\n                        />\n                        <BootstrapTable \n                          keyField='id'\n                          id = \"data-table-ID\"\n                          classes = \"dt-responsive dataTable no-footer\"\n                          columns={columns} \n                          data={FilteredTransactionHostory} \n                          pagination={ paginationFactory(options) }\n                          noDataIndication={ \"No Records Found\"}\n                          { ...props.baseProps }\n                        />\n                      </div>\n                    )\n                  }\n              </ToolkitProvider>\n             \n               \n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <Mainfooter />\n  </div>\n   \n  )\n}\n","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/view-profile.js",["317","318","319","320","321","322","323","324","325","326","327"],[],"/* pages/create-nft.js */\nimport * as React from \"react\";\nimport axios from 'axios'\nimport { useRouter } from 'next/router'\nimport toast from \"../components/Toast\";\nimport { useEffect, useState } from 'react'\nimport Mainheader from './components/layout/mainheader';\nimport Mainfooter from './components/layout/mainfooter';\n\n\nexport default function MyprofileView() {\n  \n  const [inputField , setInputField] = useState({\n    name: '',\n    lastname: '',\n    email: '',\n    phone_number:'',\n    facebook_link:'',\n    twitter_link:'',\n    youtube_link:'',\n    bio:'',\n    is_verified:'',\n  })\n  const [userData, setUserData] = useState('')\n  const [nfts, setNfts]=useState('')\n  const [collectedNfts, setCollectedNfts]=useState('')\n  const [profile_image, setProfileImage]=useState('')\n  const router = useRouter()\n  useEffect(() => {\n    UserDetail()\n  }, [])\n\n  async function UserDetail() {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if(user){\n      axios.get(process.env.NEXT_PUBLIC_BASE_URL+'/api/my-profile',{\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+user.access_token\n        },\n      }).then((response)  => {\n        const data = response.data;\n        setInputField(data.user) \n        setNfts(data.user_nfts)\n        setCollectedNfts(data.user_collected_nft)\n        setProfileImage(data.user.profile_image)\n        setUserData(data)\n      }).catch(function (error) {\n        // handle error\n        if(error.response.status == 400){\n          notify(\"error\", error.response.data.error)\n        }else if(error.response.status == 401){\n          localStorage.removeItem(\"user\")\n          router.push('/login')\n        }else{\n          notify(\"error\", 'Something went wrong please try again!')\n        }\n      })\n    }else{\n      router.push('/login')\n    }\n  }\n\n  const notify = React.useCallback((type, message) => {\n    toast({ type, message });\n  }, []);\n\n//   const inputsHandler = (e) =>{\n//     const { name, value } = e.target;\n//     if(name == 'profile_image'){\n//       if(e.target.files[0]){\n//         setFileObject(URL.createObjectURL(e.target.files[0]));\n//         setProfileImage(e.target.files[0])\n//         setFlag(true)\n//       }\n//     }else{\n//       setInputField((prevState) => ({\n//         ...prevState,\n//         [name]: value,\n//       }));\n//     }\n    \n\n//   }\n\n//   async function submitButton(){\n//     const user = JSON.parse(localStorage.getItem('user'));\n//     delete user.user.profile_image\n    \n//     // localStorage.setItem('user', JSON.stringify(response.data))\n\n//     let fd = new FormData();\n//     fd.append('phone_number', Boolean(inputField.phone_number) ?inputField.phone_number : '' )\n//     fd.append('profile_image', profile_image)  \n//     axios({\n//         method: 'post',\n//         url: process.env.NEXT_PUBLIC_BASE_URL+'/api/update-my-profile',\n//         data: fd,\n//         headers: {\n//         'Content-Type': 'multipart/form-data',\n//         'Authorization': 'Bearer '+user.access_token\n//         },\n//     }).then((response)  => {\n//       notify(\"success\", 'Profile updated successfully!')\n//     //   const data = response.data;\n//       setInputField(response.data.user)\n//       setUserData(response.data)\n//       setProfileImage(response.data.user.profile_image)\n//       setFlag(false)\n//       Object.assign(user.user, {profile_image: response.data.user.profile_image});\n//       localStorage.setItem('user', JSON.stringify(user))\n//     }).catch(function (error) {\n//       // handle error\n//       if(error.response.status == 400){\n//         notify(\"error\", error.response.sdata.error)\n//       }else if(error.response.status == 401){\n//         localStorage.removeItem(\"user\")\n//         router.push('/login')\n//       }else{\n//         notify(\"error\", 'Something went wrong please try again!')\n//       }  \n//     })\n      \n    \n//   }\n\n  return (\n    <div>\n        <Mainheader />\n            <section className=\"login-page\" style={{background: \"url(\" + \"assets/images/loginbg.jpg\" + \")\" }}>\n\n                <section className=\"innerbg\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <h3>Profile details</h3>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n\n                <section className=\"profilepage\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                            \n                                <div className=\"loginform profile-left-d\">\n                                \n                                    <div className=\"profile-left\" style={{background:\"url(\" + \"assets/images/nftbg.jpg\" + \")\" }}>\n                                        <div className=\"form-group profile-imggroup\">\n                                            <div className=\"box\">\n                                                {/* <input type=\"file\" name=\"file-5[]\" id=\"file-5\" className=\"inputfile inputfile-4\" data-multiple-caption=\"{count} files selected\" multiple=\"\" /> */}\n                                                <label htmlFor=\"file-5\">\n                                                    <figure>\n                                                        <img id=\"profilepreview\" src={profile_image ? userData.base_url+'/public/'+profile_image : 'assets/images/user.png'} />\n                                                        {\n                                                            inputField.is_verified == 1 \n                                                            ? \n                                                                <img src=\"assets/images/v1.png\" className=\"verification-images\"></img>\n                                                            : \n                                                            inputField.is_verified == 2 \n                                                            ?\n                                                                <img src=\"assets/images/v2.png\" className=\"verification-images\"></img>\n                                                            : \n                                                                <img src=\"assets/images/v3.png\" className=\"verification-images\"></img>\n                                                        }   \n                                                       \n                                                    </figure>\n                                                </label>\n                                            </div>\n                                            <div className=\"profileinfo\">\n                                                \n                                                <ul className=\"socialslinks\">\n                                                    <li><a href={inputField.facebook_link}><i className=\"fa fa-facebook\" aria-hidden=\"true\"></i></a></li>\n                                                    <li><a href={inputField.twitter_link}><i className=\"fa fa-twitter\" aria-hidden=\"true\"></i></a></li>\n                                                    <li><a href={inputField.youtube_link}><i className=\"fa fa-youtube-play\" aria-hidden=\"true\"></i></a></li>\n                                                </ul>\n                                                <div className=\"profileinfo-ex\">\n                                                    <span>{inputField.email}</span>\n                                                    <span>{inputField.phone_number}</span>\n                                                </div>\n                                                <ul>\n                                                    <li><span>{userData.volumn} MATIC</span>Volume</li>\n                                                    <li><span>{userData.sale}</span>Sales</li>\n                                                    <li><span>{userData.nft_count}</span>Items</li>\n                                                </ul>\n                                            </div>\n                                    </div>\n                                </div>\n                                        \n                                <div className=\"profile-details\">\n                                    <h3>{inputField.name} { inputField.lastname}</h3>\n                                    <h5>{inputField.bio}</h5>\n                                    {/* <h5>Lorem ipsum dolor sit amet, consectetur adipisicing</h5> */}\n                                        \n                                    <div className=\"profilemynft\">\n                                        <ul className=\"nav nav-tabs\" role=\"tablist\">\n                                            <li className=\"nav-item\">\n                                                <a className=\"nav-link active\" data-toggle=\"tab\" href=\"#home\">Created</a>\n                                            </li>\n                                            <li className=\"nav-item\">\n                                                <a className=\"nav-link\" data-toggle=\"tab\" href=\"#menu1\">Collected</a>\n                                            </li>\n                                        </ul>\n\n                                        <div className=\"tab-content\">\n                                            <div id=\"home\" className=\"tab-pane active\">\n                                                <ul>\n                                                    {\n                                                       nfts.length > 0 \n                                                        ?  \n                                                            nfts.map((val, index) => {\n                                                               return (\n                                                                <li key={index}>\n                                                                    <a href=\"#\">\n                                                                        <i className={val.wishlist_product_id ? 'fa fa-heart':''} aria-hidden=\"true\"></i>\n                                                                        <img src={val.image} alt=\"\" className=\"img-fluid\" />\n                                                                    </a>\n                                                                </li>)\n                                                            })\n                                                        :\n                                                        <li>No nfts Created</li>\n                                                    }\n                                                    <ul></ul>\n                                                </ul>\n                                            </div>\n                                            <div id=\"menu1\" className=\"tab-pane fade\">\n                                                <ul>\n                                                    {\n                                                       collectedNfts.length > 0 \n                                                        ?  \n                                                            collectedNfts.map((val, index) => {           \n                                                               return (\n                                                                <li key={index} >\n                                                                    <a href=\"#\">\n                                                                        <i className={val.wishlist_product_id ? 'fa fa-heart':''} aria-hidden=\"true\"></i>\n                                                                        <img src={val.image} alt=\"\" className=\"img-fluid\" />\n                                                                    </a>\n                                                                </li>)\n                                                            })\n                                                        :\n                                                        <li>No nfts collected</li>\n                                                    }\n                                                    <ul></ul>\n                                                </ul>\n                                            </div>\n                                        </div>\n                                    </div>\n                                        \n                                </div>      \n                            </div>  \n                        </div>\n                    </div>\n                    </div>\n               \n           \n                </section>\n            </section>\n        <Mainfooter />\n    </div>\n   \n  )\n}","/home/anshuman/Desktop/2kpaid/nft-marketplace/pages/wishlist.js",["328","329"],[],"/* pages/my-nfts.js */\nimport * as React from \"react\";\nimport { ethers } from 'ethers'\nimport { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport Web3Modal from 'web3modal'\nimport { useRouter } from 'next/router'\nimport toast from \"../components/Toast\";\nimport Mainheader from './components/layout/mainheader';\nimport {\n  marketplaceAddress\n} from '../config'\n\nimport NFTMarketplace from '../artifacts/contracts/NFTMarketplace.sol/NFTMarketplace.json'\nimport Mainfooter from './components/layout/mainfooter';\n\n\nexport default function WishlistMain() {\n    const [nfts, setNfts] = useState([])\n    const [userBuyNFt, userBuyNFT] = useState()\n    const [loadingState, setLoadingState] = useState('not-loaded')\n    const [loading, setLoading] = useState(false);\n    const [rndmNumber, setRndmNumber] = useState('');\n    const router = useRouter()\n    useEffect(() => {\n        loadNFTs()\n    }, [])\n\n    const notify = React.useCallback((type, message) => {\n        toast({ type, message });\n    }, []);\n\n    async function loadNFTs() {\n        var temp = 'logout';\n        const user = JSON.parse(localStorage.getItem('user'));\n        if(user){\n        var response = await axios.get(process.env.NEXT_PUBLIC_BASE_URL+'/api/check-auth',{\n            headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer '+user.access_token\n            },\n        }).then((response)  =>{\n            temp = 'login';\n        }).catch(function (error) {\n            // handle error\n            if(error.response.status == 400){\n            notify(\"error\", error.response.data.error)\n            }else if(error.response.status == 401) {\n            temp = 'logout';\n            localStorage.removeItem(\"user\")\n            router.push('/login')\n            }else{\n            notify(\"error\", 'Something went wrong please try again!')\n            } \n        })\n        if(temp == 'login'){\n            const web3Modal = new Web3Modal({\n            network: \"mainnet\",\n            cacheProvider: true,\n            })\n            if(window.ethereum){\n            await window.ethereum.request({method:'eth_requestAccounts'})\n            .then(res=>{\n                // Return the address of the wallet\n                console.log(res) \n            })\n            }else{\n            alert(\"install metamask extension!!\")\n            }\n            setLoading(true) \n            const connection = await web3Modal.connect()\n            const provider = new ethers.providers.Web3Provider(connection)\n            const signer = provider.getSigner()\n            const marketplaceContract = new ethers.Contract(marketplaceAddress, NFTMarketplace.abi, signer)\n            const data = await marketplaceContract.fetchMyNFTs()\n            const reponsePriceExchange = await axios.get('https://api.coinconvert.net/convert/matic/usd?amount='+1)\n            var wallet_response =  await  axios.get(process.env.NEXT_PUBLIC_BASE_URL+'/api/get-wishlist',{\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer '+user.access_token\n            },\n            })\n            const BoughtNFT = wallet_response.data.wishlist.reverse()\n            if(wallet_response.data){\n            const items = await Promise.all(BoughtNFT.map(async (i, index) => {\n                const tokenURI = await marketplaceContract.tokenURI(i.tokenID)\n    \n                if(reponsePriceExchange){\n                if(tokenURI.split('/')[2] ==  'infura-ipfs.io'){\n        \n                    var getwayURL = 'https://gateway.moralisipfs.com/ipfs/'+tokenURI.split('/')[4]\n                    const meta = await axios.get(getwayURL)\n                    const USDPrice = i.price * reponsePriceExchange.data.USD;\n    \n                    if(meta.data != undefined){\n        \n                    console.log(meta)\n                    const priceFormat = ethers.utils.parseUnits(i.price, 'ether')\n                    let price = ethers.utils.formatUnits(priceFormat, 'ether')\n                    let item = {\n                        price,\n                        DollarPrice:USDPrice,\n                        tokenId: i.tokenID,\n                        string_price:i.string_price,\n                        seller: i.seller,\n                        owner: i.owner,\n                        image: meta.data.image,\n                        name: meta.data.name,\n                        status: i.status,\n                        tokenURI,\n                        wishlist : i.wishlist,\n                        wishlist_id : i.wishlist_id ? i.wishlist_id : '',\n                        product_id : i.id,\n                    }\n                    console.log(item)\n                    return item\n                    }\n                }\n                }\n        \n            }))\n            setNfts(items)\n            setLoading(false) \n            setLoadingState('loaded') \n            }\n        }    \n        }else{\n        localStorage.removeItem(\"user\")\n        router.push('/login')\n        }\n        \n    }\n    async function wishlist(wishlist_id, product_id){\n      const user = JSON.parse(localStorage.getItem('user'));\n      if(Boolean(wishlist_id)){\n        var fd = new FormData();\n        fd.append('wishlist_id', wishlist_id);\n        axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/remove-wishlist', fd ,{\n            headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer '+user.access_token\n            },\n        }).then((response)  => {\n        \n            nfts.forEach((nft, index) => {\n            if(Boolean(wishlist_id)){\n                if(nft.wishlist_id == wishlist_id){\n                // console.log(wishlist_id); \n                nft.wishlist_id = '';\n                nft.wishlist = 0;\n                }\n                nfts[index] = nft\n            }\n            });\n            setRndmNumber(Math.random())\n            setNfts(nfts)\n            notify(\"success\", 'Wishlist removed successfully!')\n            loadNFTs()\n        }).catch(function (error) {\n            // handle error\n            if(error.response){\n\n            if(error.response.status == 400){\n                notify(\"error\", error.response.data.error)\n            }else if(error.response.status == 401){\n                localStorage.removeItem(\"user\")\n                router.push('/login')\n            } else{\n                notify(\"error\", 'Something went wrong please try again!')\n            }\n            }else{\n            console.log(error)\n            }\n        })\n      }\n        \n    }\n\n    async function buyNft(nft) {\n\n        /* needs the user to sign the transaction, so will use Web3Provider and sign it */\n        console.log(nft)\n        const user = JSON.parse(localStorage.getItem('user'));\n        var temp = 'logout';\n        var response = await axios.get(process.env.NEXT_PUBLIC_BASE_URL+'/api/check-auth',{\n          headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer '+user.access_token\n          },\n        }).then((response)  =>{\n          temp = 'login';\n        }).catch(function (error) {\n          // handle error\n          if(error.response.status == 400){\n            notify(\"error\", error.response.data.error)\n          }else if(error.response.status == 401) {\n            temp = 'logout';\n            localStorage.removeItem(\"user\")\n            router.push('/login')\n          }else{\n            notify(\"error\", 'Something went wrong please try again!')\n          } \n        })\n    \n        if(temp == 'login' ){\n    \n          document.getElementById('button_disabled'+nft.product_id).innerHTML = 'Processing...';\n          document.getElementById('button_disabled'+nft.product_id).disabled = true;\n          var transaction = '';\n          var price = '';\n          try {\n            const web3Modal = new Web3Modal()\n            const connection = await web3Modal.connect()\n            const provider = new ethers.providers.Web3Provider(connection)\n            const signer = provider.getSigner()\n            const contract = new ethers.Contract(marketplaceAddress, NFTMarketplace.abi, signer)\n        \n            /* user will be prompted to pay the asking proces to complete the transaction */\n            price = ethers.utils.parseUnits(nft.price, 'ether') \n            transaction = await contract.createMarketSale(nft.tokenId, {\n              value: price\n            }) \n            await transaction.wait()\n            // return transaction;\n          } catch (error) {\n            if(error.code == '-32603'){\n              notify('error','Insufficient funds for gas * price + value!')\n              document.getElementById('button_disabled'+nft.product_id).innerHTML = 'Buy';\n              document.getElementById('button_disabled'+nft.product_id).disabled = false;\n            }\n            if(error.code == 'ACTION_REJECTED'){\n              notify('error','Transaction rejected!')\n              document.getElementById('button_disabled'+nft.product_id).innerHTML = 'Buy';\n              document.getElementById('button_disabled'+nft.product_id).disabled = false;\n            }\n          }\n          console.log(transaction);\n          if(transaction){\n            let fd = new FormData();\n            fd.append('product_id', nft.product_id)\n            fd.append('name', nft.name)\n            fd.append('price', nft.price)\n            fd.append('string_price', nft.string_price)\n            fd.append('description', nft.description)\n            fd.append('image', nft.image)\n            fd.append('tokenID', nft.tokenId)\n            fd.append('hash_token', transaction.hash)\n            fd.append('from_wallet', transaction.from)\n            fd.append('gasLimit', JSON.stringify(transaction.gasLimit))\n            fd.append('gasPrice', JSON.stringify(transaction.gasPrice))\n            fd.append('maxFeePerGas', JSON.stringify(transaction.maxFeePerGas))\n            fd.append('maxPriorityFeePerGas', JSON.stringify(transaction.maxPriorityFeePerGas))\n            \n            axios.post(process.env.NEXT_PUBLIC_BASE_URL+'/api/user-buy-nft', fd,{\n              headers: {\n              'Content-Type': 'application/json',\n              'Authorization': 'Bearer '+user.access_token\n              },\n            }).then((response)  => {\n              notify(\"success\", 'Buy NFT successfully!')\n              const data = response.data;\n            }).catch(function (error) {\n              // handle error\n              if(error.response.status == 400){\n                notify(\"error\", error.response.data.error)\n              }else if(error.response.status == 401) {\n                localStorage.removeItem(\"user\")\n                router.push('/login')\n              }else{\n                notify(\"error\", 'Something went wrong please try again!')\n              } \n            })\n            loadNFTs()\n          }\n         \n        }\n    }\n    if (loadingState === 'loaded' && !nfts.length) return (\n        <div>\n        <Mainheader />\n        \n        <section className=\"latestnft\">\n            <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                <h2 className=\"heading\">Wishlist<div className=\"divider\"></div></h2>\n                </div>\n            </div>\n            <div className=\"\">\n                \n                <div className=\"row myfvtrow\">\n                <h1 className=\"py-10 px-20 text-3xl\">Wishlist Empty</h1>\n                </div>\n            </div>\n            </div>\n        \n        </section>\n        <Mainfooter />\n        </div>\n    )\n    return (\n\n\n        <div>\n            \n        <Mainheader />\n        <section className=\"latestnft\">\n            <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                <h2 className=\"heading\">Wishlist<div className=\"divider\"></div></h2>\n                </div>\n            </div>\n            {loading ? (\n\n                <div className=\"loader-container\">\n                <div className=\"spinner\"></div>\n                </div>\n            ) : (\n                <div className=\"\">\n                \n                <div className=\"row myfvtrow\">\n                {\n                    nfts.map((nft, i) => (\n                    nft?<div key={i} className=\"col-sm-6 col-md-4 col-lg-3 myfvt\">      \n                    {/* <div className=\"col-sm-6 col-md-4 col-lg-3 myfvt\"> */}\n                    <div className=\"nftbox\">\n                        <div className=\"nftbox-img\">\n                        <a href=\"#\"><img src={nft.image} className=\"img-fluid\" alt=\"\"/></a>\n                        <div className=\"counter\">\n                            {/* <span>717 : 6 : 32 : 34</span> */}\n                        </div>\n                        </div>\n                        <div className=\"nftbox-desc\">\n                        <h3><a href=\"#\">{nft.name}</a></h3>\n                        <h5 className=\"rate\"> \n                            $ {nft.DollarPrice.toFixed(7)}\n                            <span className=\"like-design\"><a onClick={() => wishlist(nft.wishlist_id, nft.product_id)} id={nft.wishlist_id} ><i className='fa fa-heart' aria-hidden=\"true\"></i></a></span>\n\n                        </h5>\n                        <button className=\"btn btn-info\" id={'button_disabled'+nft.product_id}   onClick={() => buyNft(nft)} data-id={nft.tokenId} disabled={nft.status == 'sold' ? true : false} >{nft.status == 'sold' ? 'Sold': 'Buy'}</button>\n                        </div>\n                    </div>\n                    </div> : \"\"\n                    )) \n                    }\n                </div>\n                </div>\n            )}\n                </div>\n        \n        </section>\n        <Mainfooter />\n        </div>\n\n    )\n}",{"ruleId":"330","severity":1,"message":"331","line":44,"column":7,"nodeType":"332","endLine":44,"endColumn":83},{"ruleId":"330","severity":1,"message":"331","line":45,"column":7,"nodeType":"332","endLine":45,"endColumn":107},{"ruleId":"330","severity":1,"message":"331","line":48,"column":7,"nodeType":"332","endLine":48,"endColumn":47},{"ruleId":"330","severity":1,"message":"331","line":49,"column":7,"nodeType":"332","endLine":49,"endColumn":95},{"ruleId":"330","severity":1,"message":"331","line":50,"column":7,"nodeType":"332","endLine":50,"endColumn":50},{"ruleId":"330","severity":1,"message":"331","line":51,"column":7,"nodeType":"332","endLine":51,"endColumn":79},{"ruleId":"330","severity":1,"message":"331","line":52,"column":7,"nodeType":"332","endLine":52,"endColumn":64},{"ruleId":"333","severity":1,"message":"334","line":50,"column":6,"nodeType":"335","endLine":50,"endColumn":8,"suggestions":"336"},{"ruleId":"337","severity":1,"message":"338","line":597,"column":39,"nodeType":"332","endLine":597,"endColumn":90},{"ruleId":"337","severity":1,"message":"338","line":606,"column":43,"nodeType":"332","endLine":606,"endColumn":156},{"ruleId":"337","severity":1,"message":"338","line":28,"column":6,"nodeType":"332","endLine":28,"endColumn":83},{"ruleId":"337","severity":1,"message":"338","line":29,"column":3,"nodeType":"332","endLine":29,"endColumn":80},{"ruleId":"337","severity":1,"message":"338","line":30,"column":3,"nodeType":"332","endLine":30,"endColumn":80},{"ruleId":"337","severity":1,"message":"338","line":31,"column":3,"nodeType":"332","endLine":31,"endColumn":80},{"ruleId":"337","severity":1,"message":"338","line":32,"column":3,"nodeType":"332","endLine":32,"endColumn":80},{"ruleId":"337","severity":1,"message":"338","line":33,"column":3,"nodeType":"332","endLine":33,"endColumn":80},{"ruleId":"339","severity":1,"message":"340","line":37,"column":7,"nodeType":"332","endLine":37,"endColumn":43},{"ruleId":"337","severity":1,"message":"338","line":37,"column":43,"nodeType":"332","endLine":37,"endColumn":107},{"ruleId":"339","severity":1,"message":"341","line":58,"column":13,"nodeType":"332","endLine":58,"endColumn":48},{"ruleId":"339","severity":1,"message":"342","line":65,"column":13,"nodeType":"332","endLine":65,"endColumn":51},{"ruleId":"337","severity":1,"message":"338","line":89,"column":36,"nodeType":"332","endLine":89,"endColumn":102},{"ruleId":"339","severity":1,"message":"343","line":122,"column":11,"nodeType":"332","endLine":122,"endColumn":64},{"ruleId":"337","severity":1,"message":"338","line":136,"column":13,"nodeType":"332","endLine":136,"endColumn":241},{"ruleId":"339","severity":1,"message":"344","line":148,"column":23,"nodeType":"332","endLine":148,"endColumn":73},{"ruleId":"345","severity":1,"message":"346","line":152,"column":93,"nodeType":"332","endLine":152,"endColumn":126},{"ruleId":"337","severity":1,"message":"338","line":152,"column":93,"nodeType":"332","endLine":152,"endColumn":126},{"ruleId":"339","severity":1,"message":"347","line":154,"column":23,"nodeType":"332","endLine":154,"endColumn":100},{"ruleId":"339","severity":1,"message":"348","line":155,"column":23,"nodeType":"332","endLine":155,"endColumn":68},{"ruleId":"339","severity":1,"message":"349","line":156,"column":23,"nodeType":"332","endLine":156,"endColumn":75},{"ruleId":"339","severity":1,"message":"350","line":159,"column":19,"nodeType":"332","endLine":159,"endColumn":65},{"ruleId":"345","severity":1,"message":"346","line":270,"column":31,"nodeType":"332","endLine":270,"endColumn":71},{"ruleId":"337","severity":1,"message":"338","line":270,"column":31,"nodeType":"332","endLine":270,"endColumn":71},{"ruleId":"337","severity":1,"message":"338","line":381,"column":19,"nodeType":"332","endLine":381,"endColumn":87},{"ruleId":"337","severity":1,"message":"338","line":384,"column":19,"nodeType":"332","endLine":384,"endColumn":87},{"ruleId":"337","severity":1,"message":"338","line":431,"column":37,"nodeType":"332","endLine":431,"endColumn":88},{"ruleId":"337","severity":1,"message":"338","line":440,"column":31,"nodeType":"332","endLine":440,"endColumn":144},{"ruleId":"337","severity":1,"message":"338","line":481,"column":27,"nodeType":"332","endLine":481,"endColumn":91},{"ruleId":"337","severity":1,"message":"338","line":493,"column":27,"nodeType":"332","endLine":493,"endColumn":91},{"ruleId":"337","severity":1,"message":"338","line":501,"column":27,"nodeType":"332","endLine":501,"endColumn":91},{"ruleId":"337","severity":1,"message":"338","line":513,"column":27,"nodeType":"332","endLine":513,"endColumn":91},{"ruleId":"337","severity":1,"message":"338","line":522,"column":27,"nodeType":"332","endLine":522,"endColumn":91},{"ruleId":"337","severity":1,"message":"338","line":530,"column":27,"nodeType":"332","endLine":530,"endColumn":91},{"ruleId":"337","severity":1,"message":"338","line":542,"column":27,"nodeType":"332","endLine":542,"endColumn":91},{"ruleId":"337","severity":1,"message":"338","line":550,"column":27,"nodeType":"332","endLine":550,"endColumn":91},{"ruleId":"337","severity":1,"message":"338","line":589,"column":64,"nodeType":"332","endLine":589,"endColumn":120},{"ruleId":"337","severity":1,"message":"338","line":100,"column":33,"nodeType":"332","endLine":100,"endColumn":75},{"ruleId":"333","severity":1,"message":"351","line":24,"column":6,"nodeType":"335","endLine":24,"endColumn":10,"suggestions":"352"},{"ruleId":"345","severity":1,"message":"346","line":62,"column":15,"nodeType":"332","endLine":62,"endColumn":71},{"ruleId":"337","severity":1,"message":"338","line":62,"column":15,"nodeType":"332","endLine":62,"endColumn":71},{"ruleId":"337","severity":1,"message":"338","line":114,"column":79,"nodeType":"332","endLine":114,"endColumn":121},{"ruleId":"333","severity":1,"message":"353","line":35,"column":6,"nodeType":"335","endLine":35,"endColumn":8,"suggestions":"354"},{"ruleId":"345","severity":1,"message":"346","line":116,"column":65,"nodeType":"332","endLine":116,"endColumn":141},{"ruleId":"337","severity":1,"message":"338","line":116,"column":65,"nodeType":"332","endLine":116,"endColumn":141},{"ruleId":"333","severity":1,"message":"355","line":40,"column":6,"nodeType":"335","endLine":40,"endColumn":8,"suggestions":"356"},{"ruleId":"345","severity":1,"message":"346","line":170,"column":65,"nodeType":"332","endLine":170,"endColumn":141},{"ruleId":"337","severity":1,"message":"338","line":170,"column":65,"nodeType":"332","endLine":170,"endColumn":141},{"ruleId":"333","severity":1,"message":"355","line":40,"column":6,"nodeType":"335","endLine":40,"endColumn":8,"suggestions":"357"},{"ruleId":"345","severity":1,"message":"346","line":175,"column":65,"nodeType":"332","endLine":175,"endColumn":141},{"ruleId":"337","severity":1,"message":"338","line":175,"column":65,"nodeType":"332","endLine":175,"endColumn":141},{"ruleId":"333","severity":1,"message":"334","line":28,"column":6,"nodeType":"335","endLine":28,"endColumn":8,"suggestions":"358"},{"ruleId":"337","severity":1,"message":"338","line":269,"column":37,"nodeType":"332","endLine":269,"endColumn":88},{"ruleId":"333","severity":1,"message":"359","line":39,"column":6,"nodeType":"335","endLine":39,"endColumn":8,"suggestions":"360"},{"ruleId":"345","severity":1,"message":"346","line":199,"column":33,"nodeType":"332","endLine":199,"endColumn":167},{"ruleId":"337","severity":1,"message":"338","line":199,"column":33,"nodeType":"332","endLine":199,"endColumn":167},{"ruleId":"333","severity":1,"message":"334","line":43,"column":6,"nodeType":"335","endLine":43,"endColumn":8,"suggestions":"361"},{"ruleId":"337","severity":1,"message":"338","line":558,"column":39,"nodeType":"332","endLine":558,"endColumn":90},{"ruleId":"337","severity":1,"message":"338","line":564,"column":70,"nodeType":"332","endLine":564,"endColumn":176},{"ruleId":"333","severity":1,"message":"334","line":27,"column":6,"nodeType":"335","endLine":27,"endColumn":8,"suggestions":"362"},{"ruleId":"337","severity":1,"message":"338","line":188,"column":35,"nodeType":"332","endLine":188,"endColumn":86},{"ruleId":"333","severity":1,"message":"363","line":19,"column":6,"nodeType":"335","endLine":19,"endColumn":8,"suggestions":"364"},{"ruleId":"333","severity":1,"message":"365","line":34,"column":6,"nodeType":"335","endLine":34,"endColumn":8,"suggestions":"366"},{"ruleId":"345","severity":1,"message":"346","line":161,"column":27,"nodeType":"332","endLine":161,"endColumn":158},{"ruleId":"337","severity":1,"message":"338","line":161,"column":27,"nodeType":"332","endLine":161,"endColumn":158},{"ruleId":"333","severity":1,"message":"355","line":44,"column":6,"nodeType":"335","endLine":44,"endColumn":8,"suggestions":"367"},{"ruleId":"345","severity":1,"message":"346","line":108,"column":32,"nodeType":"332","endLine":108,"endColumn":102},{"ruleId":"337","severity":1,"message":"338","line":108,"column":32,"nodeType":"332","endLine":108,"endColumn":102},{"ruleId":"345","severity":1,"message":"346","line":359,"column":23,"nodeType":"332","endLine":359,"endColumn":126},{"ruleId":"337","severity":1,"message":"338","line":359,"column":23,"nodeType":"332","endLine":359,"endColumn":126},{"ruleId":"333","severity":1,"message":"353","line":41,"column":6,"nodeType":"335","endLine":41,"endColumn":8,"suggestions":"368"},{"ruleId":"345","severity":1,"message":"346","line":204,"column":35,"nodeType":"332","endLine":204,"endColumn":111},{"ruleId":"337","severity":1,"message":"338","line":204,"column":35,"nodeType":"332","endLine":204,"endColumn":111},{"ruleId":"345","severity":1,"message":"346","line":300,"column":27,"nodeType":"332","endLine":300,"endColumn":158},{"ruleId":"337","severity":1,"message":"338","line":300,"column":27,"nodeType":"332","endLine":300,"endColumn":158},{"ruleId":"333","severity":1,"message":"369","line":90,"column":6,"nodeType":"335","endLine":90,"endColumn":8,"suggestions":"370"},{"ruleId":"345","severity":1,"message":"346","line":707,"column":65,"nodeType":"332","endLine":707,"endColumn":141},{"ruleId":"337","severity":1,"message":"338","line":707,"column":65,"nodeType":"332","endLine":707,"endColumn":141},{"ruleId":"345","severity":1,"message":"346","line":837,"column":27,"nodeType":"332","endLine":837,"endColumn":80},{"ruleId":"337","severity":1,"message":"338","line":837,"column":27,"nodeType":"332","endLine":837,"endColumn":80},{"ruleId":"345","severity":1,"message":"346","line":857,"column":106,"nodeType":"332","endLine":857,"endColumn":191},{"ruleId":"337","severity":1,"message":"338","line":857,"column":106,"nodeType":"332","endLine":857,"endColumn":191},{"ruleId":"345","severity":1,"message":"346","line":858,"column":27,"nodeType":"332","endLine":858,"endColumn":173},{"ruleId":"337","severity":1,"message":"338","line":858,"column":27,"nodeType":"332","endLine":858,"endColumn":173},{"ruleId":"345","severity":1,"message":"346","line":859,"column":27,"nodeType":"332","endLine":859,"endColumn":173},{"ruleId":"337","severity":1,"message":"338","line":859,"column":27,"nodeType":"332","endLine":859,"endColumn":173},{"ruleId":"345","severity":1,"message":"346","line":868,"column":104,"nodeType":"332","endLine":868,"endColumn":188},{"ruleId":"337","severity":1,"message":"338","line":868,"column":104,"nodeType":"332","endLine":868,"endColumn":188},{"ruleId":"345","severity":1,"message":"346","line":869,"column":27,"nodeType":"332","endLine":869,"endColumn":173},{"ruleId":"337","severity":1,"message":"338","line":869,"column":27,"nodeType":"332","endLine":869,"endColumn":173},{"ruleId":"345","severity":1,"message":"346","line":870,"column":27,"nodeType":"332","endLine":870,"endColumn":173},{"ruleId":"337","severity":1,"message":"338","line":870,"column":27,"nodeType":"332","endLine":870,"endColumn":173},{"ruleId":"345","severity":1,"message":"346","line":878,"column":104,"nodeType":"332","endLine":878,"endColumn":188},{"ruleId":"337","severity":1,"message":"338","line":878,"column":104,"nodeType":"332","endLine":878,"endColumn":188},{"ruleId":"345","severity":1,"message":"346","line":879,"column":27,"nodeType":"332","endLine":879,"endColumn":173},{"ruleId":"337","severity":1,"message":"338","line":879,"column":27,"nodeType":"332","endLine":879,"endColumn":173},{"ruleId":"345","severity":1,"message":"346","line":880,"column":27,"nodeType":"332","endLine":880,"endColumn":173},{"ruleId":"337","severity":1,"message":"338","line":880,"column":27,"nodeType":"332","endLine":880,"endColumn":173},{"ruleId":"345","severity":1,"message":"346","line":888,"column":104,"nodeType":"332","endLine":888,"endColumn":188},{"ruleId":"337","severity":1,"message":"338","line":888,"column":104,"nodeType":"332","endLine":888,"endColumn":188},{"ruleId":"345","severity":1,"message":"346","line":889,"column":27,"nodeType":"332","endLine":889,"endColumn":173},{"ruleId":"337","severity":1,"message":"338","line":889,"column":27,"nodeType":"332","endLine":889,"endColumn":173},{"ruleId":"345","severity":1,"message":"346","line":890,"column":27,"nodeType":"332","endLine":890,"endColumn":173},{"ruleId":"337","severity":1,"message":"338","line":890,"column":27,"nodeType":"332","endLine":890,"endColumn":173},{"ruleId":"345","severity":1,"message":"346","line":898,"column":104,"nodeType":"332","endLine":898,"endColumn":188},{"ruleId":"337","severity":1,"message":"338","line":898,"column":104,"nodeType":"332","endLine":898,"endColumn":188},{"ruleId":"345","severity":1,"message":"346","line":899,"column":27,"nodeType":"332","endLine":899,"endColumn":173},{"ruleId":"337","severity":1,"message":"338","line":899,"column":27,"nodeType":"332","endLine":899,"endColumn":173},{"ruleId":"345","severity":1,"message":"346","line":900,"column":27,"nodeType":"332","endLine":900,"endColumn":173},{"ruleId":"337","severity":1,"message":"338","line":900,"column":27,"nodeType":"332","endLine":900,"endColumn":173},{"ruleId":"345","severity":1,"message":"346","line":964,"column":27,"nodeType":"332","endLine":964,"endColumn":76},{"ruleId":"337","severity":1,"message":"338","line":964,"column":27,"nodeType":"332","endLine":964,"endColumn":76},{"ruleId":"345","severity":1,"message":"346","line":981,"column":198,"nodeType":"332","endLine":981,"endColumn":284},{"ruleId":"337","severity":1,"message":"338","line":981,"column":198,"nodeType":"332","endLine":981,"endColumn":284},{"ruleId":"345","severity":1,"message":"346","line":982,"column":35,"nodeType":"332","endLine":982,"endColumn":188},{"ruleId":"337","severity":1,"message":"338","line":982,"column":35,"nodeType":"332","endLine":982,"endColumn":188},{"ruleId":"345","severity":1,"message":"346","line":983,"column":35,"nodeType":"332","endLine":983,"endColumn":188},{"ruleId":"337","severity":1,"message":"338","line":983,"column":35,"nodeType":"332","endLine":983,"endColumn":188},{"ruleId":"345","severity":1,"message":"346","line":992,"column":199,"nodeType":"332","endLine":992,"endColumn":284},{"ruleId":"337","severity":1,"message":"338","line":992,"column":199,"nodeType":"332","endLine":992,"endColumn":284},{"ruleId":"345","severity":1,"message":"346","line":993,"column":35,"nodeType":"332","endLine":993,"endColumn":188},{"ruleId":"337","severity":1,"message":"338","line":993,"column":35,"nodeType":"332","endLine":993,"endColumn":188},{"ruleId":"345","severity":1,"message":"346","line":994,"column":35,"nodeType":"332","endLine":994,"endColumn":188},{"ruleId":"337","severity":1,"message":"338","line":994,"column":35,"nodeType":"332","endLine":994,"endColumn":188},{"ruleId":"345","severity":1,"message":"346","line":1003,"column":199,"nodeType":"332","endLine":1003,"endColumn":284},{"ruleId":"337","severity":1,"message":"338","line":1003,"column":199,"nodeType":"332","endLine":1003,"endColumn":284},{"ruleId":"345","severity":1,"message":"346","line":1004,"column":35,"nodeType":"332","endLine":1004,"endColumn":188},{"ruleId":"337","severity":1,"message":"338","line":1004,"column":35,"nodeType":"332","endLine":1004,"endColumn":188},{"ruleId":"345","severity":1,"message":"346","line":1005,"column":35,"nodeType":"332","endLine":1005,"endColumn":188},{"ruleId":"337","severity":1,"message":"338","line":1005,"column":35,"nodeType":"332","endLine":1005,"endColumn":188},{"ruleId":"345","severity":1,"message":"346","line":1014,"column":198,"nodeType":"332","endLine":1014,"endColumn":283},{"ruleId":"337","severity":1,"message":"338","line":1014,"column":198,"nodeType":"332","endLine":1014,"endColumn":283},{"ruleId":"345","severity":1,"message":"346","line":1015,"column":35,"nodeType":"332","endLine":1015,"endColumn":188},{"ruleId":"337","severity":1,"message":"338","line":1015,"column":35,"nodeType":"332","endLine":1015,"endColumn":188},{"ruleId":"345","severity":1,"message":"346","line":1016,"column":35,"nodeType":"332","endLine":1016,"endColumn":188},{"ruleId":"337","severity":1,"message":"338","line":1016,"column":35,"nodeType":"332","endLine":1016,"endColumn":188},{"ruleId":"345","severity":1,"message":"346","line":1025,"column":198,"nodeType":"332","endLine":1025,"endColumn":283},{"ruleId":"337","severity":1,"message":"338","line":1025,"column":198,"nodeType":"332","endLine":1025,"endColumn":283},{"ruleId":"345","severity":1,"message":"346","line":1026,"column":35,"nodeType":"332","endLine":1026,"endColumn":188},{"ruleId":"337","severity":1,"message":"338","line":1026,"column":35,"nodeType":"332","endLine":1026,"endColumn":188},{"ruleId":"345","severity":1,"message":"346","line":1027,"column":35,"nodeType":"332","endLine":1027,"endColumn":188},{"ruleId":"337","severity":1,"message":"338","line":1027,"column":35,"nodeType":"332","endLine":1027,"endColumn":188},{"ruleId":"333","severity":1,"message":"371","line":38,"column":6,"nodeType":"335","endLine":38,"endColumn":34,"suggestions":"372"},{"ruleId":"333","severity":1,"message":"359","line":31,"column":6,"nodeType":"335","endLine":31,"endColumn":8,"suggestions":"373"},{"ruleId":"345","severity":1,"message":"346","line":155,"column":57,"nodeType":"332","endLine":155,"endColumn":176},{"ruleId":"337","severity":1,"message":"338","line":155,"column":57,"nodeType":"332","endLine":155,"endColumn":176},{"ruleId":"345","severity":1,"message":"346","line":159,"column":65,"nodeType":"332","endLine":159,"endColumn":129},{"ruleId":"337","severity":1,"message":"338","line":159,"column":65,"nodeType":"332","endLine":159,"endColumn":129},{"ruleId":"345","severity":1,"message":"346","line":163,"column":65,"nodeType":"332","endLine":163,"endColumn":129},{"ruleId":"337","severity":1,"message":"338","line":163,"column":65,"nodeType":"332","endLine":163,"endColumn":129},{"ruleId":"345","severity":1,"message":"346","line":165,"column":65,"nodeType":"332","endLine":165,"endColumn":129},{"ruleId":"337","severity":1,"message":"338","line":165,"column":65,"nodeType":"332","endLine":165,"endColumn":129},{"ruleId":"337","severity":1,"message":"338","line":217,"column":73,"nodeType":"332","endLine":217,"endColumn":125},{"ruleId":"337","severity":1,"message":"338","line":237,"column":73,"nodeType":"332","endLine":237,"endColumn":125},{"ruleId":"333","severity":1,"message":"334","line":27,"column":8,"nodeType":"335","endLine":27,"endColumn":10,"suggestions":"374"},{"ruleId":"337","severity":1,"message":"338","line":329,"column":37,"nodeType":"332","endLine":329,"endColumn":88},"@next/next/no-sync-scripts","Synchronous scripts should not be used. See: https://nextjs.org/docs/messages/no-sync-scripts","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadNFTs'. Either include it or remove the dependency array.","ArrayExpression",["375"],"@next/next/no-img-element","Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element","@next/next/no-html-link-for-pages","Do not use an `<a>` element to navigate to `/`. Use `<Link />` from `next/link` instead. See: https://nextjs.org/docs/messages/no-html-link-for-pages","Do not use an `<a>` element to navigate to `/slime-seat-management/`. Use `<Link />` from `next/link` instead. See: https://nextjs.org/docs/messages/no-html-link-for-pages","Do not use an `<a>` element to navigate to `/shipping-container-video/`. Use `<Link />` from `next/link` instead. See: https://nextjs.org/docs/messages/no-html-link-for-pages","Do not use an `<a>` element to navigate to `/shipping-container/`. Use `<Link />` from `next/link` instead. See: https://nextjs.org/docs/messages/no-html-link-for-pages","Do not use an `<a>` element to navigate to `/view-profile/`. Use `<Link />` from `next/link` instead. See: https://nextjs.org/docs/messages/no-html-link-for-pages","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Do not use an `<a>` element to navigate to `/create-nft/`. Use `<Link />` from `next/link` instead. See: https://nextjs.org/docs/messages/no-html-link-for-pages","Do not use an `<a>` element to navigate to `/my-nft/`. Use `<Link />` from `next/link` instead. See: https://nextjs.org/docs/messages/no-html-link-for-pages","Do not use an `<a>` element to navigate to `/purchased-nfts/`. Use `<Link />` from `next/link` instead. See: https://nextjs.org/docs/messages/no-html-link-for-pages","Do not use an `<a>` element to navigate to `/wishlist/`. Use `<Link />` from `next/link` instead. See: https://nextjs.org/docs/messages/no-html-link-for-pages","React Hook useEffect has a missing dependency: 'fetchNFT'. Either include it or remove the dependency array.",["376"],"React Hook useEffect has a missing dependency: 'MSCVideoList'. Either include it or remove the dependency array.",["377"],"React Hook useEffect has a missing dependency: 'SCVideoList'. Either include it or remove the dependency array.",["378"],["379"],["380"],"React Hook useEffect has a missing dependency: 'UserDetail'. Either include it or remove the dependency array.",["381"],["382"],["383"],"React Hook useEffect has a missing dependency: 'formInput'. Either include it or remove the dependency array. You can also do a functional update 'updateFormInput(f => ...)' if you only need 'formInput' in the 'updateFormInput' call.",["384"],"React Hook useEffect has a missing dependency: 'GetMSC'. Either include it or remove the dependency array.",["385"],["386"],["387"],"React Hook useEffect has a missing dependency: 'SlimeSeatManagementList'. Either include it or remove the dependency array.",["388"],"React Hook useEffect has a missing dependency: 'GetTransactionHistory'. Either include it or remove the dependency array.",["389"],["390"],["391"],{"desc":"392","fix":"393"},{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},{"desc":"398","fix":"400"},{"desc":"392","fix":"401"},{"desc":"402","fix":"403"},{"desc":"392","fix":"404"},{"desc":"392","fix":"405"},{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},{"desc":"398","fix":"410"},{"desc":"396","fix":"411"},{"desc":"412","fix":"413"},{"desc":"414","fix":"415"},{"desc":"402","fix":"416"},{"desc":"392","fix":"417"},"Update the dependencies array to be: [loadNFTs]",{"range":"418","text":"419"},"Update the dependencies array to be: [fetchNFT, id]",{"range":"420","text":"421"},"Update the dependencies array to be: [MSCVideoList]",{"range":"422","text":"423"},"Update the dependencies array to be: [SCVideoList]",{"range":"424","text":"425"},{"range":"426","text":"425"},{"range":"427","text":"419"},"Update the dependencies array to be: [UserDetail]",{"range":"428","text":"429"},{"range":"430","text":"419"},{"range":"431","text":"419"},"Update the dependencies array to be: [formInput]",{"range":"432","text":"433"},"Update the dependencies array to be: [GetMSC]",{"range":"434","text":"435"},{"range":"436","text":"425"},{"range":"437","text":"423"},"Update the dependencies array to be: [SlimeSeatManagementList]",{"range":"438","text":"439"},"Update the dependencies array to be: [FilteredTransactionHostory, GetTransactionHistory]",{"range":"440","text":"441"},{"range":"442","text":"429"},{"range":"443","text":"419"},[1397,1399],"[loadNFTs]",[718,722],"[fetchNFT, id]",[1154,1156],"[MSCVideoList]",[1266,1268],"[SCVideoList]",[1142,1144],[852,854],[972,974],"[UserDetail]",[1165,1167],[886,888],[693,695],"[formInput]",[825,827],"[GetMSC]",[1410,1412],[1265,1267],[3058,3060],"[SlimeSeatManagementList]",[1053,1081],"[FilteredTransactionHostory, GetTransactionHistory]",[853,855],[910,912]]